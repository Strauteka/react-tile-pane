{"version":3,"sources":["components/tilePane/index.ts","components/tilePane/view/index.ts","components/tilePane/view/Provider/index.tsx","components/tilePane/model/TileNode/index.ts","components/tilePane/view/Provider/config/TabBar/index.tsx","components/tilePane/view/Provider/config/StretchBar/index.ts","components/tilePane/view/Provider/config/PreBox/index.ts","components/tilePane/view/Provider/config/Pane/index.ts","components/tilePane/view/Provider/config/index.ts","components/tilePane/model/TileNode/util/dehydrate.ts","components/tilePane/model/TileNode/util/index.ts","components/tilePane/util/index.ts","components/tilePane/view/DraggableTitle/index.tsx","components/index.ts","components/tilePane/view/DraggableTitle/hook/useMovingChecker/index.ts","components/tilePane/model/TileNode/helper/isTileLeaf.ts","components/tilePane/model/TileNode/helper/createTileNode.ts","components/tilePane/model/TileNode/helper/increasingID.ts","components/tilePane/view/DraggableTitle/hook/useDragAndPosition/index.ts","components/tilePane/view/DraggableTitle/hook/useThrottle/index.ts","components/tilePane/view/DraggableTitle/util/index.ts","components/tilePane/model/TileNode/util/setChildren.ts","components/tilePane/model/index.ts","components/tilePane/util/unfold.ts","components/tilePane/util/createTitlePanes.ts","components/tilePane/util/array.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/index.tsx","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useChild.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useStyle.ts","components/tilePane/view/Container/components/TilePanes/index.tsx","components/tilePane/view/Container/components/TilePanes/hook/usePanes/index.ts","components/tilePane/view/Container/components/TabsBars/components/TabsBar/index.tsx","components/tilePane/view/Container/components/TabsBars/components/TabsBar/hook/index.ts","components/tilePane/view/Container/components/TabsBars/index.tsx","components/tilePane/view/Container/components/TabsBars/hook/index.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/util/calcBarStyles.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/index.tsx","components/tilePane/view/Container/components/StretchBars/StretchBar/hook/index.ts","components/tilePane/view/Container/components/StretchBars/index.tsx","components/tilePane/view/Container/utils/toCssLength.ts","components/tilePane/view/Container/index.tsx","components/tilePane/view/Provider/controller/MovingTab/startMovingTab.ts","components/tilePane/view/Provider/controller/MovingTab/stopMovingTab.ts","components/tilePane/view/Provider/controller/initRootNode.ts","components/tilePane/view/Provider/controller/index.ts","components/tilePane/view/Provider/controller/switchLeafTab.ts","components/tilePane/view/Provider/controller/moveBar.ts","components/tilePane/model/StretchBar/util/index.ts","components/tilePane/model/StretchBar/index.ts","components/tilePane/view/Provider/data/TitleRects/index.tsx","components/tilePane/view/Provider/data/index.ts","components/tilePane/view/DraggableTitle/components/PreBox/util/calcBoxPosition.ts","components/tilePane/view/DraggableTitle/components/PreBox/util/index.ts","components/tilePane/view/DraggableTitle/components/PreBox/index.tsx","components/tilePane/view/DraggableTitle/components/PreBox/util/calcLeafWithTitleRect.ts","App/App.tsx","common/reportWebVitals.ts","index.tsx"],"names":["TileProviderInner","children","rootNodeSub","rootNode","tilePanes","tabBar","defaultTabsBarConfig","stretchBar","defaultStretchBar","preBox","defaultPreBox","pane","defaultPane","useReducer","tileStoreReducer","movingTabs","initRootNode","branches","leaves","stretchBars","tileStoreDispatch","childrenMemo","useMemo","useMeasure","scroll","targetRef","containerRect","Provider","value","TileProvider","memo","TileNode","id","increasingID","parent","grow","rect","top","left","width","height","TileLeaf","onTab","rest","setChildren","leafSetChildren","dehydrate","leafDehydrate","TileBranch","isRow","branchSetChildren","branchDehydrate","TabBarInner","tabs","action","checkTabMoving","useMovingChecker","className","map","tab","i","DraggableTitle","isMoving","name","onClick","switchTab","closeTab","render","thickness","position","isReverse","TabsBarContext","createContext","style","cursor","StretchBarConfigContext","throttle","branch","leaf","PreBoxConfigContext","PaneContext","TitlePanesContext","this","it","isTileLeaf","calcChildGrows","growsSolid","c","growSum","reduce","s","n","calcChildRects","grows","childLeft","arr","push","childTop","DraggableTitleInner","props","paneWithPreBoxRef","useRef","useContext","LeafContext","useDragAndPosition","bind","childrenFn","styleFn","classNameFn","orFn","useFn","isDragging","setTitleRects","SetTitleRectsContext","useEffect","styled","visibility","transform","zIndex","userSelect","ref","MovingTabsContext","useCallback","includes","node","Array","isTilePaneNames","list","Object","createTileBranch","sub","undefined","toString","dispatch","TileDispatchContext","useState","setPosition","velocity","setVelocities","useGesture","onDrag","down","xy","onDragStart","tabToStartMoving","onDragEnd","tabToStopMoving","current","drag","threshold","useThrottleFn","fn","ms","result","timerRef","throttledFn","window","setTimeout","clearTimeout","orFunc","args","filter","child","findIndex","unfold","forEach","p","prevPane","bar","StretchBarEntity","createTitlePanes","obj","keys","key","removeInArray","one","newArr","slice","index","Function","splice","replaceInArray","newOne","TilePaneInner","findChildPane","find","useChild","toQuadrant","isVertical","isAfter","completeUnit","toCssCalcLength","toCssLength","display","useStyle","TilePane","TilePanesInner","panes","TileLeavesContext","usePanes","TilePanes","TabsBarInner","isHidden","leafToSwitchTab","leafToCloseTab","Render","table","bottom","right","TabsBar","TabsBarsInner","tabBars","tabBarsProps","tabIndex","leafIndex","useTabs","TabsBars","calcBarStyles","StretchBarInner","parentPane","ContainerRectContext","move","accumulation","distance","barToMove","useThrottleMove","classNamed","moveBar","mx","my","useDrag","delta","enabled","nextPane","StretchBar","React","StretchBarsInner","bars","StretchBarsContext","StretchBars","length","percent","offset","mode","len","TileContainerInner","ContainerRefContext","TileContainer","startMovingTab","notMoving","newMovingTabs","existedTab","l","newChildren","removeNode","nodes","stopMovingTab","target","into","isNext","next","isBrother","isSegment","row","indexInParent","newNodes","segment","fission","insertPane","newLeaf","oldLeaf","state","switchLeafTab","newLeaves","previousPaneGrow","previousPane","nextPaneGrow","isMoved","growA","growB","isValidGrow","TitleRectsContext","TitleRectsProvider","absolute2Relative","titleRects","x","y","TileBranchesContext","defaultRect","MousePositionContext","branchProportion","leafProportion","calcPreBox","leafWithTitleRects","innerPosition","config","titleRect","isInPane","isEnd","PreBoxInner","preBoxInTabBar","title","calcLeafWithTitleRect","calcLazyPreBox","paneWithPreBox","boxPosition","toInContainer","currentTitle","intoLeft","intoRight","intoTop","intoBottom","intoPrev","intoNext","calcTitleBoxPosition","proportion","calcBoxPosition","PreBox","Arbutus","number","count","Apple","arbutus","cherry","apple","banana","lemon","mango","pomelo","nodeList","names","rootPane","App","href","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41411a12.chunk.js","sourcesContent":["export * from './model'\nexport * from './view'\nexport * from './util'\n","export * from './Provider'\nexport * from './Container'\nexport * from './DraggableTitle'\n","import React, { memo, useMemo, useReducer } from 'react'\nimport useMeasure from 'react-use-measure'\nimport {\n  PreBoxConfig,\n  StretchBarConfig,\n  TileBranchSubstance,\n  TilePane,\n  TitleRectsProvider,\n} from '../..'\nimport {\n  TitlePanesContext,\n  ContainerRectContext,\n  ContainerRefContext,\n  MovingTabsContext,\n  StretchBarsContext,\n  TileBranchesContext,\n  TileDispatchContext,\n  TileLeavesContext,\n  TileStoreReducer,\n  initRootNode,\n  TabsBarContext,\n  tileStoreReducer,\n  TabsBarConfig,\n  defaultTabsBarConfig,\n  StretchBarConfigContext,\n  defaultStretchBar,\n  PaneContext,\n} from '.'\nimport {\n  defaultPane,\n  defaultPreBox,\n  PaneConfig,\n  PreBoxConfigContext,\n} from './config'\n\nexport interface TileProviderProps {\n  children?: React.ReactNode\n  rootNode: TileBranchSubstance\n  tilePanes: TilePane[]\n  tabBar?: TabsBarConfig\n  preBox?: PreBoxConfig\n  stretchBar?: StretchBarConfig\n  pane?: PaneConfig\n}\n\nconst TileProviderInner: React.FC<TileProviderProps> = ({\n  children,\n  rootNode: rootNodeSub,\n  tilePanes,\n  tabBar = defaultTabsBarConfig,\n  stretchBar = defaultStretchBar,\n  preBox = defaultPreBox,\n  pane = defaultPane,\n}: TileProviderProps) => {\n  const [\n    { branches, leaves, stretchBars, movingTabs },\n    tileStoreDispatch,\n  ] = useReducer<TileStoreReducer>(tileStoreReducer, {\n    movingTabs: [],\n    ...initRootNode(rootNodeSub),\n  })\n\n  const childrenMemo = useMemo(() => children, [children])\n  const [targetRef, containerRect] = useMeasure({ scroll: true })\n  return (\n    <ContainerRefContext.Provider value={targetRef}>\n      <PreBoxConfigContext.Provider value={preBox}>\n        <TitlePanesContext.Provider value={tilePanes}>\n          <ContainerRectContext.Provider value={containerRect}>\n            <TileBranchesContext.Provider value={branches}>\n              <StretchBarConfigContext.Provider value={stretchBar}>\n                <TileLeavesContext.Provider value={leaves}>\n                  <PaneContext.Provider value={pane}>\n                    <StretchBarsContext.Provider value={stretchBars}>\n                      <TileDispatchContext.Provider value={tileStoreDispatch}>\n                        <MovingTabsContext.Provider value={movingTabs}>\n                          <TabsBarContext.Provider value={tabBar}>\n                            <TitleRectsProvider>\n                              {childrenMemo}\n                            </TitleRectsProvider>\n                          </TabsBarContext.Provider>\n                        </MovingTabsContext.Provider>\n                      </TileDispatchContext.Provider>\n                    </StretchBarsContext.Provider>\n                  </PaneContext.Provider>\n                </TileLeavesContext.Provider>\n              </StretchBarConfigContext.Provider>\n            </TileBranchesContext.Provider>\n          </ContainerRectContext.Provider>\n        </TitlePanesContext.Provider>\n      </PreBoxConfigContext.Provider>\n    </ContainerRefContext.Provider>\n  )\n}\n\nexport const TileProvider = memo(TileProviderInner)\nexport * from './typings'\nexport * from './controller'\nexport * from './data'\nexport * from './config'\nexport * from './hook'\n","import { increasingID, PaneName } from '../..'\nimport {\n  TileBranchSubstance,\n  TileLeafSubstance,\n  TileNodeConstructor,\n  TileNodeRect,\n} from './typings'\nimport { branchDehydrate, leafDehydrate } from './util'\nimport { branchSetChildren, leafSetChildren } from './util/setChildren'\n\nexport class TileNode {\n  constructor(\n    public readonly id: string = increasingID(),\n    public readonly parent: TileBranch | null = null,\n    public grow: number = 1,\n    public rect: TileNodeRect = {\n      top: 0,\n      left: 0,\n      width: 1,\n      height: 1,\n    }\n  ) {}\n}\n\nexport class TileLeaf extends TileNode {\n  constructor(\n    public onTab: number = 0,\n    public children: PaneName[] = [],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n  }\n  public setChildren = leafSetChildren\n  public dehydrate = leafDehydrate\n}\n\nexport class TileBranch extends TileNode {\n  public children!: (TileBranch | TileLeaf)[]\n  constructor(\n    public isRow: boolean = false,\n    children: (TileBranchSubstance | TileLeafSubstance)[],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n    this.setChildren(children)\n  }\n\n  public setChildren = branchSetChildren\n  public dehydrate = branchDehydrate\n}\n\nexport * from './typings'\nexport * from './helper'\n","import React, { createContext, memo, useMemo } from 'react'\nimport { TabBarAction, TabBarProps } from '../../..'\nimport { DraggableTitle, useMovingChecker } from '../../../DraggableTitle'\n\nexport type TabBarPropsWithAction = TabBarProps & { action: TabBarAction }\n\nconst TabBarInner: React.FC<TabBarPropsWithAction> = ({\n  tabs,\n  onTab,\n  action,\n}) => {\n  const checkTabMoving = useMovingChecker()\n\n  return useMemo(\n    () => (\n      <div className=\"react-tile-pane-tabBar\">\n        {tabs.map((tab, i) => (\n          <DraggableTitle\n            className={(isMoving) =>\n              isMoving ? 'react-tile-pane-tabMoving' : 'react-tile-pane-tab'\n            }\n            name={tab}\n            key={tab}\n          >\n            <div\n              className={\n                i === onTab\n                  ? 'react-tile-pane-tabInner '\n                  : 'react-tile-pane-tabInnerOff'\n              }\n              onClick={() => action.switchTab(i)}\n            >\n              <div className=\"react-tile-pane-tabTitle\">{tab}</div>\n              {!checkTabMoving(tabs[i]) && (\n                <div\n                  className=\"react-tile-pane-off\"\n                  onClick={() => action.closeTab(i)}\n                >\n                  ×\n                </div>\n              )}\n            </div>\n          </DraggableTitle>\n        ))}\n      </div>\n    ),\n    [action, checkTabMoving, onTab, tabs]\n  )\n}\nexport type TabsBarPosition = 'left' | 'right' | 'top' | 'bottom'\nexport type TabsBarConfig = {\n  render: React.FC<TabBarPropsWithAction>\n  thickness: number | string\n  position: TabsBarPosition\n  preBox?: {\n    isRow?: boolean\n    isReverse?: boolean\n  }\n}\n\nexport const DefaultTabBar = memo(TabBarInner)\nexport const defaultTabsBarConfig: TabsBarConfig = {\n  render: DefaultTabBar,\n  thickness: 24,\n  position: 'top',\n  preBox: {\n    isRow: true,\n    isReverse: false,\n  },\n}\nexport const TabsBarContext = createContext<TabsBarConfig>(defaultTabsBarConfig)\n","import { CSSProperties, createContext, ReactChild } from 'react'\nexport type StretchBarConfig = {\n  style?: ((isRow: boolean) => CSSProperties) | CSSProperties\n  className?: ((isRow: boolean) => string) | string\n  child?: ((isRow: boolean) => ReactChild) | ReactChild\n  /** **millisecond**, Controls the minimum Trigger Period of the Stretch Bar */\n  throttle?: number\n}\n\nexport const defaultStretchBar: StretchBarConfig = {\n  className: (isRow) => (isRow ? 'react-tile-pane-Bar' : 'react-tile-pane-Bar'),\n  style: (isRow) => ({ cursor: isRow ? 'ew-resize' : 'ns-resize' }),\n}\n\nexport const StretchBarConfigContext = createContext<StretchBarConfig>(\n  defaultStretchBar\n)\n","import { CSSProperties, createContext, ReactChild } from 'react'\nimport { PaneWithPreBox } from '../../..'\n\nexport type PreBoxTarget = 'leaf' | 'branch' | 'tab' | null\n\nexport type PreBoxConfig = {\n  style?: ((paneWithPreBox: PaneWithPreBox) => CSSProperties) | CSSProperties\n  className?: ((paneWithPreBox: PaneWithPreBox) => string) | string\n  child?: ((paneWithPreBox: PaneWithPreBox) => ReactChild) | ReactChild\n  /** **millisecond**, Control PreBox calculation frequency */\n  throttle?: number\n}\n\nexport const defaultPreBox: PreBoxConfig = {\n  throttle: 66,\n  className: ({ branch, leaf, tab }) => {\n    if (branch) return 'react-tile-pane-preBranch'\n    if (leaf) return 'react-tile-pane-preBox'\n    if (tab) return 'react-tile-pane-preBoxInTab'\n    return 'react-tile-pane-noPreBox'\n  },\n}\n\nexport const PreBoxConfigContext = createContext<PreBoxConfig>(defaultPreBox)\n","import { createContext, CSSProperties } from 'react'\n\nexport interface PaneConfig {\n  style?: CSSProperties\n  className?: string\n}\n\nexport const defaultPane: PaneConfig = {}\n\nexport const PaneContext = createContext<PaneConfig>(defaultPane)\n","import { createContext } from 'react'\nimport { TilePane } from '../../..'\n\nexport const TitlePanesContext = createContext<TilePane[]>([])\nexport * from './TabBar'\nexport * from './StretchBar'\nexport * from './PreBox'\nexport * from './Pane'\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n  isTileLeaf,\n} from '..'\n\nexport function leafDehydrate(this: TileLeaf): TileLeafSubstance {\n  const { children, onTab, grow } = this\n  return { children, onTab, grow }\n}\n\nexport function branchDehydrate(this: TileBranch): TileBranchSubstance {\n  const { children, isRow, grow } = this\n\n  const childrenDehydrated = children.map((it) =>\n    isTileLeaf(it) ? it.dehydrate() : it.dehydrate()\n  )\n  return { children: childrenDehydrated, isRow, grow }\n}\n","import { TileBranch, TileNodeRect } from '..'\n\nexport * from './dehydrate'\n\nexport function calcChildGrows(children: { grow?: number }[]) {\n  const growsSolid = children.map((c) => c.grow ?? 1)\n  const growSum = growsSolid.reduce((s, n) => (s += n), 0) // 部分值\n  const grows = growsSolid.map((c) => c / growSum) // 相对值\n  return grows\n}\n\nexport function calcChildRects(\n  parent: TileBranch,\n  grows: number[]\n): TileNodeRect[] {\n  const { isRow, rect } = parent\n  const { top, left, width, height } = rect\n  if (isRow) {\n    const childLeft = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 left\n        if (i > 0) arr.push(arr[i - 1] + width * grows[i - 1])\n        return arr\n      },\n      [left]\n    )\n    return grows.map((n, i) => ({\n      top,\n      height,\n      width: n * width,\n      left: childLeft[i],\n    }))\n  } else {\n    const childTop = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 top\n        if (i > 0) arr.push(arr[i - 1] + height * grows[i - 1])\n        return arr\n      },\n      [top]\n    )\n    return grows.map((n, i) => ({\n      left,\n      width,\n      height: n * height,\n      top: childTop[i],\n    }))\n  }\n}\n","export * from './unfold'\nexport * from './typings'\nexport * from './isNil'\nexport * from './createTitlePanes'\nexport * from './array'\n","import React, {\n  memo,\n  useContext,\n  useMemo,\n  useRef,\n  CSSProperties,\n  useEffect,\n} from 'react'\nimport useMeasure from 'react-use-measure'\nimport { LeafContext, SetTitleRectsContext } from '..'\nimport { PaneName } from '../..'\nimport { PreBox } from './components'\nimport { useDragAndPosition } from './hook'\nimport { PaneWithPreBox } from './typings'\nimport { orFn } from './util'\n\nexport interface DraggableTitleProps {\n  name: PaneName\n  children?: React.ReactNode | ((isMoving: boolean) => React.ReactNode)\n  style?: CSSProperties | ((isMoving: boolean) => CSSProperties)\n  className?: string | ((isMoving: boolean) => string)\n}\n\nconst DraggableTitleInner: React.FC<DraggableTitleProps> = (props) => {\n  const { name } = props\n  const paneWithPreBoxRef = useRef<PaneWithPreBox>()\n\n  const pane = useContext(LeafContext)\n  const { position, bind, isDragging } = useDragAndPosition(\n    paneWithPreBoxRef,\n    name,\n    pane\n  )\n\n  const { style, className, children } = useFn(props, isDragging)\n\n  const [targetRef, rect] = useMeasure({ scroll: true })\n  const setTitleRects = useContext(SetTitleRectsContext)\n\n  const { left, height, top, width } = rect\n  useEffect(() => {\n    setTitleRects({ name, rect: { left, height, top, width } })\n  }, [height, left, name, rect, setTitleRects, top, width])\n\n  const styled = useMemo(\n    () =>\n      (position\n        ? {\n            ...style,\n            visibility: 'visible',\n            position: 'fixed',\n            left: position[0],\n            top: position[1],\n            transform: 'translate(-50%,-50%)',\n            zIndex: 1,\n            userSelect: 'none',\n          }\n        : style) as React.CSSProperties,\n    [position, style]\n  )\n  return useMemo(\n    () => (\n      <>\n        {position && <PreBox {...{ paneWithPreBoxRef, position }} />}\n        <div {...bind()} ref={targetRef} style={styled} className={className}>\n          {children}\n        </div>\n      </>\n    ),\n    [bind, children, className, position, styled, targetRef]\n  )\n}\n\nfunction useFn(\n  {\n    children: childrenFn,\n    style: styleFn,\n    className: classNameFn,\n  }: DraggableTitleProps,\n  isMoving: boolean\n) {\n  const style = useMemo(() => orFn(styleFn, isMoving), [isMoving, styleFn])\n  const children = useMemo(() => orFn(childrenFn, isMoving), [\n    childrenFn,\n    isMoving,\n  ])\n  const className = useMemo(() => orFn(classNameFn, isMoving), [\n    classNameFn,\n    isMoving,\n  ])\n  return { style, children, className }\n}\n\nexport const DraggableTitle = memo(DraggableTitleInner)\nexport * from './typings'\nexport * from './hook/useMovingChecker'\n","export * from './tilePane'\n","import { useCallback, useContext } from 'react'\nimport { MovingTabsContext } from '../../..'\nimport { PaneName } from '../../../..'\n\nexport function useMovingChecker() {\n  const tabs = useContext(MovingTabsContext)\n  const isMoving = useCallback(\n    (name: PaneName) => tabs.map((tab) => tab.name).includes(name),\n    [tabs]\n  )\n  return isMoving\n}\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../..'\n\nexport function isTileLeaf(\n  node: TileLeafSubstance | TileBranchSubstance | TileLeaf | TileBranch\n): node is TileLeafSubstance | TileLeaf {\n  const { children = '0' } = node\n  if (children instanceof Array) {\n    return isTilePaneNames(children)\n  }\n  return true\n}\n\nexport function isTilePaneNames(\n  list:\n    | PaneName[]\n    | (TileBranchSubstance | TileLeafSubstance)[]\n    | (TileLeaf | TileBranch)[]\n    | TileLeafSubstance[]\n    | TileBranchSubstance[]\n    | TileLeaf[]\n    | TileBranch[]\n): list is PaneName[] {\n  return !(list[0] instanceof Object)\n}\n","import { TileBranch, TileBranchSubstance } from '..'\n\nexport function createTileBranch(sub: TileBranchSubstance) {\n  const { isRow, children, id, grow } = sub\n  return new TileBranch(isRow, children, id, null, grow, undefined)\n}\n","const ref = { n: 0 }\nexport function increasingID() {\n  return (ref.n++).toString(36)\n}\n","import { useState, useContext } from 'react'\nimport { useGesture } from 'react-use-gesture'\nimport { TileDispatchContext } from '../../..'\nimport { PaneName, TileLeaf } from '../../../..'\nimport { PaneWithPreBox } from '../../typings'\n\nexport function useDragAndPosition(\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>,\n  name: PaneName,\n  leaf: TileLeaf | undefined\n) {\n  const dispatch = useContext(TileDispatchContext)\n  const [position, setPosition] = useState<[number, number]>()\n  const [velocity, setVelocities] = useState(0)\n  const isDragging = !!position\n\n  const bind = useGesture(\n    {\n      onDrag: ({ down, xy, velocity }) => {\n        if (down) {\n          setPosition(xy)\n          setVelocities(velocity)\n        } else {\n          setVelocities(0)\n          setPosition(undefined)\n        }\n      },\n      onDragStart: () => dispatch({ tabToStartMoving: { name, leaf } }),\n      onDragEnd: () =>\n        dispatch({\n          tabToStopMoving: { pane: name, preBox: paneWithPreBoxRef.current },\n        }),\n    },\n    { drag: { threshold: 10 } }\n  )\n\n  return { bind, position, velocity, isDragging }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useCallback, useRef } from 'react'\n\nexport function useThrottleFn<Fn extends (...args: any[]) => any>(\n  fn: Fn,\n  ms?: number\n): Fn {\n  const result = useRef<any>()\n  const timerRef = useRef<number>()\n\n  const throttledFn = useCallback(\n    (...arg) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, ms)\n        result.current = fn(...arg)\n      }\n      return result.current\n    },\n    [fn, ms]\n  )\n\n  return ms ? (throttledFn as Fn) : fn\n}\n","export function orFn<As extends unknown[], T = unknown>(\n  orFunc: T | ((...args: As) => T),\n  ...args: As\n) {\n  return typeof orFunc === 'function'\n    ? (orFunc as (...args: As) => T)(...args)\n    : orFunc\n}\n","import { calcChildGrows, calcChildRects } from '.'\nimport {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../../util'\nimport { isTileLeaf } from '../helper'\n\nexport function leafSetChildren(this: TileLeaf, children: PaneName[]) {\n  this.children = children.filter(\n    (child, i) => children.findIndex((it) => it === child) === i\n  )\n}\n\nexport function branchSetChildren(\n  this: TileBranch,\n  children: (TileBranchSubstance | TileLeafSubstance)[]\n) {\n  const grows = calcChildGrows(children)\n  const rect = calcChildRects(this, grows)\n  this.children = children\n    .filter((child, i) => children.findIndex((it) => it === child) === i)\n    .map((it, i) =>\n      isTileLeaf(it)\n        ? new TileLeaf(\n            it.onTab,\n            it.children instanceof Array ? it.children : [it.children],\n            it.id,\n            this,\n            grows[i],\n            rect[i]\n          )\n        : new TileBranch(it.isRow, it.children, it.id, this, grows[i], rect[i])\n    )\n}\n","export * from './TileNode'\nexport * from './StretchBar'\n","import {\n  TileBranch,\n  TileLeaf,\n  StretchBarEntity,\n  isTilePaneNames,\n  isTileLeaf,\n} from '..'\n\nexport function unfold(node: TileBranch) {\n  const leaves: TileLeaf[] = []\n  const branches = [node]\n  const stretchBars: StretchBarEntity[] = []\n  unfold(node)\n  function unfold(pane: TileBranch) {\n    const { children } = pane\n    !isTilePaneNames(children) &&\n      (children as (TileBranch | TileLeaf)[]).forEach((p, i) => {\n        if (!isTileLeaf(p)) {\n          unfold(p)\n          branches.push(p)\n        } else {\n          leaves.push(p)\n        }\n        const prevPane = children[i - 1]\n        if (!prevPane) return\n        const bar = new StretchBarEntity(pane, prevPane, p)\n        stretchBars.push(bar)\n      })\n  }\n  return {\n    leaves,\n    branches,\n    stretchBars,\n  }\n}\n","import { ReactChild } from 'react'\nimport { PaneName, TilePane } from '..'\n\nexport function createTitlePanes<T extends Record<PaneName, ReactChild>>(\n  obj: T\n): [TilePane[], Record<keyof T, keyof T>] {\n  const map = {} as Record<PaneName, keyof T>\n  const list: TilePane[] = []\n  Object.keys(obj).forEach((key) => {\n    map[key] = key\n    list.push({\n      name: key,\n      child: obj[key],\n    })\n  })\n  return [list, map as Record<keyof T, keyof T>]\n}\n","export function removeInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1)\n  return newArr\n}\n\nexport function replaceInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T,\n  newOne: T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1, newOne)\n  return newArr\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { PaneContext, TilePaneWithRect } from '../../../../../..'\nimport { useChild, useStyle } from './hook'\n\nexport interface TilePaneProps {\n  pane: TilePaneWithRect\n}\nconst TilePaneInner: React.FC<TilePaneProps> = ({ pane }) => {\n  const { style, className } = useContext(PaneContext)\n  const child = useChild(pane.name)\n  const styled = useStyle(pane.rect)\n  return useMemo(\n    () => (\n      <div className={className} style={{ ...style, ...styled }}>\n        {child}\n      </div>\n    ),\n    [child, className, style, styled]\n  )\n}\nexport const TilePane = memo(TilePaneInner)\n","import { useContext, useCallback, useMemo } from 'react'\nimport { TitlePanesContext } from '../../../../../..'\nimport { PaneName } from '../../../../../../..'\n\nexport function useChild(id: PaneName) {\n  const tilePanes = useContext(TitlePanesContext)\n\n  const findChildPane = useCallback(\n    (id: PaneName) => {\n      const pane = tilePanes.find((it) => it.name === id)\n      return pane?.child\n    },\n    [tilePanes]\n  )\n  const child = useMemo(() => findChildPane(id), [findChildPane, id])\n  return child\n}\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssCalcLength,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\n\nexport function useStyle(rect: TileNodeRect | null): CSSProperties {\n  const tabBar = useContext(TabsBarContext)\n  const { position } = tabBar\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(tabBar.thickness), [\n    tabBar.thickness,\n  ])\n  return rect\n    ? {\n        position: 'absolute',\n        height: isVertical\n          ? toCssCalcLength(rect.height, thickness, '-')\n          : toCssLength(rect.height),\n        width: isVertical\n          ? toCssLength(rect.width)\n          : toCssCalcLength(rect.width, thickness, '-'),\n        top:\n          isVertical && !isAfter\n            ? toCssCalcLength(rect.top, thickness, '+')\n            : toCssLength(rect.top),\n        left:\n          !isVertical && !isAfter\n            ? toCssCalcLength(rect.left, thickness, '+')\n            : toCssLength(rect.left),\n      }\n    : {\n        display: 'none',\n      }\n}\n","import React, { memo, useMemo } from 'react'\nimport { usePanes } from './hook'\nimport { TilePane } from './components'\n\nconst TilePanesInner: React.FC = () => {\n  const panes = usePanes()\n  return useMemo(\n    () => (\n      <>\n        {panes.map((pane) => (\n          <TilePane pane={pane} key={pane.name} />\n        ))}\n      </>\n    ),\n    [panes]\n  )\n}\n\nexport const TilePanes = memo(TilePanesInner)\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../../..'\nimport { TilePaneWithRect } from '../../../../../..'\n\nexport function usePanes() {\n  const movingTabs = useContext(MovingTabsContext)\n  const leaves = useContext(TileLeavesContext)\n\n  const panes: TilePaneWithRect[] = useMemo(() => {\n    const panes: TilePaneWithRect[] = movingTabs.map(({ name }) => ({\n      name,\n      rect: null,\n    }))\n    leaves.forEach((leaf) => {\n      panes.push(\n        ...leaf.children.map((name, i) => ({\n          name,\n          rect: leaf.onTab === i ? leaf.rect : null,\n        }))\n      )\n    })\n    return panes\n  }, [leaves, movingTabs])\n  return panes\n}\n","import React, {\n  createContext,\n  memo,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react'\nimport { TabsBarContext, TileDispatchContext } from '../../../../..'\nimport { PaneName, TileLeaf } from '../../../../../..'\nimport { useStyle } from './hook'\nexport interface TabBarProps {\n  leaf: TileLeaf\n  onTab: number\n  tabs: PaneName[]\n}\n\nexport type TabBarMoreProps = TabBarProps & {\n  isHidden?: boolean\n}\n\nexport interface TabBarAction {\n  switchTab: (onTab: number) => void\n  closeTab: (index: number) => void\n}\n\nexport const LeafContext = createContext<TileLeaf | undefined>(undefined)\n\nconst TabsBarInner: React.FC<TabBarMoreProps> = (props) => {\n  const { leaf, isHidden } = props\n  const tabBar = useContext(TabsBarContext)\n  const dispatch = useContext(TileDispatchContext)\n\n  const switchTab = useCallback(\n    (onTab: number) =>\n      dispatch({\n        leafToSwitchTab: {\n          leaf,\n          onTab,\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const closeTab = useCallback(\n    (index: number) =>\n      dispatch({\n        leafToCloseTab: {\n          leaf,\n          name: leaf.children[index],\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const action: TabBarAction = useMemo(() => ({ switchTab, closeTab }), [\n    closeTab,\n    switchTab,\n  ])\n\n  const { render: Render } = tabBar\n  const style = useStyle(leaf.rect, isHidden)\n  return useMemo(\n    () => (\n      <LeafContext.Provider value={leaf}>\n        <div style={style}>\n          <Render action={action} {...props} />\n        </div>\n      </LeafContext.Provider>\n    ),\n    [Render, action, leaf, props, style]\n  )\n}\n\nexport const TabsBar = memo(TabsBarInner)\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\nexport function useStyle(\n  rect: TileNodeRect,\n  isHidden?: boolean\n): CSSProperties {\n  const table = useContext(TabsBarContext)\n  const { position } = table\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(table.thickness), [table])\n  return {\n    visibility: isHidden ? 'hidden' : undefined,\n    position: 'absolute',\n    width: isVertical ? toCssLength(rect.width) : thickness,\n    height: isVertical ? thickness : toCssLength(rect.height),\n    top: isAfter ? undefined : toCssLength(rect.top),\n    bottom: isAfter ? toCssLength(1 - rect.top - rect.height) : undefined,\n    left: isAfter ? undefined : toCssLength(rect.left),\n    right: isAfter ? toCssLength(1 - rect.left - rect.width) : undefined,\n  }\n}\n","import React, { memo, useMemo } from 'react'\nimport { TabsBar } from './components'\nimport { useTabs } from './hook'\n\nconst TabsBarsInner: React.FC = () => {\n  const tabBars = useTabs()\n  return useMemo(\n    () => (\n      <>\n        {tabBars.map((tabBar) => (\n          <TabsBar key={tabBar.leaf.id} {...tabBar} />\n        ))}\n      </>\n    ),\n    [tabBars]\n  )\n}\n\nexport const TabsBars = memo(TabsBarsInner)\nexport * from './components'\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../..'\nimport { TabBarMoreProps } from '../components'\n\nexport function useTabs() {\n  const leaves = useContext(TileLeavesContext)\n  const movingTabs = useContext(MovingTabsContext)\n\n  const tabBarsProps = useMemo(() => {\n    const tabBarsProps: TabBarMoreProps[] = leaves.map((leaf) => ({\n      leaf,\n      onTab: leaf.onTab,\n      tabs: leaf.children.slice(),\n    }))\n    movingTabs.forEach((tab) => {\n      const { leaf } = tab\n      if (!leaf) return\n      const tabBar = tabBarsProps.find((it) => it.leaf.id === leaf.id)\n      if (tabBar) {\n        tabBar.tabs.splice(tab.tabIndex, 0, tab.name)\n      } else {\n        tabBarsProps.splice(tab.leafIndex, 0, {\n          leaf: leaf,\n          onTab: leaf.onTab,\n          tabs: [tab.name],\n          isHidden: true,\n        })\n      }\n    })\n    return tabBarsProps\n  }, [leaves, movingTabs])\n\n  return tabBarsProps\n}\n","import { TileNodeRect } from '../../../../../..'\n\nexport function calcBarStyles(\n  { top, left, width, height }: TileNodeRect,\n  isRow?: boolean\n) {\n  return {\n    top: top * 100 + '%',\n    left: left * 100 + '%',\n    width: isRow ? undefined : width * 100 + '%',\n    height: isRow ? height * 100 + '%' : undefined,\n    transform: `translate${isRow ? 'X' : 'Y'}(-50%)`,\n  }\n}\n","import React, { useCallback, useContext, useMemo } from 'react'\nimport { useDrag } from 'react-use-gesture'\nimport { ContainerRectContext, StretchBarConfigContext } from '../../../..'\nimport { StretchBarEntity } from '../../../../..'\nimport { useThrottleMove } from './hook'\nimport { calcBarStyles } from './util'\n\nexport interface StretchBarProps {\n  bar: StretchBarEntity\n}\n\nconst StretchBarInner: React.FC<StretchBarProps> = ({ bar }) => {\n  const { isRow } = bar.parentPane\n  const containerRect = useContext(ContainerRectContext)\n  const { style, className, child } = useContext(StretchBarConfigContext)\n  const move = useThrottleMove(bar)\n\n  const styled = useMemo(\n    () => (typeof style === 'function' ? style(isRow) : style),\n    [isRow, style]\n  )\n\n  const classNamed = useMemo(\n    () => (typeof className === 'function' ? className(isRow) : className),\n    [className, isRow]\n  )\n  const children = useMemo(\n    () => (typeof child === 'function' ? child(isRow) : child),\n    [child, isRow]\n  )\n\n  const moveBar = useCallback(\n    (mx: number, my: number) => {\n      const distance = isRow\n        ? mx / containerRect.width\n        : my / containerRect.height\n      move(distance)\n    },\n    [containerRect.height, containerRect.width, isRow, move]\n  )\n\n  const bind = useDrag(\n    ({ down, delta: [mx, my] }) => {\n      down && moveBar(mx, my)\n    },\n    { enabled: true }\n  )\n  const { top, left, width, height } = bar.nextPane.rect\n\n  return useMemo(\n    () => (\n      <div\n        {...bind()}\n        className={classNamed}\n        style={{\n          ...styled,\n          position: 'absolute',\n          ...calcBarStyles({ top, left, width, height }, isRow),\n        }}\n      >\n        {children}\n      </div>\n    ),\n    [bind, children, classNamed, height, isRow, left, styled, top, width]\n  )\n}\n\nexport const StretchBar = React.memo(StretchBarInner)\n","import { useCallback, useContext, useRef } from 'react'\nimport {\n  StretchBarConfigContext,\n  StretchBarEntity,\n  TileDispatchContext,\n} from '../../../../../..'\n\nexport function useThrottleMove(bar: StretchBarEntity) {\n  const { throttle } = useContext(StretchBarConfigContext)\n  const timerRef = useRef<number>()\n  const accumulation = useRef<number>(0)\n\n  const dispatch = useContext(TileDispatchContext)\n\n  const move = useCallback(\n    (distance: number) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, throttle)\n        dispatch({\n          barToMove: {\n            bar,\n            distance: accumulation.current ?? distance,\n          },\n        })\n        accumulation.current = distance\n      } else {\n        accumulation.current += distance\n      }\n    },\n    [bar, dispatch, throttle]\n  )\n  return move\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { StretchBarsContext } from '../../..'\nimport { StretchBar } from './StretchBar'\n\nconst StretchBarsInner: React.FC = () => {\n  const bars = useContext(StretchBarsContext)\n  return useMemo(\n    () => (\n      <>\n        {bars.map((bar) => (\n          <StretchBar bar={bar} key={bar.nextPane.id} />\n        ))}\n      </>\n    ),\n    [bars]\n  )\n}\n\nexport const StretchBars = memo(StretchBarsInner)\n","import { TabsBarPosition } from '../..'\n\nexport function toCssLength(length: number) {\n  return `${length * 100}%`\n}\n\nexport function toCssCalcLength(\n  percent: number,\n  offset: string,\n  mode: '+' | '-'\n) {\n  return `calc(${toCssLength(percent)} ${mode} ${offset})`\n}\n\nexport const toQuadrant = (position: TabsBarPosition) => [\n  (['top', 'bottom'] as TabsBarPosition[]).includes(position),\n  (['right', 'bottom'] as TabsBarPosition[]).includes(position),\n]\n\nexport const completeUnit = (len: number | string) =>\n  typeof len === 'number' ? `${len}px` : len\n","import React, { memo, useContext, useMemo } from 'react'\nimport { ContainerRefContext, MovingTabsContext } from '..'\nimport { StretchBars, TabsBars, TilePanes } from './components'\n\nexport interface TileContainerProps {\n  style?: React.CSSProperties\n  className?: string\n}\n\nconst TileContainerInner: React.FC<TileContainerProps> = ({\n  style = { width: '100%', height: '100%' },\n  className,\n}) => {\n  const targetRef = useContext(ContainerRefContext)\n  const movingTabs = useContext(MovingTabsContext)\n  return useMemo(\n    () => (\n      <div\n        ref={targetRef}\n        className={className}\n        style={{\n          ...style,\n          position: 'relative',\n          userSelect: movingTabs.length ? 'none' : 'auto',\n        }}\n      >\n        <TabsBars />\n        <TilePanes />\n        <StretchBars />\n      </div>\n    ),\n    [className, movingTabs.length, style, targetRef]\n  )\n}\n\nexport * from './utils'\nexport * from './components'\nexport const TileContainer = memo(TileContainerInner)\n","import { TileStore } from '../..'\nimport {\n  MovingTab,\n  removeInArray,\n  TileBranch,\n  TileLeaf,\n  unfold,\n} from '../../../..'\n\nexport function startMovingTab(\n  { movingTabs, leaves, branches, rootNode }: TileStore,\n  tabToStopMoving: Pick<MovingTab, 'name' | 'leaf'>,\n  notMoving?: boolean\n): TileStore {\n  const newMovingTabs = movingTabs.slice()\n  const { name } = tabToStopMoving\n  const existedTab = newMovingTabs.find((it) => (it.name = name))\n\n  const leafIndex = leaves.findIndex((l) => l === tabToStopMoving.leaf)\n  const leaf = leaves.find((l) => l.children.includes(name))\n  const tabIndex = leaf?.children.findIndex((it) => it === name) ?? 0\n  if (leaf) {\n    const newChildren = removeInArray(leaf.children, name)\n    leaf.onTab = 0\n    leaf.setChildren(newChildren)\n    if (newChildren.length === 0) {\n      removeNode(branches, leaf)\n    }\n  }\n  if (!notMoving && !existedTab) {\n    newMovingTabs.push({ ...tabToStopMoving, tabIndex, leafIndex })\n  }\n\n  const nodes = unfold(rootNode)\n  return {\n    movingTabs: newMovingTabs,\n    rootNode,\n    ...nodes,\n  }\n}\n\nfunction removeNode(branches: TileBranch[], node: TileLeaf | TileBranch) {\n  const parent = branches.find((it) => it === node.parent)\n  if (parent) {\n    const newChildren = removeInArray(\n      parent.children,\n      (it) => it.id === node.id\n    )\n    if (newChildren.length === 0) {\n      removeNode(branches, parent)\n    } else {\n      parent.setChildren(newChildren)\n    }\n  }\n}\n","import { TileStore } from '../..'\nimport { Into, PaneWithPreBox } from '../../..'\nimport {\n  PaneName,\n  removeInArray,\n  unfold,\n  isTileLeaf,\n  TileBranch,\n  TileLeaf,\n  TileLeafSubstance,\n  TileBranchSubstance,\n  replaceInArray,\n} from '../../../..'\n\nexport type TabToStopMoving = {\n  pane: PaneName\n  preBox?: PaneWithPreBox\n}\n\nexport function stopMovingTab(\n  { movingTabs, ...rest }: TileStore,\n  { pane, preBox }: TabToStopMoving\n): TileStore {\n  const newMovingTabs = removeInArray(movingTabs, (it) => (it.name = pane))\n  if (preBox) {\n    const { rootNode } = rest\n    insertPane(pane, preBox, rest)\n    const nodes = unfold(rootNode)\n    return { movingTabs: newMovingTabs, rootNode, ...nodes }\n  } else return { movingTabs: newMovingTabs, ...rest }\n}\n\nconst next: Into[] = ['right', 'bottom']\nconst row: Into[] = ['right', 'left']\n\nfunction insertPane(\n  pane: PaneName,\n  preBox: PaneWithPreBox,\n  nodes: Pick<TileStore, 'branches' | 'leaves'>\n) {\n  // const { targetNode: node, into } = preBox\n  const node = preBox.leaf ?? preBox.branch ?? preBox.tab\n  if (!node) return\n  const { target, into } = node\n  const { leaves, branches } = nodes\n  const isNext = typeof into === 'number' ? false : next.includes(into)\n  const isBrother = typeof into === 'number' ? false : isSegment(target, into)\n  const isRow = typeof into === 'number' ? false : row.includes(into)\n\n  if (isTileLeaf(target)) {\n    const leaf = leaves.find((it) => it === target)\n    if (leaf) {\n      if (into === 'center') {\n        const newChildren = leaf.children.slice()\n        newChildren.push(pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = leaf.children.length - 1\n      } else if (preBox.tab) {\n        const newChildren = leaf.children.slice()\n        const index = preBox.tab.into + (preBox.tab.isNext ? 1 : 0)\n        newChildren.splice(index, 0, pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = index\n      } else {\n        isBrother\n          ? segment(target, pane, isNext)\n          : fission(target, pane, isNext, isRow)\n      }\n    }\n  } else {\n    const branch = branches.find((it) => it === target)\n    if (branch) {\n      fission(target, pane, isNext, isRow)\n    }\n  }\n}\n\n/** 分割 ——插入同级节点 */\nfunction segment(node: TileBranch | TileLeaf, pane: PaneName, isNext: boolean) {\n  const { parent } = node\n  if (!parent) return\n  const grow = node.grow / 2\n  const leaf: TileLeafSubstance = { grow, children: [pane] }\n  node.grow = grow\n  const indexInParent = parent.children.findIndex((it) => it === node)\n  const index = isNext ? indexInParent + 1 : indexInParent\n  const newNodes: (\n    | TileBranchSubstance\n    | TileLeafSubstance\n  )[] = parent.children.slice()\n  newNodes.splice(index, 0, leaf)\n  parent.setChildren(newNodes)\n}\n\n/** 分裂 ——插入子级节点*/\nfunction fission(\n  node: TileBranch | TileLeaf,\n  pane: PaneName,\n  isNext: boolean,\n  isRow: boolean\n) {\n  const { parent, grow } = node\n  if (!parent) {\n    const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n    const oldLeaf: TileBranchSubstance | TileLeafSubstance = isTileLeaf(node)\n      ? node.dehydrate()\n      : node.dehydrate()\n    if (!isTileLeaf(node)) {\n      node.isRow = isRow\n      node.setChildren(isNext ? [oldLeaf, newLeaf] : [newLeaf, oldLeaf])\n    }\n    return\n  }\n  const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n  const branch: TileBranchSubstance = {\n    grow,\n    isRow,\n    children: isNext ? [node, newLeaf] : [newLeaf, node],\n  }\n  const newNodes = replaceInArray<TileBranchSubstance | TileLeafSubstance>(\n    parent?.children,\n    node,\n    branch\n  )\n  parent.setChildren(newNodes)\n}\n\nfunction isSegment(node: TileBranch | TileLeaf, into: Into): boolean {\n  const isRow = node.parent?.isRow\n  const segmentInto: Into[] = isRow ? ['left', 'right'] : ['top', 'bottom']\n  return segmentInto.includes(into)\n}\n","import { createTileBranch, TileBranchSubstance, unfold } from '../../..'\n\nexport function initRootNode(rootNodeSub: TileBranchSubstance) {\n  const rootNode = createTileBranch(rootNodeSub)\n  const nodes = unfold(rootNode)\n  return { rootNode, ...nodes }\n}\n","import { TileStoreReducer } from '../..'\nimport { MovingTab, TileLeaf } from '../../..'\nimport { BarToMove, moveBar } from './moveBar'\nimport { startMovingTab, stopMovingTab, TabToStopMoving } from './MovingTab'\nimport { switchLeafTab } from './switchLeafTab'\n\nexport * from './initRootNode'\n\nexport type TileStoreAction = {\n  leafToSwitchTab?: {\n    leaf: TileLeaf\n    onTab: number\n  }\n  leafToCloseTab?: Pick<MovingTab, 'name' | 'leaf'>\n  tabToStopMoving?: TabToStopMoving\n  tabToStartMoving?: Pick<MovingTab, 'name' | 'leaf'>\n  barToMove?: BarToMove\n}\n\nexport const tileStoreReducer: TileStoreReducer = (\n  state,\n  {\n    leafToSwitchTab,\n    tabToStopMoving,\n    tabToStartMoving,\n    barToMove,\n    leafToCloseTab,\n  }\n) => {\n  if (leafToSwitchTab) return switchLeafTab(state, leafToSwitchTab)\n  if (leafToCloseTab) return startMovingTab(state, leafToCloseTab, true)\n  if (tabToStartMoving) return startMovingTab(state, tabToStartMoving)\n  if (tabToStopMoving) return stopMovingTab(state, tabToStopMoving)\n  if (barToMove) return moveBar(state, barToMove)\n  return state\n}\n","import { TileLeaf } from '../../..'\nimport { TileStore } from '../typings'\n\nexport function switchLeafTab(\n  state: TileStore,\n  switchLeafTab: { leaf: TileLeaf; onTab: number }\n) {\n  const { leaves, ...rest } = state\n  const newLeaves = leaves.slice()\n  const leaf = newLeaves.find((l) => l === switchLeafTab.leaf)\n  if (leaf) {\n    leaf.onTab = switchLeafTab.onTab\n  }\n  return { leaves: newLeaves, ...rest }\n}\n","import { StretchBarEntity, TileStore, unfold } from '../../..'\n\nexport type BarToMove = {\n  distance: number\n  bar: StretchBarEntity\n}\n\nexport function moveBar(\n  { rootNode, movingTabs }: TileStore,\n  barToMove: BarToMove\n): TileStore {\n  const { bar, distance } = barToMove\n  bar.move(distance)\n  const nodes = unfold(rootNode)\n  return { ...nodes, movingTabs, rootNode }\n}\n","import { StretchBarEntity } from '..'\n\n/**\n * @param {number} distance percentage in container\n * @return {boolean} Did the move succeed?\n */\nexport function move(this: StretchBarEntity, distance: number): boolean {\n  const lengthSum = this.parentPane.isRow\n    ? this.parentPane.rect.width\n    : this.parentPane.rect.height\n  const offset = distance / lengthSum\n  const previousPaneGrow = this.previousPane.grow + offset\n  const nextPaneGrow = this.nextPane.grow - offset\n  const isMoved = isValidGrow(previousPaneGrow, nextPaneGrow)\n  if (isMoved) {\n    this.previousPane.grow = previousPaneGrow\n    this.nextPane.grow = nextPaneGrow\n    this.parentPane.setChildren(this.parentPane.children)\n  }\n  return isMoved\n}\n\nfunction isValidGrow(growA: number, growB: number): boolean {\n  if (growA < 0.04 || growB < 0.04) return false\n  const growSum = growA + growB\n  if (growA > growSum || growB > growSum) return false\n  return true\n}\n","import { TileBranch, TileNode } from '..'\nimport { move } from './util'\n\nexport class StretchBarEntity {\n  constructor(\n    public parentPane: TileBranch,\n    public previousPane: TileNode,\n    public nextPane: TileNode\n  ) {}\n  rect = this.nextPane.rect\n  move = move\n}\n","import React, {\n  createContext,\n  useMemo,\n  useReducer,\n  Reducer,\n  useContext,\n} from 'react'\nimport { RectReadOnly } from 'react-use-measure'\nimport {\n  ContainerRectContext,\n  PaneName,\n  TileNodeRect,\n  Vector2,\n} from '../../../..'\n\ninterface DispatchTitleRectsReducer {\n  name: PaneName\n  rect: TileNodeRect\n}\n\nexport type TitleRectsReducer = Reducer<\n  Record<PaneName, TileNodeRect>,\n  DispatchTitleRectsReducer\n>\n\nexport const TitleRectsContext = createContext<Record<PaneName, TileNodeRect>>(\n  {}\n)\nexport const SetTitleRectsContext = createContext<\n  React.Dispatch<DispatchTitleRectsReducer>\n>(() => void null)\n\nexport const TitleRectsProvider: React.FC = ({ children }) => {\n  const containerRect = useContext(ContainerRectContext)\n  const [titleRects, setTitleRects] = useReducer<TitleRectsReducer>(reducer, {})\n\n  return useMemo(\n    () => (\n      <TitleRectsContext.Provider value={titleRects}>\n        <SetTitleRectsContext.Provider value={setTitleRects}>\n          {children}\n        </SetTitleRectsContext.Provider>\n      </TitleRectsContext.Provider>\n    ),\n    [children, titleRects]\n  )\n  function reducer(\n    state: Record<PaneName, TileNodeRect>,\n    { rect, name }: DispatchTitleRectsReducer\n  ) {\n    const [left, top] = absolute2Relative(containerRect, rect.left, rect.top)\n    const [right, bottom] = absolute2Relative(\n      containerRect,\n      rect.left + rect.width,\n      rect.top + rect.height\n    )\n    const width = right - left\n    const height = bottom - top\n    state[name] = { left, height, width, top }\n    return state\n  }\n}\n\nexport const LeafWithTitleRectProvider: React.FC = ({ children }) => {\n  return useMemo(() => <>{children}</>, [children])\n}\n\nexport function absolute2Relative(\n  containerRect: RectReadOnly,\n  x: number,\n  y: number\n) {\n  return [\n    (x - containerRect.left) / containerRect.width,\n    (y - containerRect.top) / containerRect.height,\n  ] as Vector2\n}\n","import { createContext, Dispatch } from 'react'\nimport useMeasure, { RectReadOnly } from 'react-use-measure'\nimport { TileStoreAction } from '..'\nimport {\n  MovingTabAction,\n  MovingTab,\n  StretchBarEntity,\n  TileBranch,\n  TileLeaf,\n} from '../../..'\nimport { Vector2 } from '../hook'\n\nexport const TileDispatchContext = createContext<Dispatch<TileStoreAction>>(\n  (s) => s\n)\nexport const TileBranchesContext = createContext<TileBranch[]>([])\nexport const TileLeavesContext = createContext<TileLeaf[]>([])\nexport const StretchBarsContext = createContext<StretchBarEntity[]>([])\n\nexport const MovingTabsContext = createContext<MovingTab[]>([])\nexport const MovingTabsDispatchContext = createContext<\n  React.Dispatch<MovingTabAction>\n>((s) => s)\n\nexport const ContainerRefContext = createContext<\n  ReturnType<typeof useMeasure>[0]\n>(() => null)\n\nconst defaultRect: RectReadOnly = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n}\nexport const ContainerRectContext = createContext(defaultRect)\nexport const MousePositionContext = createContext<Vector2>([0, 0])\nexport * from './TitleRects'\n","import { RectReadOnly } from 'react-use-measure'\nimport { TileNodeRect } from '../../../../../model'\nimport { PaneWithPreBox } from '../../../typings'\nimport { proportion } from '..'\nimport { LeafWithTitleRect } from '.'\nimport { TabsBarConfig } from '../../../..'\n\nexport function calcBoxPosition(\n  paneWithPreBox: PaneWithPreBox | undefined,\n  containerRect: RectReadOnly\n): TileNodeRect {\n  if (!paneWithPreBox)\n    return {\n      top: containerRect.top,\n      left: containerRect.left,\n      height: containerRect.height,\n      width: containerRect.width,\n    }\n  const node = paneWithPreBox.leaf ?? paneWithPreBox.branch\n  if (!node) return { top: 0, left: 0, height: 1, width: 1 }\n  const { target, into } = node\n  const { top, left, width, height } = target.rect\n\n  switch (into) {\n    case 'left':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'right':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left:\n          containerRect.left +\n          left * containerRect.width +\n          containerRect.width * width * (1 - proportion),\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'top':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    case 'bottom':\n      return {\n        top:\n          containerRect.top +\n          top * containerRect.height +\n          containerRect.height * height * (1 - proportion),\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    default:\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width,\n      }\n  }\n}\n\nconst thickness = 0.01\nexport function calcTitleBoxPosition(\n  paneWithPreBox: PaneWithPreBox | undefined,\n  leafWithTitleRects: LeafWithTitleRect[],\n  config: TabsBarConfig['preBox']\n): TileNodeRect | undefined {\n  if (!paneWithPreBox?.tab) return\n  const { target, into, isNext } = paneWithPreBox.tab\n  const { children } = target\n  const currentTitle = children[into]\n  const current = leafWithTitleRects.find((it) => it.title === currentTitle)\n\n  if (current) {\n    const { top, left, height, width } = current.rect\n    const isEnd = config?.isReverse ? !isNext : isNext\n    const intoLeft = { top, left, height, width: thickness }\n    const intoRight = {\n      top,\n      height,\n      width: thickness,\n      left: left + width - thickness,\n    }\n    const intoTop = { top, left, height: thickness, width }\n    const intoBottom = {\n      top: top + height - thickness,\n      height: thickness,\n      width,\n      left,\n    }\n    const intoPrev = config?.isRow ? intoLeft : intoTop\n    const intoNext = config?.isRow ? intoRight : intoBottom\n    return isEnd ? intoNext : intoPrev\n  }\n}\n\nexport function toInContainer(\n  rect: TileNodeRect | undefined,\n  containerRect: RectReadOnly\n): TileNodeRect | undefined {\n  if (!rect) return\n  const { top, left, width, height } = rect\n  return {\n    top: containerRect.top + top * containerRect.height,\n    left: containerRect.left + left * containerRect.width,\n    height: containerRect.height * height,\n    width: containerRect.width * width,\n  }\n}\n","import {\n  TabsBarConfig,\n  TileBranch,\n  TileLeaf,\n  TileNodeRect,\n} from '../../../../..'\nimport { PaneWithPreBox } from '../../../typings'\nimport { LeafWithTitleRect } from './calcLeafWithTitleRect'\n\nconst branchProportion = 0.05\nconst leafProportion = 0.3\nexport function calcPreBox(\n  branches: TileBranch[],\n  leaves: TileLeaf[],\n  leafWithTitleRects: LeafWithTitleRect[],\n  innerPosition: [number, number],\n  config: TabsBarConfig['preBox']\n): PaneWithPreBox | undefined {\n  if (!innerPosition) return\n  const [x, y] = innerPosition\n\n  for (const { leaf, rect: titleRect, index } of leafWithTitleRects) {\n    if (isInPane(titleRect, innerPosition)) {\n      const isEnd = config?.isRow\n        ? titleRect.left + titleRect.width / 2 < x\n        : titleRect.top + titleRect.height / 2 < y\n      const isNext = config?.isReverse ? !isEnd : isEnd\n      return {\n        tab: {\n          target: leaf,\n          into: index,\n          isNext,\n        },\n      }\n    }\n  }\n\n  for (const pane of branches) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (pane.isRow) {\n        if (y - top < height * branchProportion)\n          return { branch: { target: pane, into: 'top' } }\n        if (top + height - y < height * branchProportion)\n          return { branch: { target: pane, into: 'bottom' } }\n      } else {\n        if (x - left < width * branchProportion)\n          return { branch: { target: pane, into: 'left' } }\n        if (left + width - x < width * branchProportion)\n          return { branch: { target: pane, into: 'right' } }\n      }\n    }\n  }\n\n  for (const pane of leaves) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (x - left < width * leafProportion)\n        return { leaf: { target: pane, into: 'left' } }\n      if (left + width - x < width * leafProportion)\n        return { leaf: { target: pane, into: 'right' } }\n      if (y - top < height * leafProportion)\n        return { leaf: { target: pane, into: 'top' } }\n      if (top + height - y < height * leafProportion)\n        return { leaf: { target: pane, into: 'bottom' } }\n      return { leaf: { target: pane, into: 'center' } }\n    }\n  }\n}\n\nfunction isInPane(position: TileNodeRect, [x, y]: [number, number]) {\n  const { left, top, width, height } = position\n  return left < x && x < left + width && top < y && y < top + height\n}\n\nexport * from './calcBoxPosition'\nexport * from './calcLeafWithTitleRect'\n","import React, { memo, useContext, useMemo } from 'react'\nimport { Vector2 } from 'react-use-gesture/dist/types'\nimport {\n  absolute2Relative,\n  ContainerRectContext,\n  PreBoxConfigContext,\n  TabsBarContext,\n  TileBranchesContext,\n  TileLeavesContext,\n  TitleRectsContext,\n} from '../../..'\nimport { useThrottleFn } from '../../hook'\nimport { PaneWithPreBox } from '../../typings'\nimport {\n  calcPreBox,\n  calcBoxPosition,\n  calcLeafWithTitleRect,\n  calcTitleBoxPosition,\n  toInContainer,\n} from './util'\n\nexport interface PreBoxProps {\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>\n  position: Vector2\n}\n\nconst PreBoxInner: React.FC<PreBoxProps> = ({\n  position,\n  paneWithPreBoxRef,\n}) => {\n  const containerRect = useContext(ContainerRectContext)\n  const branches = useContext(TileBranchesContext)\n  const leaves = useContext(TileLeavesContext)\n  const { throttle, style, className, child } = useContext(PreBoxConfigContext)\n  const { preBox: preBoxInTabBar } = useContext(TabsBarContext)\n\n  const innerPosition = useMemo(\n    () => absolute2Relative(containerRect, ...position),\n    [containerRect, position]\n  )\n\n  const titleRects = useContext(TitleRectsContext)\n  const leafWithTitleRects = calcLeafWithTitleRect(titleRects, leaves)\n\n  const calcLazyPreBox = useThrottleFn(calcPreBox, throttle)\n  const paneWithPreBox = useMemo(\n    () =>\n      calcLazyPreBox(\n        branches,\n        leaves,\n        leafWithTitleRects,\n        innerPosition,\n        preBoxInTabBar\n      ),\n    [\n      branches,\n      calcLazyPreBox,\n      innerPosition,\n      leafWithTitleRects,\n      leaves,\n      preBoxInTabBar,\n    ]\n  )\n  paneWithPreBoxRef.current = paneWithPreBox\n  return useMemo(() => {\n    const styled =\n      typeof style === 'function' ? style(paneWithPreBox ?? {}) : style\n    const classNamed =\n      typeof className === 'function'\n        ? className(paneWithPreBox ?? {})\n        : className\n    const boxPosition =\n      toInContainer(\n        calcTitleBoxPosition(\n          paneWithPreBox,\n          leafWithTitleRects,\n          preBoxInTabBar\n        ),\n        containerRect\n      ) ?? calcBoxPosition(paneWithPreBox, containerRect)\n    const children =\n      typeof child === 'function' ? child(paneWithPreBox ?? {}) : child\n\n    return (\n      <div\n        className={classNamed}\n        style={{\n          ...styled,\n          zIndex: 1,\n          visibility: 'visible',\n          position: 'fixed',\n          ...boxPosition,\n        }}\n      >\n        {children}\n      </div>\n    )\n  }, [\n    child,\n    className,\n    containerRect,\n    leafWithTitleRects,\n    paneWithPreBox,\n    preBoxInTabBar,\n    style,\n  ])\n}\n\nexport const proportion = 0.5\nexport const PreBox = memo(PreBoxInner)\n","import { PaneName, TileLeaf, TileNodeRect } from '../../../../..'\n\nexport interface LeafWithTitleRect {\n  leaf: TileLeaf\n  index: number\n  title: PaneName\n  rect: TileNodeRect\n}\n\nexport function calcLeafWithTitleRect(\n  titleRects: Record<PaneName, TileNodeRect>,\n  leaves: TileLeaf[]\n): LeafWithTitleRect[] {\n  const leafWithTitleRects: LeafWithTitleRect[] = []\n  leaves.forEach((leaf) => {\n    leaf.children.forEach((title, index) => {\n      const rect = titleRects[title]\n      if (!rect) return\n      leafWithTitleRects.push({\n        leaf,\n        title,\n        index,\n        rect,\n      })\n    })\n  })\n  return leafWithTitleRects\n}\n","import React, { useState } from 'react'\nimport {\n  createTitlePanes,\n  DraggableTitle,\n  TileBranchSubstance,\n  TileContainer,\n  TileProvider,\n} from '../components'\nimport './App.css'\nimport '../static/style.css'\n\nfunction Arbutus() {\n  const [number, count] = useState(1)\n  return (\n    <div onClick={() => count((n) => n + 1)} className=\"pane\">\n      {number} 颗杨梅\n    </div>\n  )\n}\n\nfunction Apple() {\n  return <div className=\"pane\">苹果</div>\n}\n\nconst [nodeList, names] = createTitlePanes({\n  arbutus: <Arbutus />,\n  cherry: <div className=\"pane\">樱桃</div>,\n  apple: <Apple />,\n  banana: <div className=\"pane\">香蕉🍌</div>,\n  lemon: <div className=\"pane\">柠檬</div>,\n  mango: <div className=\"pane\">芒果</div>,\n  pomelo: <div className=\"pane\">柚子</div>,\n})\n\nconst rootPane: TileBranchSubstance = {\n  children: [\n    { children: [names.apple, names.cherry] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        { children: names.arbutus },\n        { children: names.lemon },\n        {\n          children: [\n            { children: names.mango, grow: 3 },\n            { children: names.pomelo },\n          ],\n        },\n      ],\n    },\n  ],\n}\n\nconst App: React.FC = () => {\n  return (\n    <TileProvider tilePanes={nodeList} rootNode={rootPane}>\n      <div className=\"App\">\n        <div style={{ height: 30 }} />\n        <div className=\"fence\">\n          <TileContainer />\n        </div>\n      </div>\n      <DraggableTitle name={names.banana}>拖动这个香蕉🍌</DraggableTitle>\n      <a href=\"https://xcfox.github.io/react-tile-pane/\">查看文档</a>\n    </TileProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport reportWebVitals from './common/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}