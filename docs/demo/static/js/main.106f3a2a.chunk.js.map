{"version":3,"sources":["components/tilePane/index.ts","components/tilePane/view/index.ts","components/tilePane/view/Provider/index.tsx","components/tilePane/model/TileNode/index.ts","components/tilePane/model/TileNode/util/dehydrate.ts","components/tilePane/model/TileNode/util/index.ts","components/tilePane/util/index.ts","components/index.ts","components/tilePane/view/DraggableTitle/index.tsx","components/tilePane/model/TileNode/helper/isTileLeaf.ts","components/tilePane/model/TileNode/helper/createTileNode.ts","components/tilePane/model/TileNode/helper/increasingID.ts","components/tilePane/model/TileNode/util/setChildren.ts","components/tilePane/model/index.ts","components/tilePane/util/unfold.ts","components/tilePane/util/createTitlePanes.ts","components/tilePane/util/array.ts","components/tilePane/view/Provider/data/index.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/index.tsx","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useChild.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useStyle.ts","components/tilePane/view/Container/components/TilePanes/index.tsx","components/tilePane/view/Container/components/TilePanes/hook/usePanes/index.ts","components/tilePane/view/Container/components/TabsBars/components/TabsBar/index.tsx","components/tilePane/view/Container/components/TabsBars/components/TabsBar/hook/index.ts","components/tilePane/view/Container/components/TabsBars/index.tsx","components/tilePane/view/Container/components/TabsBars/hook/index.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/util/calcBarStyles.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/index.tsx","components/tilePane/view/Container/components/StretchBars/index.tsx","components/tilePane/view/Container/utils/toCssLength.ts","components/tilePane/view/Container/index.tsx","components/tilePane/view/Provider/controller/MovingTab/startMovingTab.ts","components/tilePane/view/Provider/controller/MovingTab/stopMovingTab.ts","components/tilePane/view/Provider/controller/initRootNode.ts","components/tilePane/view/Provider/controller/index.ts","components/tilePane/view/Provider/controller/switchLeafTab.ts","components/tilePane/view/Provider/controller/moveBar.ts","components/tilePane/view/Provider/config/TabBar/index.tsx","components/tilePane/view/Provider/config/StretchBar/index.ts","components/tilePane/view/Provider/config/index.ts","components/tilePane/model/StretchBar/util/index.ts","components/tilePane/model/StretchBar/index.ts","components/tilePane/view/DraggableTitle/util/index.ts","components/tilePane/view/DraggableTitle/components/PreBox/index.tsx","components/tilePane/view/DraggableTitle/hook/useDragAndPosition/index.ts","App/App.tsx","common/reportWebVitals.ts","index.tsx"],"names":["TileProviderInner","children","rootNodeSub","rootNode","tilePanes","TabBar","defaultTabsBarConfig","stretchBarConfig","defaultStretchBar","useReducer","tileStoreReducer","movingTabs","initRootNode","branches","leaves","stretchBars","tileStoreDispatch","childrenMemo","useMemo","useMeasure","scroll","targetRef","containerRect","Provider","value","TileProvider","memo","TileNode","id","increasingID","parent","grow","rect","top","left","width","height","TileLeaf","onTab","rest","setChildren","leafSetChildren","dehydrate","leafDehydrate","TileBranch","isRow","branchSetChildren","branchDehydrate","this","map","it","isTileLeaf","calcChildGrows","growsSolid","c","growSum","reduce","s","n","calcChildRects","grows","childLeft","arr","i","push","childTop","DraggableTitleInner","name","paneWithPreBoxRef","useRef","useContext","TileLeavesContext","pane","find","p","includes","useDragAndPosition","position","bind","style","visibility","transform","zIndex","DraggableTitle","node","Array","isTilePaneNames","list","Object","createTileBranch","sub","undefined","ref","toString","unfold","forEach","prevPane","bar","StretchBarEntity","createTitlePanes","obj","keys","key","child","removeInArray","one","newArr","slice","index","Function","findIndex","splice","replaceInArray","newOne","TileDispatchContext","createContext","TileBranchesContext","StretchBarsContext","MovingTabsContext","ContainerRefContext","defaultRect","bottom","right","x","y","ContainerRectContext","TilePaneInner","TitlePanesContext","findChildPane","useCallback","useChild","tabBar","TabsBarContext","toQuadrant","isVertical","isAfter","thickness","completeUnit","toCssCalcLength","toCssLength","display","useStyle","TilePane","TilePanesInner","panes","leaf","usePanes","TilePanes","TabsBarInner","props","isHidden","dispatch","switchTab","leafToSwitchTab","closeTab","leafToCloseTab","action","Render","render","table","TabsBar","TabsBarsInner","tabBars","tabBarsProps","tabs","tab","useTabs","TabsBars","calcBarStyles","StretchBarInner","StretchBarConfigContext","moveBar","mx","my","distance","parentPane","barToMove","useDrag","down","delta","enabled","nextPane","background","StretchBar","React","StretchBarsInner","bars","StretchBars","length","percent","offset","mode","len","TileContainerInner","TileContainer","startMovingTab","tabToStopMoving","notMoving","newMovingTabs","existedTab","l","newChildren","removeNode","nodes","stopMovingTab","preBox","targetNode","into","isNext","isBrother","isSegment","indexInParent","newNodes","segment","fission","insertPane","newLeaf","branch","oldLeaf","state","tabToStartMoving","switchLeafTab","newLeaves","move","TabBarInner","justifyContent","onClick","color","previousPaneGrow","previousPane","nextPaneGrow","isMoved","growA","growB","isValidGrow","branchProportion","leafProportion","isInPane","PreBoxInner","innerPosition","paneWithPreBox","calcPreBox","current","boxPosition","proportion","calcBoxPosition","PreBox","useState","setPosition","useGesture","onDrag","xy","onDragStart","onDragEnd","drag","threshold","Arbutus","number","count","className","Apple","arbutus","cherry","apple","banana","lemon","mango","pomelo","nodeList","names","rootPane","App","href","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.106f3a2a.chunk.js","sourcesContent":["export * from './model'\nexport * from './view'\nexport * from './util'\n","export * from './Provider'\nexport * from './Container'\nexport * from './DraggableTitle'\n","import React, { memo, useMemo, useReducer } from 'react'\nimport useMeasure from 'react-use-measure'\nimport { StretchBarConfig, TileBranchSubstance, TilePane } from '../..'\nimport {\n  TitlePanesContext,\n  ContainerRectContext,\n  ContainerRefContext,\n  MovingTabsContext,\n  StretchBarsContext,\n  TileBranchesContext,\n  TileDispatchContext,\n  TileLeavesContext,\n  TileStoreReducer,\n  initRootNode,\n  TabsBarContext,\n  tileStoreReducer,\n  TabsBarConfig,\n  defaultTabsBarConfig,\n  StretchBarConfigContext,\n  defaultStretchBar,\n} from '.'\n\nexport interface TileProviderProps {\n  children?: React.ReactNode\n  rootNode: TileBranchSubstance\n  tilePanes: TilePane[]\n  TabBar?: TabsBarConfig\n  stretchBarConfig?: StretchBarConfig\n}\n\nconst TileProviderInner: React.FC<TileProviderProps> = ({\n  children,\n  rootNode: rootNodeSub,\n  tilePanes,\n  TabBar = defaultTabsBarConfig,\n  stretchBarConfig = defaultStretchBar,\n}: TileProviderProps) => {\n  const [\n    { branches, leaves, stretchBars, movingTabs },\n    tileStoreDispatch,\n  ] = useReducer<TileStoreReducer>(tileStoreReducer, {\n    movingTabs: [],\n    ...initRootNode(rootNodeSub),\n  })\n\n  const childrenMemo = useMemo(() => children, [children])\n  const [targetRef, containerRect] = useMeasure({ scroll: true })\n  return (\n    <ContainerRefContext.Provider value={targetRef}>\n      <TitlePanesContext.Provider value={tilePanes}>\n        <ContainerRectContext.Provider value={containerRect}>\n          <TileBranchesContext.Provider value={branches}>\n            <StretchBarConfigContext.Provider value={stretchBarConfig}>\n              <TileLeavesContext.Provider value={leaves}>\n                <StretchBarsContext.Provider value={stretchBars}>\n                  <TileDispatchContext.Provider value={tileStoreDispatch}>\n                    <MovingTabsContext.Provider value={movingTabs}>\n                      <TabsBarContext.Provider value={TabBar}>\n                        {childrenMemo}\n                      </TabsBarContext.Provider>\n                    </MovingTabsContext.Provider>\n                  </TileDispatchContext.Provider>\n                </StretchBarsContext.Provider>\n              </TileLeavesContext.Provider>\n            </StretchBarConfigContext.Provider>\n          </TileBranchesContext.Provider>\n        </ContainerRectContext.Provider>\n      </TitlePanesContext.Provider>\n    </ContainerRefContext.Provider>\n  )\n}\n\nexport const TileProvider = memo(TileProviderInner)\nexport * from './typings'\nexport * from './controller'\nexport * from './data'\nexport * from './config'\n","import { increasingID, PaneName } from '../..'\nimport {\n  TileBranchSubstance,\n  TileLeafSubstance,\n  TileNodeConstructor,\n  TileNodeRect,\n} from './typings'\nimport { branchDehydrate, leafDehydrate } from './util'\nimport { branchSetChildren, leafSetChildren } from './util/setChildren'\n\nexport class TileNode {\n  constructor(\n    public readonly id: string = increasingID(),\n    public readonly parent: TileBranch | null = null,\n    public grow: number = 1,\n    public rect: TileNodeRect = {\n      top: 0,\n      left: 0,\n      width: 1,\n      height: 1,\n    }\n  ) {}\n}\n\nexport class TileLeaf extends TileNode {\n  constructor(\n    public onTab: number = 0,\n    public children: PaneName[] = [],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n  }\n  public setChildren = leafSetChildren\n  public dehydrate = leafDehydrate\n}\n\nexport class TileBranch extends TileNode {\n  public children!: (TileBranch | TileLeaf)[]\n  constructor(\n    public isRow: boolean = false,\n    children: (TileBranchSubstance | TileLeafSubstance)[],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n    this.setChildren(children)\n  }\n\n  public setChildren = branchSetChildren\n  public dehydrate = branchDehydrate\n}\n\nexport * from './typings'\nexport * from './helper'\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n  isTileLeaf,\n} from '..'\n\nexport function leafDehydrate(this: TileLeaf): TileLeafSubstance {\n  const { children, onTab, grow } = this\n  return { children, onTab, grow }\n}\n\nexport function branchDehydrate(this: TileBranch): TileBranchSubstance {\n  const { children, isRow, grow } = this\n\n  const childrenDehydrated = children.map((it) =>\n    isTileLeaf(it) ? it.dehydrate() : it.dehydrate()\n  )\n  return { children: childrenDehydrated, isRow, grow }\n}\n","import { TileBranch, TileNodeRect } from '..'\n\nexport * from './dehydrate'\n\nexport function calcChildGrows(children: { grow?: number }[]) {\n  const growsSolid = children.map((c) => c.grow ?? 1)\n  const growSum = growsSolid.reduce((s, n) => (s += n), 0) // 部分值\n  const grows = growsSolid.map((c) => c / growSum) // 相对值\n  return grows\n}\n\nexport function calcChildRects(\n  parent: TileBranch,\n  grows: number[]\n): TileNodeRect[] {\n  const { isRow, rect } = parent\n  const { top, left, width, height } = rect\n  if (isRow) {\n    const childLeft = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 left\n        if (i > 0) arr.push(arr[i - 1] + width * grows[i - 1])\n        return arr\n      },\n      [left]\n    )\n    return grows.map((n, i) => ({\n      top,\n      height,\n      width: n * width,\n      left: childLeft[i],\n    }))\n  } else {\n    const childTop = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 top\n        if (i > 0) arr.push(arr[i - 1] + height * grows[i - 1])\n        return arr\n      },\n      [top]\n    )\n    return grows.map((n, i) => ({\n      left,\n      width,\n      height: n * height,\n      top: childTop[i],\n    }))\n  }\n}\n","export * from './unfold'\nexport * from './typings'\nexport * from './isNil'\nexport * from './createTitlePanes'\nexport * from './array'\n","export * from './tilePane'\n","import React, { memo, useContext, useMemo, useRef } from 'react'\nimport { TileLeavesContext } from '..'\nimport { PaneName } from '../..'\nimport { PreBox } from './components'\nimport { useDragAndPosition } from './hook'\nimport { PaneWithPreBox } from './typings'\n\nexport interface DraggableTitleProps {\n  name: PaneName\n  children?: React.ReactNode\n}\n\nconst DraggableTitleInner: React.FC<DraggableTitleProps> = ({\n  name,\n  children,\n}) => {\n  const paneWithPreBoxRef = useRef<PaneWithPreBox>()\n\n  const leaves = useContext(TileLeavesContext)\n  const pane = useMemo(() => leaves.find((p) => p.children.includes(name)), [\n    name,\n    leaves,\n  ])\n  const { position, bind } = useDragAndPosition(paneWithPreBoxRef, name, pane)\n\n  const style = useMemo(\n    () =>\n      (position\n        ? {\n            visibility: 'visible',\n            position: 'fixed',\n            top: position[1],\n            left: position[0],\n            transform: 'translate(-50%,-50%)',\n            zIndex: 1,\n          }\n        : {}) as React.CSSProperties,\n    [position]\n  )\n  return useMemo(\n    () => (\n      <>\n        {position && <PreBox {...{ paneWithPreBoxRef, position }} />}\n        <div {...{ ...bind(), style }} style={style}>\n          {children}\n        </div>\n      </>\n    ),\n    [bind, children, position, style]\n  )\n}\n\nexport const DraggableTitle = memo(DraggableTitleInner)\nexport * from './typings'\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../..'\n\nexport function isTileLeaf(\n  node: TileLeafSubstance | TileBranchSubstance | TileLeaf | TileBranch\n): node is TileLeafSubstance | TileLeaf {\n  const { children = '0' } = node\n  if (children instanceof Array) {\n    return isTilePaneNames(children)\n  }\n  return true\n}\n\nexport function isTilePaneNames(\n  list:\n    | PaneName[]\n    | (TileBranchSubstance | TileLeafSubstance)[]\n    | (TileLeaf | TileBranch)[]\n    | TileLeafSubstance[]\n    | TileBranchSubstance[]\n    | TileLeaf[]\n    | TileBranch[]\n): list is PaneName[] {\n  return !(list[0] instanceof Object)\n}\n","import { TileBranch, TileBranchSubstance } from '..'\n\nexport function createTileBranch(sub: TileBranchSubstance) {\n  const { isRow, children, id, grow } = sub\n  return new TileBranch(isRow, children, id, null, grow, undefined)\n}\n","const ref = { n: 0 }\nexport function increasingID() {\n  return (ref.n++).toString(36)\n}\n","import { calcChildGrows, calcChildRects } from '.'\nimport {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../../util'\nimport { isTileLeaf } from '../helper'\n\nexport function leafSetChildren(this: TileLeaf, children: PaneName[]) {\n  this.children = children\n}\n\nexport function branchSetChildren(\n  this: TileBranch,\n  children: (TileBranchSubstance | TileLeafSubstance)[]\n) {\n  const grows = calcChildGrows(children)\n  const rect = calcChildRects(this, grows)\n  this.children = children.map((it, i) =>\n    isTileLeaf(it)\n      ? new TileLeaf(\n          it.onTab,\n          it.children instanceof Array ? it.children : [it.children],\n          it.id,\n          this,\n          grows[i],\n          rect[i]\n        )\n      : new TileBranch(it.isRow, it.children, it.id, this, grows[i], rect[i])\n  )\n}\n","export * from './TileNode'\nexport * from './StretchBar'\n","import {\n  TileBranch,\n  TileLeaf,\n  StretchBarEntity,\n  isTilePaneNames,\n  isTileLeaf,\n} from '..'\n\nexport function unfold(node: TileBranch) {\n  const leaves: TileLeaf[] = []\n  const branches = [node]\n  const stretchBars: StretchBarEntity[] = []\n  unfold(node)\n  function unfold(pane: TileBranch) {\n    const { children } = pane\n    !isTilePaneNames(children) &&\n      (children as (TileBranch | TileLeaf)[]).forEach((p, i) => {\n        if (!isTileLeaf(p)) {\n          unfold(p)\n          branches.push(p)\n        } else {\n          leaves.push(p)\n        }\n        const prevPane = children[i - 1]\n        if (!prevPane) return\n        const bar = new StretchBarEntity(pane, prevPane, p)\n        stretchBars.push(bar)\n      })\n  }\n  return {\n    leaves,\n    branches,\n    stretchBars,\n  }\n}\n","import { ReactChild } from 'react'\nimport { TileNodeID, TilePane } from '..'\n\nexport function createTitlePanes<T extends Record<TileNodeID, ReactChild>>(\n  obj: T\n): [TilePane[], Record<keyof T, keyof T>] {\n  const map = {} as Record<TileNodeID, keyof T>\n  const list: TilePane[] = []\n  Object.keys(obj).forEach((key) => {\n    map[key] = key\n    list.push({\n      name: key,\n      child: obj[key],\n    })\n  })\n  return [list, map as Record<keyof T, keyof T>]\n}\n","export function removeInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1)\n  return newArr\n}\n\nexport function replaceInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T,\n  newOne: T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1, newOne)\n  return newArr\n}\n","import { createContext, Dispatch } from 'react'\nimport useMeasure, { RectReadOnly } from 'react-use-measure'\nimport { TileStoreAction } from '..'\nimport {\n  MovingTabAction,\n  MovingTab,\n  StretchBarEntity,\n  TileBranch,\n  TileLeaf,\n} from '../../..'\n\nexport const TileDispatchContext = createContext<Dispatch<TileStoreAction>>(\n  (s) => s\n)\nexport const TileBranchesContext = createContext<TileBranch[]>([])\nexport const TileLeavesContext = createContext<TileLeaf[]>([])\nexport const StretchBarsContext = createContext<StretchBarEntity[]>([])\n\nexport const MovingTabsContext = createContext<MovingTab[]>([])\nexport const MovingTabsDispatchContext = createContext<\n  React.Dispatch<MovingTabAction>\n>((s) => s)\n\nexport const ContainerRefContext = createContext<\n  ReturnType<typeof useMeasure>[0]\n>(() => null)\n\nconst defaultRect: RectReadOnly = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n}\nexport const ContainerRectContext = createContext(defaultRect)\n","import React, { memo, useMemo } from 'react'\nimport { TilePaneWithRect } from '../../../../../..'\nimport { useChild, useStyle } from './hook'\n\nexport interface TilePaneProps {\n  pane: TilePaneWithRect\n}\nconst TilePaneInner: React.FC<TilePaneProps> = ({ pane }) => {\n  const child = useChild(pane.name)\n  const style = useStyle(pane.rect)\n  return useMemo(() => <div style={style}>{child}</div>, [child, style])\n}\nexport const TilePane = memo(TilePaneInner)\n","import { useContext, useCallback, useMemo } from 'react'\nimport { TitlePanesContext } from '../../../../../..'\nimport { PaneName } from '../../../../../../..'\n\nexport function useChild(id: PaneName) {\n  const tilePanes = useContext(TitlePanesContext)\n\n  const findChildPane = useCallback(\n    (id: PaneName) => {\n      const pane = tilePanes.find((it) => it.name === id)\n      return pane?.child\n    },\n    [tilePanes]\n  )\n  const child = useMemo(() => findChildPane(id), [findChildPane, id])\n  return child\n}\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssCalcLength,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\n\nexport function useStyle(rect: TileNodeRect | null): CSSProperties {\n  const tabBar = useContext(TabsBarContext)\n  const { position } = tabBar\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(tabBar.thickness), [\n    tabBar.thickness,\n  ])\n  return rect\n    ? {\n        position: 'absolute',\n        height: isVertical\n          ? toCssCalcLength(rect.height, thickness, '-')\n          : toCssLength(rect.height),\n        width: isVertical\n          ? toCssLength(rect.width)\n          : toCssCalcLength(rect.width, thickness, '-'),\n        top:\n          isVertical && !isAfter\n            ? toCssCalcLength(rect.top, thickness, '+')\n            : toCssLength(rect.top),\n        left:\n          !isVertical && !isAfter\n            ? toCssCalcLength(rect.left, thickness, '+')\n            : toCssLength(rect.left),\n      }\n    : {\n        display: 'none',\n      }\n}\n","import React, { memo, useMemo } from 'react'\nimport { usePanes } from './hook'\nimport { TilePane } from './components'\n\nconst TilePanesInner: React.FC = () => {\n  const panes = usePanes()\n  return useMemo(\n    () => (\n      <>\n        {panes.map((pane) => (\n          <TilePane pane={pane} key={pane.name} />\n        ))}\n      </>\n    ),\n    [panes]\n  )\n}\n\nexport const TilePanes = memo(TilePanesInner)\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../../..'\nimport { TilePaneWithRect } from '../../../../../..'\n\nexport function usePanes() {\n  const movingTabs = useContext(MovingTabsContext)\n  const leaves = useContext(TileLeavesContext)\n\n  const panes: TilePaneWithRect[] = useMemo(() => {\n    const panes: TilePaneWithRect[] = movingTabs.map(({ name }) => ({\n      name,\n      rect: null,\n    }))\n    leaves.forEach((leaf) => {\n      panes.push(\n        ...leaf.children.map((name, i) => ({\n          name,\n          rect: leaf.onTab === i ? leaf.rect : null,\n        }))\n      )\n    })\n    return panes\n  }, [leaves, movingTabs])\n  return panes\n}\n","import React, { memo, useCallback, useContext, useMemo } from 'react'\nimport { TabsBarContext, TileDispatchContext } from '../../../../..'\nimport { PaneName, TileLeaf } from '../../../../../..'\nimport { useStyle } from './hook'\nexport interface TabBarProps {\n  leaf: TileLeaf\n  onTab: number\n  tabs: PaneName[]\n}\n\nexport type TabBarMoreProps = TabBarProps & {\n  isHidden?: boolean\n}\n\nexport interface TabBarAction {\n  switchTab: (onTab: number) => void\n  closeTab: (index: number) => void\n}\n\nconst TabsBarInner: React.FC<TabBarMoreProps> = (props) => {\n  const { leaf, isHidden } = props\n  const tabBar = useContext(TabsBarContext)\n  const dispatch = useContext(TileDispatchContext)\n\n  const switchTab = useCallback(\n    (onTab: number) =>\n      dispatch({\n        leafToSwitchTab: {\n          leaf,\n          onTab,\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const closeTab = useCallback(\n    (index: number) =>\n      dispatch({\n        leafToCloseTab: {\n          leaf,\n          name: leaf.children[index],\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const action: TabBarAction = useMemo(() => ({ switchTab, closeTab }), [\n    closeTab,\n    switchTab,\n  ])\n\n  const { render: Render } = tabBar\n  const style = useStyle(leaf.rect, isHidden)\n  return useMemo(\n    () => (\n      <div style={style}>\n        <Render action={action} {...props} />\n      </div>\n    ),\n    [Render, action, props, style]\n  )\n}\n\nexport const TabsBar = memo(TabsBarInner)\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\nexport function useStyle(\n  rect: TileNodeRect,\n  isHidden?: boolean\n): CSSProperties {\n  const table = useContext(TabsBarContext)\n  const { position } = table\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(table.thickness), [table])\n  return {\n    visibility: isHidden ? 'hidden' : undefined,\n    position: 'absolute',\n    width: isVertical ? toCssLength(rect.width) : thickness,\n    height: isVertical ? thickness : toCssLength(rect.height),\n    top: isAfter ? undefined : toCssLength(rect.top),\n    bottom: isAfter ? toCssLength(1 - rect.top - rect.height) : undefined,\n    left: isAfter ? undefined : toCssLength(rect.left),\n    right: isAfter ? toCssLength(1 - rect.left - rect.width) : undefined,\n  }\n}\n","import React, { memo, useMemo } from 'react'\nimport { TabsBar } from './components'\nimport { useTabs } from './hook'\n\nconst TabsBarsInner: React.FC = () => {\n  const tabBars = useTabs()\n  return useMemo(\n    () => (\n      <>\n        {tabBars.map((tabBar) => (\n          <TabsBar key={tabBar.leaf.id} {...tabBar} />\n        ))}\n      </>\n    ),\n    [tabBars]\n  )\n}\n\nexport const TabsBars = memo(TabsBarsInner)\nexport * from './components'\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../..'\nimport { TabBarMoreProps } from '../components'\n\nexport function useTabs() {\n  const leaves = useContext(TileLeavesContext)\n  const movingTabs = useContext(MovingTabsContext)\n\n  const tabBarsProps = useMemo(() => {\n    const tabBarsProps: TabBarMoreProps[] = leaves.map((leaf) => ({\n      leaf,\n      onTab: leaf.onTab,\n      tabs: leaf.children.slice(),\n    }))\n    movingTabs.forEach((tab) => {\n      const tabBar = tabBarsProps.find((it) => it.leaf.id === tab.leaf.id)\n      if (tabBar) {\n        tabBar.tabs.push(tab.name)\n      } else {\n        tabBarsProps.push({\n          leaf: tab.leaf,\n          onTab: tab.leaf.onTab,\n          tabs: [tab.name],\n          isHidden: true,\n        })\n      }\n    })\n    return tabBarsProps\n  }, [leaves, movingTabs])\n  return tabBarsProps\n}\n","import { TileNodeRect } from '../../../../../..'\n\nexport function calcBarStyles(\n  { top, left, width, height }: TileNodeRect,\n  thickness: number,\n  isRow?: boolean\n) {\n  return {\n    top: isRow ? top * 100 + '%' : `calc(${top * 100}% - ${thickness / 2}px)`,\n    left: isRow\n      ? `calc(${left * 100}% - ${thickness / 2}px)`\n      : left * 100 + '%',\n    width: isRow ? thickness : width * 100 + '%',\n    height: isRow ? height * 100 + '%' : thickness,\n  }\n}\n","import React, { useCallback, useContext, useMemo } from 'react'\nimport { useDrag } from 'react-use-gesture'\nimport {\n  ContainerRectContext,\n  StretchBarConfigContext,\n  TileDispatchContext,\n} from '../../../..'\nimport { StretchBarEntity } from '../../../../..'\nimport { calcBarStyles } from './util'\n\nexport interface StretchBarProps {\n  bar: StretchBarEntity\n}\n\nconst StretchBarInner: React.FC<StretchBarProps> = ({ bar }) => {\n  const containerRect = useContext(ContainerRectContext)\n  const dispatch = useContext(TileDispatchContext)\n  const { thickness } = useContext(StretchBarConfigContext)\n  const moveBar = useCallback(\n    (mx: number, my: number) => {\n      const distance = bar.parentPane.isRow\n        ? mx / containerRect.width\n        : my / containerRect.height\n      dispatch({\n        barToMove: {\n          bar,\n          distance,\n        },\n      })\n    },\n    [bar, containerRect.height, containerRect.width, dispatch]\n  )\n\n  const bind = useDrag(\n    ({ down, delta: [mx, my] }) => {\n      down && moveBar(mx, my)\n    },\n    { enabled: true }\n  )\n  const { top, left, width, height } = bar.nextPane.rect\n  const { isRow } = bar.parentPane\n\n  return useMemo(\n    () => (\n      <div\n        {...bind()}\n        style={{\n          position: 'absolute',\n          background: '#8191ec66',\n          ...calcBarStyles({ top, left, width, height }, thickness, isRow),\n        }}\n      />\n    ),\n    [bind, height, isRow, left, thickness, top, width]\n  )\n}\n\nexport const StretchBar = React.memo(StretchBarInner)\n","import React, { memo, useContext, useMemo } from 'react'\nimport { StretchBarsContext } from '../../..'\nimport { StretchBar } from './StretchBar'\n\nconst StretchBarsInner: React.FC = () => {\n  const bars = useContext(StretchBarsContext)\n  return useMemo(\n    () => (\n      <>\n        {bars.map((bar) => (\n          <StretchBar bar={bar} key={bar.nextPane.id} />\n        ))}\n      </>\n    ),\n    [bars]\n  )\n}\n\nexport const StretchBars = memo(StretchBarsInner)\n","import { TabsBarPosition } from '../..'\n\nexport function toCssLength(length: number) {\n  return `${length * 100}%`\n}\n\nexport function toCssCalcLength(\n  percent: number,\n  offset: string,\n  mode: '+' | '-'\n) {\n  return `calc(${toCssLength(percent)} ${mode} ${offset})`\n}\n\nexport const toQuadrant = (position: TabsBarPosition) => [\n  (['top', 'bottom'] as TabsBarPosition[]).includes(position),\n  (['right', 'bottom'] as TabsBarPosition[]).includes(position),\n]\n\nexport const completeUnit = (len: number | string) =>\n  typeof len === 'number' ? `${len}px` : len\n","import React, { memo, useContext, useMemo } from 'react'\nimport { ContainerRefContext } from '..'\nimport { StretchBars, TabsBars, TilePanes } from './components'\n\nexport interface TileContainerProps {\n  width?: string | number\n  height?: string | number\n}\n\nconst TileContainerInner: React.FC<TileContainerProps> = ({\n  width = '100%',\n  height = '100%',\n}) => {\n  const targetRef = useContext(ContainerRefContext)\n  return useMemo(\n    () => (\n      <div ref={targetRef} style={{ position: 'relative', width, height }}>\n        <TabsBars />\n        <TilePanes />\n        <StretchBars />\n      </div>\n    ),\n    [height, targetRef, width]\n  )\n}\n\nexport const TileContainer = memo(TileContainerInner)\nexport * from './utils'\nexport * from './components'\n","import { TileStore } from '../..'\nimport {\n  MovingTab,\n  removeInArray,\n  TileBranch,\n  TileLeaf,\n  unfold,\n} from '../../../..'\n\nexport function startMovingTab(\n  { movingTabs, leaves, branches, rootNode }: TileStore,\n  tabToStopMoving: MovingTab,\n  notMoving?: boolean\n): TileStore {\n  const newMovingTabs = movingTabs.slice()\n  const { name } = tabToStopMoving\n  const existedTab = newMovingTabs.find((it) => (it.name = name))\n  if (!notMoving && !existedTab) {\n    newMovingTabs.push(tabToStopMoving)\n  }\n\n  const leaf = leaves.find((l) => l.children.includes(name))\n  if (leaf) {\n    const newChildren = removeInArray(leaf.children, name)\n    leaf.onTab = 0\n    leaf.setChildren(newChildren)\n    if (newChildren.length === 0) {\n      removeNode(branches, leaf)\n    }\n  }\n\n  const nodes = unfold(rootNode)\n  return {\n    movingTabs: newMovingTabs,\n    rootNode,\n    ...nodes,\n  }\n}\n\nfunction removeNode(branches: TileBranch[], node: TileLeaf | TileBranch) {\n  const parent = branches.find((it) => it === node.parent)\n  if (parent) {\n    const newChildren = removeInArray(\n      parent.children,\n      (it) => it.id === node.id\n    )\n    if (newChildren.length === 0) {\n      removeNode(branches, parent)\n    } else {\n      parent.setChildren(newChildren)\n    }\n  }\n}\n","import { TileStore } from '../..'\nimport { Into, PaneWithPreBox } from '../../..'\nimport {\n  PaneName,\n  removeInArray,\n  unfold,\n  isTileLeaf,\n  TileBranch,\n  TileLeaf,\n  TileLeafSubstance,\n  TileBranchSubstance,\n  replaceInArray,\n} from '../../../..'\n\nexport type TabToStopMoving = {\n  pane: PaneName\n  preBox?: PaneWithPreBox\n}\n\nexport function stopMovingTab(\n  { movingTabs, ...rest }: TileStore,\n  { pane, preBox }: TabToStopMoving\n): TileStore {\n  const newMovingTabs = removeInArray(movingTabs, (it) => (it.name = pane))\n  if (preBox) {\n    const { rootNode } = rest\n    insertPane(pane, preBox, rest)\n    const nodes = unfold(rootNode)\n    return { movingTabs: newMovingTabs, rootNode, ...nodes }\n  } else return { movingTabs: newMovingTabs, ...rest }\n}\n\nfunction insertPane(\n  pane: PaneName,\n  preBox: PaneWithPreBox,\n  nodes: Pick<TileStore, 'branches' | 'leaves'>\n) {\n  const { targetNode: node, into } = preBox\n  const { leaves, branches } = nodes\n  const isNext = ['right', 'bottom'].includes(into)\n  const isBrother = isSegment(node, into)\n  const isRow = ['right', 'left'].includes(into)\n\n  if (isTileLeaf(node)) {\n    const leaf = leaves.find((it) => it === node)\n    if (leaf) {\n      if (into === 'center') {\n        const newChildren = leaf.children.slice()\n        newChildren.push(pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = leaf.children.length - 1\n      } else {\n        isBrother\n          ? segment(node, pane, isNext)\n          : fission(node, pane, isNext, isRow)\n      }\n    }\n  } else {\n    const branch = branches.find((it) => it === node)\n    if (branch) {\n      fission(node, pane, isNext, isRow)\n    }\n  }\n}\n\n/** 分割 ——插入同级节点 */\nfunction segment(node: TileBranch | TileLeaf, pane: PaneName, isNext: boolean) {\n  const { parent } = node\n  if (!parent) return\n  const grow = node.grow / 2\n  const leaf: TileLeafSubstance = { grow, children: [pane] }\n  node.grow = grow\n  const indexInParent = parent.children.findIndex((it) => it === node)\n  const index = isNext ? indexInParent + 1 : indexInParent\n  const newNodes: (\n    | TileBranchSubstance\n    | TileLeafSubstance\n  )[] = parent.children.slice()\n  newNodes.splice(index, 0, leaf)\n  parent.setChildren(newNodes)\n}\n\n/** 分裂 ——插入子级节点*/\nfunction fission(\n  node: TileBranch | TileLeaf,\n  pane: PaneName,\n  isNext: boolean,\n  isRow: boolean\n) {\n  const { parent, grow } = node\n  if (!parent) {\n    const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n    const oldLeaf: TileBranchSubstance | TileLeafSubstance = isTileLeaf(node)\n      ? node.dehydrate()\n      : node.dehydrate()\n    if (!isTileLeaf(node)) {\n      node.isRow = isRow\n      node.setChildren(isNext ? [oldLeaf, newLeaf] : [newLeaf, oldLeaf])\n    }\n    return\n  }\n  const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n  const branch: TileBranchSubstance = {\n    grow,\n    isRow,\n    children: isNext ? [node, newLeaf] : [newLeaf, node],\n  }\n  const newNodes = replaceInArray<TileBranchSubstance | TileLeafSubstance>(\n    parent?.children,\n    node,\n    branch\n  )\n  parent.setChildren(newNodes)\n}\n\nfunction isSegment(node: TileBranch | TileLeaf, into: Into): boolean {\n  const isRow = node.parent?.isRow\n  const segmentInto: Into[] = isRow ? ['left', 'right'] : ['top', 'bottom']\n  return segmentInto.includes(into)\n}\n","import { createTileBranch, TileBranchSubstance, unfold } from '../../..'\n\nexport function initRootNode(rootNodeSub: TileBranchSubstance) {\n  const rootNode = createTileBranch(rootNodeSub)\n  const nodes = unfold(rootNode)\n  return { rootNode, ...nodes }\n}\n","import { TileStoreReducer } from '../..'\nimport { MovingTab, TileLeaf } from '../../..'\nimport { BarToMove, moveBar } from './moveBar'\nimport { startMovingTab, stopMovingTab, TabToStopMoving } from './MovingTab'\nimport { switchLeafTab } from './switchLeafTab'\n\nexport * from './initRootNode'\n\nexport type TileStoreAction = {\n  leafToSwitchTab?: {\n    leaf: TileLeaf\n    onTab: number\n  }\n  leafToCloseTab?: MovingTab\n  tabToStopMoving?: TabToStopMoving\n  tabToStartMoving?: MovingTab\n  barToMove?: BarToMove\n}\n\nexport const tileStoreReducer: TileStoreReducer = (\n  state,\n  {\n    leafToSwitchTab,\n    tabToStopMoving,\n    tabToStartMoving,\n    barToMove,\n    leafToCloseTab,\n  }\n) => {\n  if (leafToSwitchTab) return switchLeafTab(state, leafToSwitchTab)\n  if (leafToCloseTab) return startMovingTab(state, leafToCloseTab, true)\n  if (tabToStartMoving) return startMovingTab(state, tabToStartMoving)\n  if (tabToStopMoving) return stopMovingTab(state, tabToStopMoving)\n  if (barToMove) return moveBar(state, barToMove)\n  return state\n}\n","import { TileLeaf } from '../../..'\nimport { TileStore } from '../typings'\n\nexport function switchLeafTab(\n  state: TileStore,\n  switchLeafTab: { leaf: TileLeaf; onTab: number }\n) {\n  const { leaves, ...rest } = state\n  const newLeaves = leaves.slice()\n  const leaf = newLeaves.find((l) => l === switchLeafTab.leaf)\n  if (leaf) {\n    leaf.onTab = switchLeafTab.onTab\n  }\n  return { leaves: newLeaves, ...rest }\n}\n","import { StretchBarEntity, TileStore, unfold } from '../../..'\n\nexport type BarToMove = {\n  distance: number\n  bar: StretchBarEntity\n}\n\nexport function moveBar(\n  { rootNode, movingTabs }: TileStore,\n  barToMove: BarToMove\n): TileStore {\n  const { bar, distance } = barToMove\n  bar.move(distance)\n  const nodes = unfold(rootNode)\n  return { ...nodes, movingTabs, rootNode }\n}\n","import React, { createContext, memo, useMemo } from 'react'\nimport { TabBarAction, TabBarProps } from '../../..'\nimport { DraggableTitle } from '../../../DraggableTitle'\n\nexport type TabBarPropsWithAction = TabBarProps & { action: TabBarAction }\n\nconst TabBarInner: React.FC<TabBarPropsWithAction> = ({\n  tabs,\n  onTab,\n  action,\n}) => {\n  return useMemo(\n    () => (\n      <div\n        style={{\n          display: 'flex',\n          width: '100%',\n          height: '100%',\n          justifyContent: 'space-around',\n        }}\n      >\n        {tabs.map((tab, i) => (\n          <DraggableTitle name={tab} key={tab}>\n            <div\n              onClick={() => action.switchTab(i)}\n              style={{ color: onTab === i ? '#222222' : '#999999' }}\n            >\n              {tab}\n            </div>\n          </DraggableTitle>\n        ))}\n      </div>\n    ),\n    [action, onTab, tabs]\n  )\n}\nexport type TabsBarPosition = 'left' | 'right' | 'top' | 'bottom'\nexport type TabsBarConfig = {\n  render: React.FC<TabBarPropsWithAction>\n  thickness: number | string\n  position: TabsBarPosition\n}\n\nexport const DefaultTabBar = memo(TabBarInner)\nexport const defaultTabsBarConfig: TabsBarConfig = {\n  render: DefaultTabBar,\n  thickness: 20,\n  position: 'top',\n}\nexport const TabsBarContext = createContext<TabsBarConfig>(defaultTabsBarConfig)\n","import { createContext } from 'react'\n\nexport type StretchBarConfig = {\n  thickness: number\n}\nexport const defaultStretchBar: StretchBarConfig = {\n  thickness: 10,\n}\nexport const StretchBarConfigContext = createContext<StretchBarConfig>(\n  defaultStretchBar\n)\n","import { createContext } from 'react'\nimport { TilePane } from '../../..'\n\nexport const TitlePanesContext = createContext<TilePane[]>([])\nexport * from './TabBar'\nexport * from './StretchBar'\n","import { StretchBarEntity } from '..'\n\n/**\n * @param {number} distance percentage in container\n * @return {boolean} Did the move succeed?\n */\nexport function move(this: StretchBarEntity, distance: number): boolean {\n  const lengthSum = this.parentPane.isRow\n    ? this.parentPane.rect.width\n    : this.parentPane.rect.height\n  const offset = distance / lengthSum\n  const previousPaneGrow = this.previousPane.grow + offset\n  const nextPaneGrow = this.nextPane.grow - offset\n  const isMoved = isValidGrow(previousPaneGrow, nextPaneGrow)\n  if (isMoved) {\n    this.previousPane.grow = previousPaneGrow\n    this.nextPane.grow = nextPaneGrow\n    this.parentPane.setChildren(this.parentPane.children)\n  }\n  return isMoved\n}\n\nfunction isValidGrow(growA: number, growB: number): boolean {\n  if (growA < 0.04 || growB < 0.04) return false\n  const growSum = growA + growB\n  if (growA > growSum || growB > growSum) return false\n  return true\n}\n","import { TileBranch, TileNode } from '..'\nimport { move } from './util'\n\nexport class StretchBarEntity {\n  constructor(\n    public parentPane: TileBranch,\n    public previousPane: TileNode,\n    public nextPane: TileNode\n  ) {}\n  rect = this.nextPane.rect\n  move = move\n}\n","import { TileBranch, TileLeaf, TileNodeRect } from '../../..'\nimport { PaneWithPreBox } from '../typings'\n\nconst branchProportion = 0.05\nconst leafProportion = 0.3\nexport function calcPreBox(\n  branches: TileBranch[],\n  leaves: TileLeaf[],\n  innerPosition: [number, number]\n): PaneWithPreBox | undefined {\n  if (!innerPosition) return\n  const [x, y] = innerPosition\n  for (const pane of branches) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (pane.isRow) {\n        if (y - top < height * branchProportion) {\n          return { targetNode: pane, into: 'top' }\n        }\n        if (top + height - y < height * branchProportion) {\n          return { targetNode: pane, into: 'bottom' }\n        }\n      } else {\n        if (x - left < width * branchProportion) {\n          return { targetNode: pane, into: 'left' }\n        }\n        if (left + width - x < width * branchProportion) {\n          return { targetNode: pane, into: 'right' }\n        }\n      }\n    }\n  }\n\n  for (const pane of leaves) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (x - left < width * leafProportion) {\n        return { targetNode: pane, into: 'left' }\n      }\n      if (left + width - x < width * leafProportion) {\n        return { targetNode: pane, into: 'right' }\n      }\n      if (y - top < height * leafProportion) {\n        return { targetNode: pane, into: 'top' }\n      }\n      if (top + height - y < height * leafProportion) {\n        return { targetNode: pane, into: 'bottom' }\n      }\n      return { targetNode: pane, into: 'center' }\n    }\n  }\n}\n\nfunction isInPane(position: TileNodeRect, [x, y]: [number, number]) {\n  const { left, top, width, height } = position\n  return left < x && x < left + width && top < y && y < top + height\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { Vector2 } from 'react-use-gesture/dist/types'\nimport { RectReadOnly } from 'react-use-measure'\nimport {\n  ContainerRectContext,\n  TileBranchesContext,\n  TileLeavesContext,\n} from '../../..'\nimport { TileNodeRect } from '../../../../model'\nimport { PaneWithPreBox } from '../../typings'\nimport { calcPreBox } from '../../util'\n\nexport interface PreBoxProps {\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>\n  position: Vector2\n}\n\nconst PreBoxInner: React.FC<PreBoxProps> = ({\n  position,\n  paneWithPreBoxRef,\n}) => {\n  const containerRect = useContext(ContainerRectContext)\n  const branches = useContext(TileBranchesContext)\n  const leaves = useContext(TileLeavesContext)\n  const innerPosition = useMemo(() => {\n    return [\n      (position[0] - containerRect.left) / containerRect.width,\n      (position[1] - containerRect.top) / containerRect.height,\n    ] as Vector2\n  }, [containerRect, position])\n  const paneWithPreBox = useMemo(\n    () => calcPreBox(branches, leaves, innerPosition),\n    [branches, innerPosition, leaves]\n  )\n  paneWithPreBoxRef.current = paneWithPreBox\n  return useMemo(() => {\n    if (!paneWithPreBox) return null\n    const boxPosition = calcBoxPosition(paneWithPreBox, containerRect)\n\n    return (\n      <div\n        style={{\n          zIndex: 1,\n          visibility: 'visible',\n          background: '#e4a4fd66',\n          position: 'fixed',\n          ...boxPosition,\n        }}\n      />\n    )\n  }, [containerRect, paneWithPreBox])\n}\n\nconst proportion = 0.5\nexport const PreBox = memo(PreBoxInner)\n\nfunction calcBoxPosition(\n  paneWithPreBox: PaneWithPreBox,\n  containerRect: RectReadOnly\n): TileNodeRect {\n  const { targetNode, into } = paneWithPreBox\n  const { top, left, width, height } = targetNode.rect\n\n  switch (into) {\n    case 'center':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width,\n      }\n    case 'left':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'right':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left:\n          containerRect.left +\n          left * containerRect.width +\n          containerRect.width * width * (1 - proportion),\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'top':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    case 'bottom':\n      return {\n        top:\n          containerRect.top +\n          top * containerRect.height +\n          containerRect.height * height * (1 - proportion),\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n  }\n}\n","import { useState, useContext } from 'react'\nimport { useGesture } from 'react-use-gesture'\nimport { Vector2 } from 'react-use-gesture/dist/types'\nimport { TileDispatchContext } from '../../..'\nimport { PaneName, TileLeaf } from '../../../..'\nimport { PaneWithPreBox } from '../../typings'\n\nexport function useDragAndPosition(\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>,\n  name: PaneName,\n  leaf: TileLeaf | undefined\n) {\n  const dispatch = useContext(TileDispatchContext)\n  const [position, setPosition] = useState<Vector2>()\n\n  const bind = useGesture(\n    {\n      onDrag: ({ down, xy }) => {\n        const position = down ? xy : undefined\n        setPosition(position)\n      },\n      onDragStart: () => {\n        leaf && dispatch({ tabToStartMoving: { name, leaf } })\n      },\n      onDragEnd: () => {\n        dispatch({\n          tabToStopMoving: { pane: name, preBox: paneWithPreBoxRef.current },\n        })\n      },\n    },\n    { drag: { threshold: 10 } }\n  )\n\n  return { bind, position }\n}\n","import React, { useState } from 'react'\nimport {\n  createTitlePanes,\n  DraggableTitle,\n  TileBranchSubstance,\n  TileContainer,\n  TileProvider,\n} from '../components'\nimport './App.css'\n\nfunction Arbutus() {\n  const [number, count] = useState(1)\n  return (\n    <div onClick={() => count((n) => n + 1)} className=\"pane\">\n      {number} 颗杨梅\n    </div>\n  )\n}\n\nfunction Apple() {\n  return <div className=\"pane\">苹果</div>\n}\n\nconst [nodeList, names] = createTitlePanes({\n  arbutus: <Arbutus />,\n  cherry: <div className=\"pane\">樱桃</div>,\n  apple: <Apple />,\n  banana: <div className=\"pane\">香蕉🍌</div>,\n  lemon: <div className=\"pane\">柠檬</div>,\n  mango: <div className=\"pane\">芒果</div>,\n  pomelo: <div className=\"pane\">柚子</div>,\n})\n\nconst rootPane: TileBranchSubstance = {\n  children: [\n    { children: [names.apple, names.cherry] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        { children: names.arbutus },\n        { children: names.lemon },\n        {\n          children: [\n            { children: names.mango, grow: 3 },\n            { children: names.pomelo },\n          ],\n        },\n      ],\n    },\n  ],\n}\n\nconst App: React.FC = () => {\n  return (\n    <TileProvider tilePanes={nodeList} rootNode={rootPane}>\n      <div className=\"App\">\n        <div style={{ height: 30 }} />\n        <div className=\"fence\">\n          <TileContainer />\n        </div>\n      </div>\n      <DraggableTitle name={names.banana}>拖动这个香蕉🍌</DraggableTitle>\n      <a href=\"https://xcfox.github.io/react-tile-pane/\">查看文档</a>\n    </TileProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport reportWebVitals from './common/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}