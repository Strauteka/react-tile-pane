{
  "version": 3,
  "sources": [
    "components/tilePane/index.ts",
    "components/tilePane/view/index.ts",
    "components/tilePane/view/Provider/index.tsx",
    "components/index.ts",
    "components/tilePane/view/DraggableTitle/components/PreBox/util/calcBoxPosition.ts",
    "components/tilePane/view/DraggableTitle/components/PreBox/util/calcLeafWithTitleRect.ts",
    "components/tilePane/view/DraggableTitle/components/PreBox/util/index.ts",
    "components/tilePane/model/TileNode/index.ts",
    "components/tilePane/view/DraggableTitle/components/PreBox/index.tsx",
    "components/tilePane/view/DraggableTitle/components/PreBox/hook/useCalcPreBox.ts",
    "components/tilePane/view/Provider/config/TabBar/index.tsx",
    "components/tilePane/view/Provider/config/StretchBar/index.ts",
    "components/tilePane/view/Provider/config/PreBox/index.ts",
    "components/tilePane/view/Provider/config/Pane/index.ts",
    "components/tilePane/view/Provider/config/index.ts",
    "components/tilePane/model/TileNode/util/dehydrate.ts",
    "components/tilePane/model/TileNode/util/index.ts",
    "components/tilePane/util/index.ts",
    "components/tilePane/view/DraggableTitle/index.tsx",
    "components/tilePane/view/DraggableTitle/hook/useMovingChecker/index.ts",
    "components/tilePane/model/TileNode/helper/isTileLeaf.ts",
    "components/tilePane/model/TileNode/helper/createTileNode.ts",
    "components/tilePane/model/TileNode/helper/increasingID.ts",
    "components/tilePane/view/DraggableTitle/hook/useDragAndPosition/index.ts",
    "components/tilePane/view/DraggableTitle/hook/useThrottle/index.ts",
    "components/tilePane/view/DraggableTitle/util/index.ts",
    "components/tilePane/model/TileNode/util/setChildren.ts",
    "components/tilePane/model/index.ts",
    "components/tilePane/util/unfold.ts",
    "components/tilePane/util/createTilePanes.ts",
    "components/tilePane/util/array.ts",
    "components/tilePane/view/Container/components/TilePanes/components/TilePane/index.tsx",
    "components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useChild.ts",
    "components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useStyle.ts",
    "components/tilePane/view/Container/components/TilePanes/index.tsx",
    "components/tilePane/view/Container/components/TilePanes/hook/usePanes/index.ts",
    "components/tilePane/view/Container/components/TabsBars/components/TabsBar/index.tsx",
    "components/tilePane/view/Container/components/TabsBars/components/TabsBar/hook/index.ts",
    "components/tilePane/view/Container/components/TabsBars/index.tsx",
    "components/tilePane/view/Container/components/TabsBars/hook/index.ts",
    "components/tilePane/view/Container/components/StretchBars/StretchBar/util/calcBarStyles.ts",
    "components/tilePane/view/Container/components/StretchBars/StretchBar/index.tsx",
    "components/tilePane/view/Container/components/StretchBars/StretchBar/hook/index.ts",
    "components/tilePane/view/Container/components/StretchBars/index.tsx",
    "components/tilePane/view/Container/utils/toCssLength.ts",
    "components/tilePane/view/Container/index.tsx",
    "components/tilePane/view/Provider/controller/MovingTab/startMovingTab.ts",
    "components/tilePane/view/Provider/controller/MovingTab/stopMovingTab.ts",
    "components/tilePane/view/Provider/controller/initRootNode.ts",
    "components/tilePane/view/Provider/controller/index.ts",
    "components/tilePane/view/Provider/controller/switchLeafTab.ts",
    "components/tilePane/view/Provider/controller/moveBar.ts",
    "components/tilePane/view/Provider/hook/useRootPane/index.ts",
    "components/tilePane/view/Provider/hook/useGetLeaf/index.ts",
    "components/tilePane/view/Provider/hook/useMove/index.ts",
    "components/tilePane/model/StretchBar/util/index.ts",
    "components/tilePane/model/StretchBar/index.ts",
    "components/tilePane/view/Provider/data/TitleRects/index.tsx",
    "components/tilePane/view/Provider/data/index.ts",
    "components/tilePane/view/DraggableTitle/components/index.ts",
    "App/demo/left-tab/style/index.module.css",
    "App/demo/simple/index.tsx",
    "App/demo/left-tab/style/index.ts",
    "App/demo/left-tab/panes.tsx",
    "App/demo/left-tab/tab-bar/index.tsx",
    "App/demo/left-tab/index.tsx",
    "App/App.tsx",
    "common/reportWebVitals.ts",
    "index.tsx"
  ],
  "names": [
    "TileProviderInner",
    "children",
    "rootNodeSub",
    "rootNode",
    "tilePanes",
    "tabBar",
    "defaultTabsBarConfig",
    "stretchBar",
    "defaultStretchBar",
    "preBox",
    "defaultPreBox",
    "pane",
    "defaultPane",
    "useReducer",
    "tileStoreReducer",
    "movingTabs",
    "initRootNode",
    "branches",
    "leaves",
    "stretchBars",
    "tileStoreDispatch",
    "childrenMemo",
    "useMemo",
    "useMeasure",
    "scroll",
    "targetRef",
    "containerRect",
    "Provider",
    "value",
    "TileProvider",
    "memo",
    "calcBoxPosition",
    "paneWithPreBox",
    "top",
    "left",
    "height",
    "width",
    "node",
    "leaf",
    "branch",
    "target",
    "into",
    "rect",
    "proportion",
    "thickness",
    "calcTitleBoxPosition",
    "leafWithTitleRects",
    "config",
    "tab",
    "isNext",
    "currentTitle",
    "current",
    "find",
    "it",
    "title",
    "isEnd",
    "isReverse",
    "intoLeft",
    "intoRight",
    "intoTop",
    "intoBottom",
    "intoPrev",
    "isRow",
    "intoNext",
    "toInContainer",
    "calcLeafWithTitleRect",
    "titleRects",
    "forEach",
    "index",
    "push",
    "branchProportion",
    "leafProportion",
    "calcPreBox",
    "innerPosition",
    "x",
    "y",
    "titleRect",
    "isInPane",
    "position",
    "TileNode",
    "id",
    "increasingID",
    "parent",
    "grow",
    "TileLeaf",
    "onTab",
    "rest",
    "setChildren",
    "leafSetChildren",
    "dehydrate",
    "leafDehydrate",
    "TileBranch",
    "branchSetChildren",
    "branchDehydrate",
    "PreBoxInner",
    "paneWithPreBoxRef",
    "useContext",
    "ContainerRectContext",
    "PreBoxConfigContext",
    "throttle",
    "style",
    "className",
    "child",
    "preBoxInTabBar",
    "TabsBarContext",
    "TileBranchesContext",
    "TileLeavesContext",
    "TitleRectsContext",
    "absolute2Relative",
    "calcLazyPreBox",
    "useThrottleFn",
    "useCalcPreBox",
    "styled",
    "classNamed",
    "boxPosition",
    "zIndex",
    "visibility",
    "PreBox",
    "TabBarInner",
    "tabs",
    "action",
    "checkTabMoving",
    "useMovingChecker",
    "map",
    "i",
    "DraggableTitle",
    "isMoving",
    "name",
    "onClick",
    "switchTab",
    "closeTab",
    "render",
    "createContext",
    "cursor",
    "StretchBarConfigContext",
    "PaneContext",
    "TitlePanesContext",
    "this",
    "isTileLeaf",
    "calcChildGrows",
    "growsSolid",
    "c",
    "growSum",
    "reduce",
    "s",
    "n",
    "calcChildRects",
    "grows",
    "childLeft",
    "arr",
    "childTop",
    "DraggableTitleInner",
    "props",
    "useRef",
    "LeafContext",
    "useDragAndPosition",
    "bind",
    "childrenFn",
    "styleFn",
    "classNameFn",
    "orFn",
    "useFn",
    "isDragging",
    "setTitleRects",
    "SetTitleRectsContext",
    "useEffect",
    "transform",
    "userSelect",
    "ref",
    "MovingTabsContext",
    "useCallback",
    "includes",
    "Array",
    "isTilePaneNames",
    "list",
    "Object",
    "createTileBranch",
    "sub",
    "undefined",
    "toString",
    "dispatch",
    "TileDispatchContext",
    "useState",
    "setPosition",
    "velocity",
    "setVelocities",
    "useGesture",
    "onDrag",
    "down",
    "xy",
    "onDragStart",
    "tabToStartMoving",
    "onDragEnd",
    "tabToStopMoving",
    "drag",
    "threshold",
    "fn",
    "ms",
    "result",
    "timerRef",
    "throttledFn",
    "window",
    "setTimeout",
    "clearTimeout",
    "orFunc",
    "args",
    "filter",
    "findIndex",
    "unfold",
    "p",
    "prevPane",
    "bar",
    "StretchBarEntity",
    "createTilePanes",
    "obj",
    "keys",
    "key",
    "removeInArray",
    "one",
    "newArr",
    "slice",
    "Function",
    "splice",
    "replaceInArray",
    "newOne",
    "TilePaneInner",
    "findChildPane",
    "useChild",
    "toQuadrant",
    "isVertical",
    "isAfter",
    "completeUnit",
    "toCssCalcLength",
    "toCssLength",
    "display",
    "useStyle",
    "TilePane",
    "TilePanesInner",
    "panes",
    "usePanes",
    "TilePanes",
    "TabsBarInner",
    "isHidden",
    "leafToSwitchTab",
    "leafToCloseTab",
    "Render",
    "table",
    "bottom",
    "right",
    "TabsBar",
    "TabsBarsInner",
    "tabBars",
    "tabBarsProps",
    "onTabs",
    "tabIndex",
    "leafIndex",
    "useTabs",
    "TabsBars",
    "calcBarStyles",
    "offset",
    "StretchBarInner",
    "parentPane",
    "move",
    "accumulation",
    "distance",
    "barToMove",
    "useThrottleMove",
    "moveBar",
    "mx",
    "my",
    "useDrag",
    "delta",
    "enabled",
    "nextPane",
    "positionToOffset",
    "StretchBar",
    "React",
    "StretchBarsInner",
    "bars",
    "StretchBarsContext",
    "StretchBars",
    "length",
    "percent",
    "mode",
    "len",
    "TileContainerInner",
    "ContainerRefContext",
    "TileContainer",
    "startMovingTab",
    "notMoving",
    "newMovingTabs",
    "existedTab",
    "l",
    "newChildren",
    "removeNode",
    "nodes",
    "stopMovingTab",
    "next",
    "isBrother",
    "isSegment",
    "row",
    "indexInParent",
    "newNodes",
    "segment",
    "fission",
    "insertPane",
    "newLeaf",
    "oldLeaf",
    "state",
    "switchLeafTab",
    "newLeaves",
    "useRootPane",
    "useGetLeaf",
    "useMovePane",
    "previousPaneGrow",
    "previousPane",
    "nextPaneGrow",
    "isMoved",
    "growA",
    "growB",
    "isValidGrow",
    "TitleRectsProvider",
    "defaultRect",
    "MousePositionContext",
    "module",
    "exports",
    "localStorageKey",
    "Arbutus",
    "number",
    "count",
    "Apple",
    "arbutus",
    "cherry",
    "apple",
    "banana",
    "lemon",
    "mango",
    "pomelo",
    "nodeList",
    "names",
    "rootPane",
    "SaveLayout",
    "localStorage",
    "setItem",
    "JSON",
    "stringify",
    "SimpleDemo",
    "localRoot",
    "getItem",
    "root",
    "parse",
    "href",
    "color",
    "size",
    "full",
    "flex",
    "center",
    "justifyContent",
    "alignItems",
    "around",
    "between",
    "columnBetween",
    "flexDirection",
    "styles",
    "container",
    "background",
    "tabTitle",
    "marginBottom",
    "tabTitleOn",
    "closeButton",
    "fontSize",
    "pineapple",
    "grape",
    "kiwifruit",
    "icons",
    "tabBarConfig",
    "PaneIcon",
    "getLeaf",
    "isShowing",
    "padding",
    "marginLeft",
    "marginRight",
    "borderRadius",
    "LeftTabDemo",
    "css",
    "marginTop",
    "demos",
    "App",
    "demo",
    "setDemo",
    "document",
    "body",
    "reportWebVitals",
    "onPerfEntry",
    "then",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "ReactDOM",
    "StrictMode",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.609f1df5.chunk.js",
  "sourcesContent": [
    "export * from './model'\nexport * from './view'\nexport * from './util'\n",
    "export * from './Provider'\nexport * from './Container'\nexport * from './DraggableTitle'\n",
    "import React, { memo, useMemo, useReducer } from 'react'\nimport useMeasure from 'react-use-measure'\nimport {\n  PreBoxConfig,\n  StretchBarConfig,\n  TileBranchSubstance,\n  TilePane,\n  TitleRectsProvider,\n} from '../..'\nimport {\n  TitlePanesContext,\n  ContainerRectContext,\n  ContainerRefContext,\n  MovingTabsContext,\n  StretchBarsContext,\n  TileBranchesContext,\n  TileDispatchContext,\n  TileLeavesContext,\n  TileStoreReducer,\n  initRootNode,\n  TabsBarContext,\n  tileStoreReducer,\n  TabsBarConfig,\n  defaultTabsBarConfig,\n  StretchBarConfigContext,\n  defaultStretchBar,\n  PaneContext,\n} from '.'\nimport {\n  defaultPane,\n  defaultPreBox,\n  PaneConfig,\n  PreBoxConfigContext,\n} from './config'\n\nexport interface TileProviderProps {\n  children?: React.ReactNode\n  rootNode: TileBranchSubstance\n  tilePanes: TilePane[]\n  tabBar?: TabsBarConfig\n  preBox?: PreBoxConfig\n  stretchBar?: StretchBarConfig\n  pane?: PaneConfig\n}\n\nconst TileProviderInner: React.FC<TileProviderProps> = ({\n  children,\n  rootNode: rootNodeSub,\n  tilePanes,\n  tabBar = defaultTabsBarConfig,\n  stretchBar = defaultStretchBar,\n  preBox = defaultPreBox,\n  pane = defaultPane,\n}: TileProviderProps) => {\n  const [\n    { branches, leaves, stretchBars, movingTabs },\n    tileStoreDispatch,\n  ] = useReducer<TileStoreReducer>(tileStoreReducer, {\n    movingTabs: [],\n    ...initRootNode(rootNodeSub),\n  })\n\n  const childrenMemo = useMemo(() => children, [children])\n  const [targetRef, containerRect] = useMeasure({ scroll: true })\n  return (\n    <ContainerRefContext.Provider value={targetRef}>\n      <PreBoxConfigContext.Provider value={preBox}>\n        <TitlePanesContext.Provider value={tilePanes}>\n          <ContainerRectContext.Provider value={containerRect}>\n            <TileBranchesContext.Provider value={branches}>\n              <StretchBarConfigContext.Provider value={stretchBar}>\n                <TileLeavesContext.Provider value={leaves}>\n                  <PaneContext.Provider value={pane}>\n                    <StretchBarsContext.Provider value={stretchBars}>\n                      <TileDispatchContext.Provider value={tileStoreDispatch}>\n                        <MovingTabsContext.Provider value={movingTabs}>\n                          <TabsBarContext.Provider value={tabBar}>\n                            <TitleRectsProvider>\n                              {childrenMemo}\n                            </TitleRectsProvider>\n                          </TabsBarContext.Provider>\n                        </MovingTabsContext.Provider>\n                      </TileDispatchContext.Provider>\n                    </StretchBarsContext.Provider>\n                  </PaneContext.Provider>\n                </TileLeavesContext.Provider>\n              </StretchBarConfigContext.Provider>\n            </TileBranchesContext.Provider>\n          </ContainerRectContext.Provider>\n        </TitlePanesContext.Provider>\n      </PreBoxConfigContext.Provider>\n    </ContainerRefContext.Provider>\n  )\n}\n\nexport const TileProvider = memo(TileProviderInner)\nexport * from './typings'\nexport * from './controller'\nexport * from './data'\nexport * from './config'\nexport * from './hook'\n",
    "export * from './tilePane'\n",
    "import { RectReadOnly } from 'react-use-measure'\nimport { TileNodeRect } from '../../../../../model'\nimport { PaneWithPreBox } from '../../../typings'\nimport { proportion } from '..'\nimport { LeafWithTitleRect } from '.'\nimport { TabsBarConfig } from '../../../..'\n\nexport function calcBoxPosition(\n  paneWithPreBox: PaneWithPreBox | undefined,\n  containerRect: RectReadOnly\n): TileNodeRect {\n  if (!paneWithPreBox)\n    return {\n      top: containerRect.top,\n      left: containerRect.left,\n      height: containerRect.height,\n      width: containerRect.width,\n    }\n  const node = paneWithPreBox.leaf ?? paneWithPreBox.branch\n  if (!node) return { top: 0, left: 0, height: 1, width: 1 }\n  const { target, into } = node\n  const { top, left, width, height } = target.rect\n\n  switch (into) {\n    case 'left':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'right':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left:\n          containerRect.left +\n          left * containerRect.width +\n          containerRect.width * width * (1 - proportion),\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'top':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    case 'bottom':\n      return {\n        top:\n          containerRect.top +\n          top * containerRect.height +\n          containerRect.height * height * (1 - proportion),\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    default:\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width,\n      }\n  }\n}\n\nconst thickness = 0.01\nexport function calcTitleBoxPosition(\n  paneWithPreBox: PaneWithPreBox | undefined,\n  leafWithTitleRects: LeafWithTitleRect[],\n  config: TabsBarConfig['preBox']\n): TileNodeRect | undefined {\n  if (!paneWithPreBox?.tab) return\n  const { target, into, isNext } = paneWithPreBox.tab\n  const { children } = target\n  const currentTitle = children[into]\n  const current = leafWithTitleRects.find((it) => it.title === currentTitle)\n\n  if (current) {\n    const { top, left, height, width } = current.rect\n    const isEnd = config?.isReverse ? !isNext : isNext\n    const intoLeft = { top, left, height, width: thickness }\n    const intoRight = {\n      top,\n      height,\n      width: thickness,\n      left: left + width - thickness,\n    }\n    const intoTop = { top, left, height: thickness, width }\n    const intoBottom = {\n      top: top + height - thickness,\n      height: thickness,\n      width,\n      left,\n    }\n    const intoPrev = config?.isRow ? intoLeft : intoTop\n    const intoNext = config?.isRow ? intoRight : intoBottom\n    return isEnd ? intoNext : intoPrev\n  }\n}\n\nexport function toInContainer(\n  rect: TileNodeRect | undefined,\n  containerRect: RectReadOnly\n): TileNodeRect | undefined {\n  if (!rect) return\n  const { top, left, width, height } = rect\n  return {\n    top: containerRect.top + top * containerRect.height,\n    left: containerRect.left + left * containerRect.width,\n    height: containerRect.height * height,\n    width: containerRect.width * width,\n  }\n}\n",
    "import { PaneName, TileLeaf, TileNodeRect } from '../../../../..'\n\nexport interface LeafWithTitleRect {\n  leaf: TileLeaf\n  index: number\n  title: PaneName\n  rect: TileNodeRect\n}\n\nexport function calcLeafWithTitleRect(\n  titleRects: Record<PaneName, TileNodeRect>,\n  leaves: TileLeaf[]\n): LeafWithTitleRect[] {\n  const leafWithTitleRects: LeafWithTitleRect[] = []\n  leaves.forEach((leaf) => {\n    leaf.children.forEach((title, index) => {\n      const rect = titleRects[title]\n      if (!rect) return\n      leafWithTitleRects.push({\n        leaf,\n        title,\n        index,\n        rect,\n      })\n    })\n  })\n  return leafWithTitleRects\n}\n",
    "import {\n  TabsBarConfig,\n  TileBranch,\n  TileLeaf,\n  TileNodeRect,\n} from '../../../../..'\nimport { PaneWithPreBox } from '../../../typings'\nimport { LeafWithTitleRect } from './calcLeafWithTitleRect'\n\nconst branchProportion = 0.05\nconst leafProportion = 0.3\nexport function calcPreBox(\n  branches: TileBranch[],\n  leaves: TileLeaf[],\n  leafWithTitleRects: LeafWithTitleRect[],\n  innerPosition: [number, number],\n  config: TabsBarConfig['preBox']\n): PaneWithPreBox | undefined {\n  if (!innerPosition) return\n  const [x, y] = innerPosition\n\n  for (const { leaf, rect: titleRect, index } of leafWithTitleRects) {\n    if (isInPane(titleRect, innerPosition)) {\n      const isEnd = config?.isRow\n        ? titleRect.left + titleRect.width / 2 < x\n        : titleRect.top + titleRect.height / 2 < y\n      const isNext = config?.isReverse ? !isEnd : isEnd\n      return {\n        tab: {\n          target: leaf,\n          into: index,\n          isNext,\n        },\n      }\n    }\n  }\n\n  for (const pane of branches) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (pane.isRow) {\n        if (y - top < height * branchProportion)\n          return { branch: { target: pane, into: 'top' } }\n        if (top + height - y < height * branchProportion)\n          return { branch: { target: pane, into: 'bottom' } }\n      } else {\n        if (x - left < width * branchProportion)\n          return { branch: { target: pane, into: 'left' } }\n        if (left + width - x < width * branchProportion)\n          return { branch: { target: pane, into: 'right' } }\n      }\n    }\n  }\n\n  for (const pane of leaves) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (x - left < width * leafProportion)\n        return { leaf: { target: pane, into: 'left' } }\n      if (left + width - x < width * leafProportion)\n        return { leaf: { target: pane, into: 'right' } }\n      if (y - top < height * leafProportion)\n        return { leaf: { target: pane, into: 'top' } }\n      if (top + height - y < height * leafProportion)\n        return { leaf: { target: pane, into: 'bottom' } }\n      return { leaf: { target: pane, into: 'center' } }\n    }\n  }\n}\n\nfunction isInPane(position: TileNodeRect, [x, y]: [number, number]) {\n  const { left, top, width, height } = position\n  return left < x && x < left + width && top < y && y < top + height\n}\n\nexport * from './calcBoxPosition'\nexport * from './calcLeafWithTitleRect'\n",
    "import { increasingID, PaneName } from '../..'\nimport {\n  TileBranchSubstance,\n  TileLeafSubstance,\n  TileNodeConstructor,\n  TileNodeRect,\n} from './typings'\nimport { branchDehydrate, leafDehydrate } from './util'\nimport { branchSetChildren, leafSetChildren } from './util/setChildren'\n\nexport class TileNode {\n  constructor(\n    public readonly id: string = increasingID(),\n    public readonly parent: TileBranch | null = null,\n    public grow: number = 1,\n    public rect: TileNodeRect = {\n      top: 0,\n      left: 0,\n      width: 1,\n      height: 1,\n    }\n  ) {}\n}\n\nexport class TileLeaf extends TileNode {\n  constructor(\n    public onTab: number = 0,\n    public children: PaneName[] = [],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n  }\n  public setChildren = leafSetChildren\n  public dehydrate = leafDehydrate\n}\n\nexport class TileBranch extends TileNode {\n  public children!: (TileBranch | TileLeaf)[]\n  constructor(\n    public isRow: boolean = false,\n    children: (TileBranchSubstance | TileLeafSubstance)[],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n    this.setChildren(children)\n  }\n\n  public setChildren = branchSetChildren\n  public dehydrate = branchDehydrate\n}\n\nexport * from './typings'\nexport * from './helper'\n",
    "import React, { memo, useContext, useMemo } from 'react'\nimport { Vector2 } from 'react-use-gesture/dist/types'\nimport {\n  ContainerRectContext,\n  PreBoxConfigContext,\n  TabsBarContext,\n} from '../../..'\nimport { PaneWithPreBox } from '../../typings'\nimport { useCalcPreBox } from './hook/useCalcPreBox'\nimport { calcBoxPosition, calcTitleBoxPosition, toInContainer } from './util'\n\nexport interface PreBoxProps {\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>\n  position: Vector2\n}\n\nconst PreBoxInner: React.FC<PreBoxProps> = ({\n  position,\n  paneWithPreBoxRef,\n}) => {\n  const containerRect = useContext(ContainerRectContext)\n  const { throttle, style, className, child } = useContext(PreBoxConfigContext)\n  const { preBox: preBoxInTabBar } = useContext(TabsBarContext)\n\n  const { paneWithPreBox, leafWithTitleRects } = useCalcPreBox(\n    position,\n    throttle\n  )\n  paneWithPreBoxRef.current = paneWithPreBox\n\n  return useMemo(() => {\n    const styled =\n      typeof style === 'function' ? style(paneWithPreBox ?? {}) : style\n    const classNamed =\n      typeof className === 'function'\n        ? className(paneWithPreBox ?? {})\n        : className\n    const boxPosition =\n      toInContainer(\n        calcTitleBoxPosition(\n          paneWithPreBox,\n          leafWithTitleRects,\n          preBoxInTabBar\n        ),\n        containerRect\n      ) ?? calcBoxPosition(paneWithPreBox, containerRect)\n    const children =\n      typeof child === 'function' ? child(paneWithPreBox ?? {}) : child\n\n    return (\n      <div\n        className={classNamed}\n        style={{\n          ...styled,\n          zIndex: 1,\n          visibility: 'visible',\n          position: 'fixed',\n          ...boxPosition,\n        }}\n      >\n        {children}\n      </div>\n    )\n  }, [\n    child,\n    className,\n    containerRect,\n    leafWithTitleRects,\n    paneWithPreBox,\n    preBoxInTabBar,\n    style,\n  ])\n}\n\nexport const proportion = 0.5\nexport const PreBox = memo(PreBoxInner)\n",
    "import { useContext, useMemo } from 'react'\nimport {\n  ContainerRectContext,\n  TileBranchesContext,\n  TileLeavesContext,\n  TabsBarContext,\n  absolute2Relative,\n  TitleRectsContext,\n  Vector2,\n} from '../../../..'\nimport { useThrottleFn } from '../../../hook'\nimport { calcLeafWithTitleRect, calcPreBox } from '../util'\n\nexport function useCalcPreBox(position: Vector2, throttle?: number) {\n  const containerRect = useContext(ContainerRectContext)\n  const branches = useContext(TileBranchesContext)\n  const leaves = useContext(TileLeavesContext)\n  const { preBox: preBoxInTabBar } = useContext(TabsBarContext)\n  const titleRects = useContext(TitleRectsContext)\n\n  const leafWithTitleRects = useMemo(\n    () => calcLeafWithTitleRect(titleRects, leaves),\n    [leaves, titleRects]\n  )\n\n  const innerPosition = useMemo(\n    () => absolute2Relative(containerRect, ...position),\n    [containerRect, position]\n  )\n\n  const calcLazyPreBox = useThrottleFn(calcPreBox, throttle)\n  const paneWithPreBox = useMemo(\n    () =>\n      calcLazyPreBox(\n        branches,\n        leaves,\n        leafWithTitleRects,\n        innerPosition,\n        preBoxInTabBar\n      ),\n    [\n      branches,\n      calcLazyPreBox,\n      innerPosition,\n      leafWithTitleRects,\n      leaves,\n      preBoxInTabBar,\n    ]\n  )\n  return { paneWithPreBox, leafWithTitleRects }\n}\n",
    "import React, { createContext, memo, useMemo } from 'react'\nimport { TabBarAction, TabBarProps } from '../../..'\nimport { DraggableTitle, useMovingChecker } from '../../../DraggableTitle'\n\nexport type TabBarPropsWithAction = TabBarProps & { action: TabBarAction }\n\nconst TabBarInner: React.FC<TabBarPropsWithAction> = ({\n  tabs,\n  onTab,\n  action,\n}) => {\n  const checkTabMoving = useMovingChecker()\n\n  return useMemo(\n    () => (\n      <div className=\"react-tile-pane-tabBar\">\n        {tabs.map((tab, i) => (\n          <DraggableTitle\n            className={(isMoving) =>\n              isMoving ? 'react-tile-pane-tabMoving' : 'react-tile-pane-tab'\n            }\n            name={tab}\n            key={tab}\n          >\n            <div\n              className={\n                i === onTab\n                  ? 'react-tile-pane-tabInner '\n                  : 'react-tile-pane-tabInnerOff'\n              }\n              onClick={() => action.switchTab(i)}\n            >\n              <div className=\"react-tile-pane-tabTitle\">{tab}</div>\n              {!checkTabMoving(tabs[i]) && (\n                <div\n                  className=\"react-tile-pane-off\"\n                  onClick={() => action.closeTab(i)}\n                >\n                  ×\n                </div>\n              )}\n            </div>\n          </DraggableTitle>\n        ))}\n      </div>\n    ),\n    [action, checkTabMoving, onTab, tabs]\n  )\n}\nexport type TabsBarPosition = 'left' | 'right' | 'top' | 'bottom'\nexport type TabsBarConfig = {\n  render: React.FC<TabBarPropsWithAction>\n  thickness: number | string\n  position: TabsBarPosition\n  preBox?: {\n    isRow?: boolean\n    isReverse?: boolean\n  }\n}\n\nexport const DefaultTabBar = memo(TabBarInner)\nexport const defaultTabsBarConfig: TabsBarConfig = {\n  render: DefaultTabBar,\n  thickness: 24,\n  position: 'top',\n  preBox: {\n    isRow: true,\n    isReverse: false,\n  },\n}\nexport const TabsBarContext = createContext<TabsBarConfig>(defaultTabsBarConfig)\n",
    "import { CSSProperties, createContext, ReactChild } from 'react'\nexport type StretchBarConfig = {\n  style?: ((isRow: boolean) => CSSProperties) | CSSProperties\n  className?: ((isRow: boolean) => string) | string\n  child?: ((isRow: boolean) => ReactChild) | ReactChild\n  position?: 'middle' | 'front' | 'back'\n  /** **millisecond**, Controls the minimum Trigger Period of the Stretch Bar */\n  throttle?: number\n}\n\nexport const defaultStretchBar: StretchBarConfig = {\n  className: (isRow) => (isRow ? 'react-tile-pane-Bar' : 'react-tile-pane-Bar'),\n  style: (isRow) => ({ cursor: isRow ? 'ew-resize' : 'ns-resize' }),\n}\n\nexport const StretchBarConfigContext = createContext<StretchBarConfig>(\n  defaultStretchBar\n)\n",
    "import { CSSProperties, createContext, ReactChild } from 'react'\nimport { PaneWithPreBox } from '../../..'\n\nexport type PreBoxTarget = 'leaf' | 'branch' | 'tab' | null\n\nexport type PreBoxConfig = {\n  style?: ((paneWithPreBox: PaneWithPreBox) => CSSProperties) | CSSProperties\n  className?: ((paneWithPreBox: PaneWithPreBox) => string) | string\n  child?: ((paneWithPreBox: PaneWithPreBox) => ReactChild) | ReactChild\n  /** **millisecond**, Control PreBox calculation frequency */\n  throttle?: number\n}\n\nexport const defaultPreBox: PreBoxConfig = {\n  throttle: 66,\n  className: ({ branch, leaf, tab }) => {\n    if (branch) return 'react-tile-pane-preBranch'\n    if (leaf) return 'react-tile-pane-preBox'\n    if (tab) return 'react-tile-pane-preBoxInTab'\n    return 'react-tile-pane-noPreBox'\n  },\n}\n\nexport const PreBoxConfigContext = createContext<PreBoxConfig>(defaultPreBox)\n",
    "import { createContext, CSSProperties } from 'react'\n\nexport interface PaneConfig {\n  style?: CSSProperties\n  className?: string\n}\n\nexport const defaultPane: PaneConfig = {}\n\nexport const PaneContext = createContext<PaneConfig>(defaultPane)\n",
    "import { createContext } from 'react'\nimport { TilePane } from '../../..'\n\nexport const TitlePanesContext = createContext<TilePane[]>([])\nexport * from './TabBar'\nexport * from './StretchBar'\nexport * from './PreBox'\nexport * from './Pane'\n",
    "import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n  isTileLeaf,\n} from '..'\n\nexport function leafDehydrate(this: TileLeaf): TileLeafSubstance {\n  const { children, onTab, grow } = this\n  return { children, onTab, grow }\n}\n\nexport function branchDehydrate(this: TileBranch): TileBranchSubstance {\n  const { children, isRow, grow } = this\n\n  const childrenDehydrated = children.map((it) =>\n    isTileLeaf(it) ? it.dehydrate() : it.dehydrate()\n  )\n  return { children: childrenDehydrated, isRow, grow }\n}\n",
    "import { TileBranch, TileNodeRect } from '..'\n\nexport * from './dehydrate'\n\nexport function calcChildGrows(children: { grow?: number }[]) {\n  const growsSolid = children.map((c) => c.grow ?? 1)\n  const growSum = growsSolid.reduce((s, n) => (s += n), 0) // 部分值\n  const grows = growsSolid.map((c) => c / growSum) // 相对值\n  return grows\n}\n\nexport function calcChildRects(\n  parent: TileBranch,\n  grows: number[]\n): TileNodeRect[] {\n  const { isRow, rect } = parent\n  const { top, left, width, height } = rect\n  if (isRow) {\n    const childLeft = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 left\n        if (i > 0) arr.push(arr[i - 1] + width * grows[i - 1])\n        return arr\n      },\n      [left]\n    )\n    return grows.map((n, i) => ({\n      top,\n      height,\n      width: n * width,\n      left: childLeft[i],\n    }))\n  } else {\n    const childTop = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 top\n        if (i > 0) arr.push(arr[i - 1] + height * grows[i - 1])\n        return arr\n      },\n      [top]\n    )\n    return grows.map((n, i) => ({\n      left,\n      width,\n      height: n * height,\n      top: childTop[i],\n    }))\n  }\n}\n",
    "export * from './unfold'\nexport * from './typings'\nexport * from './isNil'\nexport * from './createTilePanes'\nexport * from './array'\n",
    "import React, {\n  memo,\n  useContext,\n  useMemo,\n  useRef,\n  CSSProperties,\n  useEffect,\n} from 'react'\nimport useMeasure from 'react-use-measure'\nimport { LeafContext, SetTitleRectsContext } from '..'\nimport { PaneName } from '../..'\nimport { PreBox } from './components'\nimport { useDragAndPosition } from './hook'\nimport { PaneWithPreBox } from './typings'\nimport { orFn } from './util'\n\nexport type DraggableTitleProps = {\n  name: PaneName\n  children?: React.ReactNode | ((isMoving: boolean) => React.ReactNode)\n  style?: CSSProperties | ((isMoving: boolean) => CSSProperties)\n  className?: string | ((isMoving: boolean) => string)\n} & React.DOMAttributes<HTMLDivElement>\n\nconst DraggableTitleInner: React.FC<DraggableTitleProps> = (props) => {\n  const { name } = props\n  const paneWithPreBoxRef = useRef<PaneWithPreBox>()\n\n  const pane = useContext(LeafContext)\n  const { position, bind, isDragging } = useDragAndPosition(\n    paneWithPreBoxRef,\n    name,\n    pane\n  )\n\n  const { style, className, children, rest } = useFn(props, isDragging)\n\n  const [targetRef, rect] = useMeasure({ scroll: true })\n  const setTitleRects = useContext(SetTitleRectsContext)\n\n  const { left, height, top, width } = rect\n  useEffect(() => {\n    setTitleRects({ name, rect: { left, height, top, width } })\n  }, [height, left, name, rect, setTitleRects, top, width])\n\n  const styled = useMemo(\n    () =>\n      (position\n        ? {\n            ...style,\n            visibility: 'visible',\n            position: 'fixed',\n            left: position[0],\n            top: position[1],\n            transform: 'translate(-50%,-50%)',\n            zIndex: 1,\n            userSelect: 'none',\n          }\n        : style) as React.CSSProperties,\n    [position, style]\n  )\n  return useMemo(\n    () => (\n      <>\n        {position && <PreBox {...{ paneWithPreBoxRef, position }} />}\n        <div\n          {...bind()}\n          {...rest}\n          ref={targetRef}\n          style={styled}\n          className={className}\n        >\n          {children}\n        </div>\n      </>\n    ),\n    [bind, children, className, position, rest, styled, targetRef]\n  )\n}\n\nfunction useFn(\n  {\n    children: childrenFn,\n    style: styleFn,\n    className: classNameFn,\n    ...rest\n  }: DraggableTitleProps,\n  isMoving: boolean\n) {\n  const style = useMemo(() => orFn(styleFn, isMoving), [isMoving, styleFn])\n  const children = useMemo(() => orFn(childrenFn, isMoving), [\n    childrenFn,\n    isMoving,\n  ])\n  const className = useMemo(() => orFn(classNameFn, isMoving), [\n    classNameFn,\n    isMoving,\n  ])\n  return { style, children, className, rest }\n}\n\nexport const DraggableTitle = memo(DraggableTitleInner)\nexport * from './typings'\nexport * from './hook/useMovingChecker'\n",
    "import { useCallback, useContext } from 'react'\nimport { MovingTabsContext } from '../../..'\nimport { PaneName } from '../../../..'\n\nexport function useMovingChecker() {\n  const tabs = useContext(MovingTabsContext)\n  const isMoving = useCallback(\n    (name: PaneName) => tabs.map((tab) => tab.name).includes(name),\n    [tabs]\n  )\n  return isMoving\n}\n",
    "import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../..'\n\nexport function isTileLeaf(\n  node: TileLeafSubstance | TileBranchSubstance | TileLeaf | TileBranch\n): node is TileLeafSubstance | TileLeaf {\n  const { children = '0' } = node\n  if (children instanceof Array) {\n    return isTilePaneNames(children)\n  }\n  return true\n}\n\nexport function isTilePaneNames(\n  list:\n    | PaneName[]\n    | (TileBranchSubstance | TileLeafSubstance)[]\n    | (TileLeaf | TileBranch)[]\n    | TileLeafSubstance[]\n    | TileBranchSubstance[]\n    | TileLeaf[]\n    | TileBranch[]\n): list is PaneName[] {\n  return !(list[0] instanceof Object)\n}\n",
    "import { TileBranch, TileBranchSubstance } from '..'\n\nexport function createTileBranch(sub: TileBranchSubstance) {\n  const { isRow, children, id, grow } = sub\n  return new TileBranch(isRow, children, id, null, grow, undefined)\n}\n",
    "const ref = { n: 0 }\nexport function increasingID() {\n  return (ref.n++).toString(36)\n}\n",
    "import { useState, useContext } from 'react'\nimport { useGesture } from 'react-use-gesture'\nimport { TileDispatchContext } from '../../..'\nimport { PaneName, TileLeaf } from '../../../..'\nimport { PaneWithPreBox } from '../../typings'\n\nexport function useDragAndPosition(\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>,\n  name: PaneName,\n  leaf: TileLeaf | undefined\n) {\n  const dispatch = useContext(TileDispatchContext)\n  const [position, setPosition] = useState<[number, number]>()\n  const [velocity, setVelocities] = useState(0)\n  const isDragging = !!position\n\n  const bind = useGesture(\n    {\n      onDrag: ({ down, xy, velocity }) => {\n        if (down) {\n          setPosition(xy)\n          setVelocities(velocity)\n        } else {\n          setVelocities(0)\n          setPosition(undefined)\n        }\n      },\n      onDragStart: () => dispatch({ tabToStartMoving: { name, leaf } }),\n      onDragEnd: () =>\n        dispatch({\n          tabToStopMoving: { pane: name, preBox: paneWithPreBoxRef.current },\n        }),\n    },\n    { drag: { threshold: 10 } }\n  )\n\n  return { bind, position, velocity, isDragging }\n}\n",
    "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useCallback, useRef } from 'react'\n\nexport function useThrottleFn<Fn extends (...args: any[]) => any>(\n  fn: Fn,\n  ms?: number\n): Fn {\n  const result = useRef<any>()\n  const timerRef = useRef<number>()\n\n  const throttledFn = useCallback(\n    (...arg) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, ms)\n        result.current = fn(...arg)\n      }\n      return result.current\n    },\n    [fn, ms]\n  )\n\n  return ms ? (throttledFn as Fn) : fn\n}\n",
    "export function orFn<As extends unknown[], T = unknown>(\n  orFunc: T | ((...args: As) => T),\n  ...args: As\n) {\n  return typeof orFunc === 'function'\n    ? (orFunc as (...args: As) => T)(...args)\n    : orFunc\n}\n",
    "import { calcChildGrows, calcChildRects } from '.'\nimport {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../../util'\nimport { isTileLeaf } from '../helper'\n\nexport function leafSetChildren(this: TileLeaf, children: PaneName[]) {\n  this.children = children.filter(\n    (child, i) => children.findIndex((it) => it === child) === i\n  )\n}\n\nexport function branchSetChildren(\n  this: TileBranch,\n  children: (TileBranchSubstance | TileLeafSubstance)[]\n) {\n  const grows = calcChildGrows(children)\n  const rect = calcChildRects(this, grows)\n  this.children = children\n    .filter((child, i) => children.findIndex((it) => it === child) === i)\n    .map((it, i) =>\n      isTileLeaf(it)\n        ? new TileLeaf(\n            it.onTab,\n            it.children instanceof Array ? it.children : [it.children],\n            it.id,\n            this,\n            grows[i],\n            rect[i]\n          )\n        : new TileBranch(it.isRow, it.children, it.id, this, grows[i], rect[i])\n    )\n}\n",
    "export * from './TileNode'\nexport * from './StretchBar'\n",
    "import {\n  TileBranch,\n  TileLeaf,\n  StretchBarEntity,\n  isTilePaneNames,\n  isTileLeaf,\n} from '..'\n\nexport function unfold(node: TileBranch) {\n  const leaves: TileLeaf[] = []\n  const branches = [node]\n  const stretchBars: StretchBarEntity[] = []\n  unfold(node)\n  function unfold(pane: TileBranch) {\n    const { children } = pane\n    !isTilePaneNames(children) &&\n      (children as (TileBranch | TileLeaf)[]).forEach((p, i) => {\n        if (!isTileLeaf(p)) {\n          unfold(p)\n          branches.push(p)\n        } else {\n          leaves.push(p)\n        }\n        const prevPane = children[i - 1]\n        if (!prevPane) return\n        const bar = new StretchBarEntity(pane, prevPane, p)\n        stretchBars.push(bar)\n      })\n  }\n  return {\n    leaves,\n    branches,\n    stretchBars,\n  }\n}\n",
    "import { ReactChild } from 'react'\nimport { PaneName, TilePane } from '..'\n\nexport function createTilePanes<T extends Record<PaneName, ReactChild>>(\n  obj: T\n): [TilePane[], Record<keyof T, keyof T>] {\n  const map = {} as Record<PaneName, keyof T>\n  const list: TilePane[] = []\n  Object.keys(obj).forEach((key) => {\n    map[key] = key\n    list.push({\n      name: key,\n      child: obj[key],\n    })\n  })\n  return [list, map as Record<keyof T, keyof T>]\n}\n",
    "export function removeInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1)\n  return newArr\n}\n\nexport function replaceInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T,\n  newOne: T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1, newOne)\n  return newArr\n}\n",
    "import React, { memo, useContext, useMemo } from 'react'\nimport { PaneContext, TilePaneWithRect } from '../../../../../..'\nimport { useChild, useStyle } from './hook'\n\nexport interface TilePaneProps {\n  pane: TilePaneWithRect\n}\nconst TilePaneInner: React.FC<TilePaneProps> = ({ pane }) => {\n  const { style, className } = useContext(PaneContext)\n  const child = useChild(pane.name)\n  const styled = useStyle(pane.rect)\n  return useMemo(\n    () => (\n      <div className={className} style={{ ...style, ...styled }}>\n        {child}\n      </div>\n    ),\n    [child, className, style, styled]\n  )\n}\nexport const TilePane = memo(TilePaneInner)\n",
    "import { useContext, useCallback, useMemo } from 'react'\nimport { TitlePanesContext } from '../../../../../..'\nimport { PaneName } from '../../../../../../..'\n\nexport function useChild(id: PaneName) {\n  const tilePanes = useContext(TitlePanesContext)\n\n  const findChildPane = useCallback(\n    (id: PaneName) => {\n      const pane = tilePanes.find((it) => it.name === id)\n      return pane?.child\n    },\n    [tilePanes]\n  )\n  const child = useMemo(() => findChildPane(id), [findChildPane, id])\n  return child\n}\n",
    "import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssCalcLength,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\n\nexport function useStyle(rect: TileNodeRect | null): CSSProperties {\n  const tabBar = useContext(TabsBarContext)\n  const { position } = tabBar\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(tabBar.thickness), [\n    tabBar.thickness,\n  ])\n  return rect\n    ? {\n        position: 'absolute',\n        height: isVertical\n          ? toCssCalcLength(rect.height, thickness, '-')\n          : toCssLength(rect.height),\n        width: isVertical\n          ? toCssLength(rect.width)\n          : toCssCalcLength(rect.width, thickness, '-'),\n        top:\n          isVertical && !isAfter\n            ? toCssCalcLength(rect.top, thickness, '+')\n            : toCssLength(rect.top),\n        left:\n          !isVertical && !isAfter\n            ? toCssCalcLength(rect.left, thickness, '+')\n            : toCssLength(rect.left),\n      }\n    : {\n        display: 'none',\n      }\n}\n",
    "import React, { memo, useMemo } from 'react'\nimport { usePanes } from './hook'\nimport { TilePane } from './components'\n\nconst TilePanesInner: React.FC = () => {\n  const panes = usePanes()\n  return useMemo(\n    () => (\n      <>\n        {panes.map((pane) => (\n          <TilePane pane={pane} key={pane.name} />\n        ))}\n      </>\n    ),\n    [panes]\n  )\n}\n\nexport const TilePanes = memo(TilePanesInner)\n",
    "import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../../..'\nimport { TilePaneWithRect } from '../../../../../..'\n\nexport function usePanes() {\n  const movingTabs = useContext(MovingTabsContext)\n  const leaves = useContext(TileLeavesContext)\n\n  const panes: TilePaneWithRect[] = useMemo(() => {\n    const panes: TilePaneWithRect[] = movingTabs.map(({ name }) => ({\n      name,\n      rect: null,\n    }))\n    leaves.forEach((leaf) => {\n      panes.push(\n        ...leaf.children.map((name, i) => ({\n          name,\n          rect: leaf.onTab === i ? leaf.rect : null,\n        }))\n      )\n    })\n    return panes\n  }, [leaves, movingTabs])\n  return panes\n}\n",
    "import React, {\n  createContext,\n  memo,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react'\nimport { TabsBarContext, TileDispatchContext } from '../../../../..'\nimport { PaneName, TileLeaf } from '../../../../../..'\nimport { useStyle } from './hook'\nexport interface TabBarProps {\n  leaf: TileLeaf\n  onTab: number\n  tabs: PaneName[]\n}\n\nexport type TabBarMoreProps = TabBarProps & {\n  isHidden?: boolean\n}\n\nexport interface TabBarAction {\n  switchTab: (onTab: number) => void\n  closeTab: (index: number) => void\n}\n\nexport const LeafContext = createContext<TileLeaf | undefined>(undefined)\n\nconst TabsBarInner: React.FC<TabBarMoreProps> = (props) => {\n  const { leaf, isHidden } = props\n  const tabBar = useContext(TabsBarContext)\n  const dispatch = useContext(TileDispatchContext)\n\n  const switchTab = useCallback(\n    (onTab: number) =>\n      dispatch({\n        leafToSwitchTab: {\n          leaf,\n          onTab,\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const closeTab = useCallback(\n    (index: number) =>\n      dispatch({\n        leafToCloseTab: {\n          leaf,\n          name: leaf.children[index],\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const action: TabBarAction = useMemo(() => ({ switchTab, closeTab }), [\n    closeTab,\n    switchTab,\n  ])\n\n  const { render: Render } = tabBar\n  const style = useStyle(leaf.rect, isHidden)\n  return useMemo(\n    () => (\n      <LeafContext.Provider value={leaf}>\n        <div style={style}>\n          <Render action={action} {...props} />\n        </div>\n      </LeafContext.Provider>\n    ),\n    [Render, action, leaf, props, style]\n  )\n}\n\nexport const TabsBar = memo(TabsBarInner)\n",
    "import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\nexport function useStyle(\n  rect: TileNodeRect,\n  isHidden?: boolean\n): CSSProperties {\n  const table = useContext(TabsBarContext)\n  const { position } = table\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(table.thickness), [table])\n  return {\n    visibility: isHidden ? 'hidden' : undefined,\n    position: 'absolute',\n    width: isVertical ? toCssLength(rect.width) : thickness,\n    height: isVertical ? thickness : toCssLength(rect.height),\n    top: isAfter ? undefined : toCssLength(rect.top),\n    bottom: isAfter ? toCssLength(1 - rect.top - rect.height) : undefined,\n    left: isAfter ? undefined : toCssLength(rect.left),\n    right: isAfter ? toCssLength(1 - rect.left - rect.width) : undefined,\n  }\n}\n",
    "import React, { memo, useMemo } from 'react'\nimport { TabsBar } from './components'\nimport { useTabs } from './hook'\n\nconst TabsBarsInner: React.FC = () => {\n  const tabBars = useTabs()\n  return useMemo(\n    () => (\n      <>\n        {tabBars.map((tabBar) => (\n          <TabsBar key={tabBar.leaf.id} {...tabBar} />\n        ))}\n      </>\n    ),\n    [tabBars]\n  )\n}\n\nexport const TabsBars = memo(TabsBarsInner)\nexport * from './components'\n",
    "import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../..'\nimport { PaneName } from '../../../../..'\nimport { TabBarMoreProps } from '../components'\n\nexport function useTabs() {\n  const leaves = useContext(TileLeavesContext)\n  const movingTabs = useContext(MovingTabsContext)\n\n  const tabBarsProps = useMemo(() => {\n    const tabBarsProps: TabBarMoreProps[] = leaves.map((leaf) => ({\n      leaf,\n      onTab: leaf.onTab,\n      tabs: leaf.children.slice(),\n    }))\n    // 保持 onTab\n    const onTabs: PaneName[] = tabBarsProps.map((it) => it.tabs[it.onTab])\n    movingTabs.forEach((tab) => {\n      const { leaf } = tab\n      if (!leaf) return\n      const tabBar = tabBarsProps.find((it) => it.leaf.id === leaf.id)\n      if (tabBar) {\n        tabBar.tabs.splice(tab.tabIndex, 0, tab.name)\n      } else {\n        tabBarsProps.splice(tab.leafIndex, 0, {\n          leaf: leaf,\n          onTab: leaf.onTab,\n          tabs: [tab.name],\n          isHidden: true,\n        })\n      }\n    })\n    tabBarsProps.forEach((it, i) => {\n      const onTab = it.tabs.findIndex((tab) => tab === onTabs[i])\n      it.onTab = onTab\n    })\n    return tabBarsProps\n  }, [leaves, movingTabs])\n\n  return tabBarsProps\n}\n",
    "import { TileNodeRect } from '../../../../../..'\n\nexport function calcBarStyles(\n  { top, left, width, height }: TileNodeRect,\n  offset: number,\n  isRow?: boolean\n) {\n  return {\n    top: top * 100 + '%',\n    left: left * 100 + '%',\n    width: isRow ? undefined : width * 100 + '%',\n    height: isRow ? height * 100 + '%' : undefined,\n    transform: `translate${isRow ? 'X' : 'Y'}(${offset}%)`,\n  }\n}\n",
    "import React, { useCallback, useContext, useMemo } from 'react'\nimport { useDrag } from 'react-use-gesture'\nimport { ContainerRectContext, StretchBarConfigContext } from '../../../..'\nimport { StretchBarEntity } from '../../../../..'\nimport { useThrottleMove } from './hook'\nimport { calcBarStyles } from './util'\n\nexport interface StretchBarProps {\n  bar: StretchBarEntity\n}\n\nconst StretchBarInner: React.FC<StretchBarProps> = ({ bar }) => {\n  const { isRow } = bar.parentPane\n  const containerRect = useContext(ContainerRectContext)\n  const { style, className, child, position = 'middle' } = useContext(\n    StretchBarConfigContext\n  )\n  const move = useThrottleMove(bar)\n\n  const styled = useMemo(\n    () => (typeof style === 'function' ? style(isRow) : style),\n    [isRow, style]\n  )\n\n  const classNamed = useMemo(\n    () => (typeof className === 'function' ? className(isRow) : className),\n    [className, isRow]\n  )\n  const children = useMemo(\n    () => (typeof child === 'function' ? child(isRow) : child),\n    [child, isRow]\n  )\n\n  const moveBar = useCallback(\n    (mx: number, my: number) => {\n      const distance = isRow\n        ? mx / containerRect.width\n        : my / containerRect.height\n      move(distance)\n    },\n    [containerRect.height, containerRect.width, isRow, move]\n  )\n\n  const bind = useDrag(\n    ({ down, delta: [mx, my] }) => {\n      down && moveBar(mx, my)\n    },\n    { enabled: true }\n  )\n  const { top, left, width, height } = bar.nextPane.rect\n\n  return useMemo(\n    () => (\n      <div\n        {...bind()}\n        className={classNamed}\n        style={{\n          ...styled,\n          position: 'absolute',\n          ...calcBarStyles(\n            { top, left, width, height },\n            positionToOffset(position),\n            isRow\n          ),\n        }}\n      >\n        {children}\n      </div>\n    ),\n    [\n      bind,\n      children,\n      classNamed,\n      height,\n      isRow,\n      left,\n      position,\n      styled,\n      top,\n      width,\n    ]\n  )\n}\n\nexport const StretchBar = React.memo(StretchBarInner)\n\nfunction positionToOffset(\n  position: 'middle' | 'front' | 'back' = 'middle'\n): number {\n  switch (position) {\n    case 'front':\n      return -100\n    case 'back':\n      return -0\n    default:\n      return -50\n  }\n}\n",
    "import { useCallback, useContext, useRef } from 'react'\nimport {\n  StretchBarConfigContext,\n  StretchBarEntity,\n  TileDispatchContext,\n} from '../../../../../..'\n\nexport function useThrottleMove(bar: StretchBarEntity) {\n  const { throttle } = useContext(StretchBarConfigContext)\n  const timerRef = useRef<number>()\n  const accumulation = useRef<number>(0)\n\n  const dispatch = useContext(TileDispatchContext)\n\n  const move = useCallback(\n    (distance: number) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, throttle)\n        dispatch({\n          barToMove: {\n            bar,\n            distance: accumulation.current ?? distance,\n          },\n        })\n        accumulation.current = distance\n      } else {\n        accumulation.current += distance\n      }\n    },\n    [bar, dispatch, throttle]\n  )\n  return move\n}\n",
    "import React, { memo, useContext, useMemo } from 'react'\nimport { StretchBarsContext } from '../../..'\nimport { StretchBar } from './StretchBar'\n\nconst StretchBarsInner: React.FC = () => {\n  const bars = useContext(StretchBarsContext)\n  return useMemo(\n    () => (\n      <>\n        {bars.map((bar) => (\n          <StretchBar bar={bar} key={bar.nextPane.id} />\n        ))}\n      </>\n    ),\n    [bars]\n  )\n}\n\nexport const StretchBars = memo(StretchBarsInner)\n",
    "import { TabsBarPosition } from '../..'\n\nexport function toCssLength(length: number) {\n  return `${length * 100}%`\n}\n\nexport function toCssCalcLength(\n  percent: number,\n  offset: string,\n  mode: '+' | '-'\n) {\n  return `calc(${toCssLength(percent)} ${mode} ${offset})`\n}\n\nexport const toQuadrant = (position: TabsBarPosition) => [\n  (['top', 'bottom'] as TabsBarPosition[]).includes(position),\n  (['right', 'bottom'] as TabsBarPosition[]).includes(position),\n]\n\nexport const completeUnit = (len: number | string) =>\n  typeof len === 'number' ? `${len}px` : len\n",
    "import React, { memo, useContext, useMemo } from 'react'\nimport { ContainerRefContext, MovingTabsContext } from '..'\nimport { StretchBars, TabsBars, TilePanes } from './components'\n\nexport interface TileContainerProps {\n  style?: React.CSSProperties\n  className?: string\n}\n\nconst TileContainerInner: React.FC<TileContainerProps> = ({\n  style = { width: '100%', height: '100%' },\n  className,\n}) => {\n  const targetRef = useContext(ContainerRefContext)\n  const movingTabs = useContext(MovingTabsContext)\n  return useMemo(\n    () => (\n      <div\n        ref={targetRef}\n        className={className}\n        style={{\n          ...style,\n          position: 'relative',\n          userSelect: movingTabs.length ? 'none' : 'auto',\n        }}\n      >\n        <TabsBars />\n        <TilePanes />\n        <StretchBars />\n      </div>\n    ),\n    [className, movingTabs.length, style, targetRef]\n  )\n}\n\nexport * from './utils'\nexport * from './components'\nexport const TileContainer = memo(TileContainerInner)\n",
    "import { TileStore } from '../..'\nimport {\n  MovingTab,\n  removeInArray,\n  TileBranch,\n  TileLeaf,\n  unfold,\n} from '../../../..'\n\nexport function startMovingTab(\n  { movingTabs, leaves, branches, rootNode }: TileStore,\n  tabToStopMoving: Pick<MovingTab, 'name' | 'leaf'>,\n  notMoving?: boolean\n): TileStore {\n  const newMovingTabs = movingTabs.slice()\n  const { name } = tabToStopMoving\n  const existedTab = newMovingTabs.find((it) => (it.name = name))\n\n  const leafIndex = leaves.findIndex((l) => l === tabToStopMoving.leaf)\n  const leaf = leaves.find((l) => l.children.includes(name))\n  const tabIndex = leaf?.children.findIndex((it) => it === name) ?? 0\n  if (leaf) {\n    const newChildren = removeInArray(leaf.children, name)\n    leaf.onTab = 0\n    leaf.setChildren(newChildren)\n    if (newChildren.length === 0) {\n      removeNode(branches, leaf)\n    }\n  }\n  if (!notMoving && !existedTab) {\n    newMovingTabs.push({ ...tabToStopMoving, tabIndex, leafIndex })\n  }\n\n  const nodes = unfold(rootNode)\n  return {\n    movingTabs: newMovingTabs,\n    rootNode,\n    ...nodes,\n  }\n}\n\nfunction removeNode(branches: TileBranch[], node: TileLeaf | TileBranch) {\n  const parent = branches.find((it) => it === node.parent)\n  if (parent) {\n    const newChildren = removeInArray(\n      parent.children,\n      (it) => it.id === node.id\n    )\n    if (newChildren.length === 0) {\n      removeNode(branches, parent)\n    } else {\n      parent.setChildren(newChildren)\n    }\n  }\n}\n",
    "import { TileStore } from '../..'\nimport { Into, PaneWithPreBox } from '../../..'\nimport {\n  PaneName,\n  removeInArray,\n  unfold,\n  isTileLeaf,\n  TileBranch,\n  TileLeaf,\n  TileLeafSubstance,\n  TileBranchSubstance,\n  replaceInArray,\n} from '../../../..'\n\nexport type TabToStopMoving = {\n  pane: PaneName\n  preBox?: PaneWithPreBox\n}\n\nexport function stopMovingTab(\n  { movingTabs, ...rest }: TileStore,\n  { pane, preBox }: TabToStopMoving\n): TileStore {\n  const newMovingTabs = removeInArray(movingTabs, (it) => (it.name = pane))\n  if (preBox) {\n    const { rootNode } = rest\n    insertPane(pane, preBox, rest)\n    const nodes = unfold(rootNode)\n    return { movingTabs: newMovingTabs, rootNode, ...nodes }\n  } else return { movingTabs: newMovingTabs, ...rest }\n}\n\nconst next: Into[] = ['right', 'bottom']\nconst row: Into[] = ['right', 'left']\n\nfunction insertPane(\n  pane: PaneName,\n  preBox: PaneWithPreBox,\n  nodes: Pick<TileStore, 'branches' | 'leaves'>\n) {\n  // const { targetNode: node, into } = preBox\n  const node = preBox.leaf ?? preBox.branch ?? preBox.tab\n  if (!node) return\n  const { target, into } = node\n  const { leaves, branches } = nodes\n  const isNext = typeof into === 'number' ? false : next.includes(into)\n  const isBrother = typeof into === 'number' ? false : isSegment(target, into)\n  const isRow = typeof into === 'number' ? false : row.includes(into)\n\n  if (isTileLeaf(target)) {\n    const leaf = leaves.find((it) => it === target)\n    if (leaf) {\n      if (into === 'center') {\n        const newChildren = leaf.children.slice()\n        newChildren.push(pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = leaf.children.length - 1\n      } else if (preBox.tab) {\n        const newChildren = leaf.children.slice()\n        const index = preBox.tab.into + (preBox.tab.isNext ? 1 : 0)\n        newChildren.splice(index, 0, pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = index\n      } else {\n        isBrother\n          ? segment(target, pane, isNext)\n          : fission(target, pane, isNext, isRow)\n      }\n    }\n  } else {\n    const branch = branches.find((it) => it === target)\n    if (branch) {\n      fission(target, pane, isNext, isRow)\n    }\n  }\n}\n\n/** 分割 ——插入同级节点 */\nfunction segment(node: TileBranch | TileLeaf, pane: PaneName, isNext: boolean) {\n  const { parent } = node\n  if (!parent) return\n  const grow = node.grow / 2\n  const leaf: TileLeafSubstance = { grow, children: [pane] }\n  node.grow = grow\n  const indexInParent = parent.children.findIndex((it) => it === node)\n  const index = isNext ? indexInParent + 1 : indexInParent\n  const newNodes: (\n    | TileBranchSubstance\n    | TileLeafSubstance\n  )[] = parent.children.slice()\n  newNodes.splice(index, 0, leaf)\n  parent.setChildren(newNodes)\n}\n\n/** 分裂 ——插入子级节点*/\nfunction fission(\n  node: TileBranch | TileLeaf,\n  pane: PaneName,\n  isNext: boolean,\n  isRow: boolean\n) {\n  const { parent, grow } = node\n  if (!parent) {\n    const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n    const oldLeaf: TileBranchSubstance | TileLeafSubstance = isTileLeaf(node)\n      ? node.dehydrate()\n      : node.dehydrate()\n    if (!isTileLeaf(node)) {\n      node.isRow = isRow\n      node.setChildren(isNext ? [oldLeaf, newLeaf] : [newLeaf, oldLeaf])\n    }\n    return\n  }\n  const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n  const branch: TileBranchSubstance = {\n    grow,\n    isRow,\n    children: isNext ? [node, newLeaf] : [newLeaf, node],\n  }\n  const newNodes = replaceInArray<TileBranchSubstance | TileLeafSubstance>(\n    parent?.children,\n    node,\n    branch\n  )\n  parent.setChildren(newNodes)\n}\n\nfunction isSegment(node: TileBranch | TileLeaf, into: Into): boolean {\n  const isRow = node.parent?.isRow\n  const segmentInto: Into[] = isRow ? ['left', 'right'] : ['top', 'bottom']\n  return segmentInto.includes(into)\n}\n",
    "import { createTileBranch, TileBranchSubstance, unfold } from '../../..'\n\nexport function initRootNode(rootNodeSub: TileBranchSubstance) {\n  const rootNode = createTileBranch(rootNodeSub)\n  const nodes = unfold(rootNode)\n  return { rootNode, ...nodes }\n}\n",
    "import { TileStoreReducer } from '../..'\nimport { MovingTab, TileLeaf } from '../../..'\nimport { BarToMove, moveBar } from './moveBar'\nimport { startMovingTab, stopMovingTab, TabToStopMoving } from './MovingTab'\nimport { switchLeafTab } from './switchLeafTab'\n\nexport * from './initRootNode'\n\nexport type TileStoreAction = {\n  leafToSwitchTab?: {\n    leaf: TileLeaf\n    onTab: number\n  }\n  leafToCloseTab?: Pick<MovingTab, 'name' | 'leaf'>\n  tabToStopMoving?: TabToStopMoving\n  tabToStartMoving?: Pick<MovingTab, 'name' | 'leaf'>\n  barToMove?: BarToMove\n}\n\nexport const tileStoreReducer: TileStoreReducer = (\n  state,\n  {\n    leafToSwitchTab,\n    tabToStopMoving,\n    tabToStartMoving,\n    barToMove,\n    leafToCloseTab,\n  }\n) => {\n  if (leafToSwitchTab) return switchLeafTab(state, leafToSwitchTab)\n  if (leafToCloseTab) return startMovingTab(state, leafToCloseTab, true)\n  if (tabToStartMoving) return startMovingTab(state, tabToStartMoving)\n  if (tabToStopMoving) return stopMovingTab(state, tabToStopMoving)\n  if (barToMove) return moveBar(state, barToMove)\n  return state\n}\n",
    "import { TileLeaf } from '../../..'\nimport { TileStore } from '../typings'\n\nexport function switchLeafTab(\n  state: TileStore,\n  switchLeafTab: { leaf: TileLeaf; onTab: number }\n) {\n  const { leaves, ...rest } = state\n  const newLeaves = leaves.slice()\n  const leaf = newLeaves.find((l) => l === switchLeafTab.leaf)\n  if (leaf) {\n    leaf.onTab = switchLeafTab.onTab\n  }\n  return { leaves: newLeaves, ...rest }\n}\n",
    "import { StretchBarEntity, TileStore, unfold } from '../../..'\n\nexport type BarToMove = {\n  distance: number\n  bar: StretchBarEntity\n}\n\nexport function moveBar(\n  { rootNode, movingTabs }: TileStore,\n  barToMove: BarToMove\n): TileStore {\n  const { bar, distance } = barToMove\n  bar.move(distance)\n  const nodes = unfold(rootNode)\n  return { ...nodes, movingTabs, rootNode }\n}\n",
    "import { useContext } from 'react'\nimport { TileBranchesContext } from '../..'\n\nexport function useRootPane() {\n  const nodes = useContext(TileBranchesContext)\n  return nodes[0].dehydrate()\n}\n",
    "import { useContext } from 'react'\nimport { TileLeavesContext } from '../..'\nimport { TileLeaf } from '../../../..'\nimport { PaneName } from '../../../../util'\n\nexport function useGetLeaf(): (name: PaneName) => TileLeaf | undefined {\n  const leaves = useContext(TileLeavesContext)\n  return (name) => {\n    const leaf = leaves.find((l) => l.children.includes(name))\n    return leaf\n  }\n}\n",
    "import { useContext, useMemo } from 'react'\nimport { Vector2 } from '..'\nimport {\n  TileBranchesContext,\n  TileLeavesContext,\n  TabsBarContext,\n  TitleRectsContext,\n  TileDispatchContext,\n} from '../..'\nimport { PaneName } from '../../../../util'\nimport {\n  calcLeafWithTitleRect,\n  calcPreBox,\n} from '../../../DraggableTitle/components/PreBox/util'\n\nexport type MovePane = (name: PaneName, position?: Vector2 | null) => void\n\nexport function useMovePane(): MovePane {\n  const dispatch = useContext(TileDispatchContext)\n  const branches = useContext(TileBranchesContext)\n  const leaves = useContext(TileLeavesContext)\n  const { preBox: preBoxInTabBar } = useContext(TabsBarContext)\n  const titleRects = useContext(TitleRectsContext)\n\n  const leafWithTitleRects = useMemo(\n    () => calcLeafWithTitleRect(titleRects, leaves),\n    [leaves, titleRects]\n  )\n\n  return (name, position) => {\n    if (!position) {\n      dispatch({ leafToCloseTab: { name } })\n      return\n    }\n\n    const paneWithPreBox = calcPreBox(\n      branches,\n      leaves,\n      leafWithTitleRects,\n      position,\n      preBoxInTabBar\n    )\n    dispatch({ tabToStartMoving: { name } })\n    dispatch({ tabToStopMoving: { pane: name, preBox: paneWithPreBox } })\n  }\n}\n",
    "import { StretchBarEntity } from '..'\n\n/**\n * @param {number} distance percentage in container\n * @return {boolean} Did the move succeed?\n */\nexport function move(this: StretchBarEntity, distance: number): boolean {\n  const lengthSum = this.parentPane.isRow\n    ? this.parentPane.rect.width\n    : this.parentPane.rect.height\n  const offset = distance / lengthSum\n  const previousPaneGrow = this.previousPane.grow + offset\n  const nextPaneGrow = this.nextPane.grow - offset\n  const isMoved = isValidGrow(previousPaneGrow, nextPaneGrow)\n  if (isMoved) {\n    this.previousPane.grow = previousPaneGrow\n    this.nextPane.grow = nextPaneGrow\n    this.parentPane.setChildren(this.parentPane.children)\n  }\n  return isMoved\n}\n\nfunction isValidGrow(growA: number, growB: number): boolean {\n  if (growA < 0.04 || growB < 0.04) return false\n  const growSum = growA + growB\n  if (growA > growSum || growB > growSum) return false\n  return true\n}\n",
    "import { TileBranch, TileNode } from '..'\nimport { move } from './util'\n\nexport class StretchBarEntity {\n  constructor(\n    public parentPane: TileBranch,\n    public previousPane: TileNode,\n    public nextPane: TileNode\n  ) {}\n  rect = this.nextPane.rect\n  move = move\n}\n",
    "import React, {\n  createContext,\n  useMemo,\n  useReducer,\n  Reducer,\n  useContext,\n} from 'react'\nimport { RectReadOnly } from 'react-use-measure'\nimport {\n  ContainerRectContext,\n  PaneName,\n  TileNodeRect,\n  Vector2,\n} from '../../../..'\n\ninterface DispatchTitleRectsReducer {\n  name: PaneName\n  rect: TileNodeRect\n}\n\nexport type TitleRectsReducer = Reducer<\n  Record<PaneName, TileNodeRect>,\n  DispatchTitleRectsReducer\n>\n\nexport const TitleRectsContext = createContext<Record<PaneName, TileNodeRect>>(\n  {}\n)\nexport const SetTitleRectsContext = createContext<\n  React.Dispatch<DispatchTitleRectsReducer>\n>(() => void null)\n\nexport const TitleRectsProvider: React.FC = ({ children }) => {\n  const containerRect = useContext(ContainerRectContext)\n  const [titleRects, setTitleRects] = useReducer<TitleRectsReducer>(reducer, {})\n\n  return useMemo(\n    () => (\n      <TitleRectsContext.Provider value={titleRects}>\n        <SetTitleRectsContext.Provider value={setTitleRects}>\n          {children}\n        </SetTitleRectsContext.Provider>\n      </TitleRectsContext.Provider>\n    ),\n    [children, titleRects]\n  )\n  function reducer(\n    state: Record<PaneName, TileNodeRect>,\n    { rect, name }: DispatchTitleRectsReducer\n  ) {\n    const [left, top] = absolute2Relative(containerRect, rect.left, rect.top)\n    const [right, bottom] = absolute2Relative(\n      containerRect,\n      rect.left + rect.width,\n      rect.top + rect.height\n    )\n    const width = right - left\n    const height = bottom - top\n    state[name] = { left, height, width, top }\n    return state\n  }\n}\n\nexport const LeafWithTitleRectProvider: React.FC = ({ children }) => {\n  return useMemo(() => <>{children}</>, [children])\n}\n\nexport function absolute2Relative(\n  containerRect: RectReadOnly,\n  x: number,\n  y: number\n) {\n  return [\n    (x - containerRect.left) / containerRect.width,\n    (y - containerRect.top) / containerRect.height,\n  ] as Vector2\n}\n",
    "import { createContext, Dispatch } from 'react'\nimport useMeasure, { RectReadOnly } from 'react-use-measure'\nimport { TileStoreAction } from '..'\nimport {\n  MovingTabAction,\n  MovingTab,\n  StretchBarEntity,\n  TileBranch,\n  TileLeaf,\n} from '../../..'\nimport { Vector2 } from '../hook'\n\nexport const TileDispatchContext = createContext<Dispatch<TileStoreAction>>(\n  (s) => s\n)\nexport const TileBranchesContext = createContext<TileBranch[]>([])\nexport const TileLeavesContext = createContext<TileLeaf[]>([])\nexport const StretchBarsContext = createContext<StretchBarEntity[]>([])\n\nexport const MovingTabsContext = createContext<MovingTab[]>([])\nexport const MovingTabsDispatchContext = createContext<\n  React.Dispatch<MovingTabAction>\n>((s) => s)\n\nexport const ContainerRefContext = createContext<\n  ReturnType<typeof useMeasure>[0]\n>(() => null)\n\nconst defaultRect: RectReadOnly = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n}\nexport const ContainerRectContext = createContext(defaultRect)\nexport const MousePositionContext = createContext<Vector2>([0, 0])\nexport * from './TitleRects'\n",
    "export * from './PreBox'\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"stretchBar\":\"style_stretchBar__2lrcx\"};",
    "import React, { useState } from 'react'\nimport {\n  createTilePanes,\n  DraggableTitle,\n  TileBranchSubstance,\n  TileContainer,\n  TileProvider,\n  useRootPane,\n} from '../../../components'\nimport '../../../static/style.css'\n\nconst localStorageKey = 'react-tile-pane-layout'\n\nfunction Arbutus() {\n  const [number, count] = useState(1)\n  return (\n    <div onClick={() => count((n) => n + 1)} className=\"pane\">\n      {number} 颗杨梅\n    </div>\n  )\n}\n\nfunction Apple() {\n  return <div className=\"pane\">apple</div>\n}\n\nconst [nodeList, names] = createTilePanes({\n  arbutus: <Arbutus />,\n  cherry: <div className=\"pane\">樱桃</div>,\n  apple: <Apple />,\n  banana: <div className=\"pane\">香蕉🍌</div>,\n  lemon: <div className=\"pane\">柠檬</div>,\n  mango: <div className=\"pane\">芒果</div>,\n  pomelo: <div className=\"pane\">柚子</div>,\n})\n\nconst rootPane: TileBranchSubstance = {\n  children: [\n    { children: [names.apple, names.cherry] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        { children: names.arbutus },\n        { children: names.lemon },\n        {\n          children: [\n            { children: names.mango, grow: 3 },\n            { children: names.pomelo },\n          ],\n        },\n      ],\n    },\n  ],\n}\n\nfunction SaveLayout() {\n  const rootNode = useRootPane()\n  localStorage.setItem(localStorageKey, JSON.stringify(rootNode))\n  return <></>\n}\n\nexport const SimpleDemo: React.FC = () => {\n  const localRoot = localStorage.getItem(localStorageKey)\n  const root = localRoot\n    ? (JSON.parse(localRoot) as TileBranchSubstance)\n    : rootPane\n  return (\n    <TileProvider tilePanes={nodeList} rootNode={root}>\n      <SaveLayout />\n      <div className=\"App\">\n        <div className=\"fence\">\n          <TileContainer />\n        </div>\n      </div>\n      <DraggableTitle name={names.arbutus}>拖动这个杨梅</DraggableTitle>\n      <a href=\"https://xcfox.github.io/react-tile-pane/\">查看文档</a>\n    </TileProvider>\n  )\n}\n",
    "import React from 'react'\n\nfunction createStyles<T extends Record<string, React.CSSProperties>>(\n  styles: T\n): T {\n  return styles\n}\n\nexport const thickness = 40\n\nexport const color = {\n  backL: '#1C242D',\n  back: '#181E26',\n  backD: '#12171D',\n  secondary: '#567091',\n  secondaryL: '#29394e',\n  secondaryLL: 'rgba(41,57,78,0.3)',\n  primary: '#60cbff',\n}\n\nexport const size = createStyles({\n  full: {\n    height: '100%',\n    width: '100%',\n  },\n})\n\nexport const flex = createStyles({\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  around: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  between: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  columnBetween: {\n    flexDirection: 'column',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n})\n\nexport const styles = createStyles({\n  container: {\n    color: '#fff',\n    height: 600,\n    width: 1000,\n  },\n  tabBar: {\n    background: color.backL,\n    ...size.full,\n    ...flex.columnBetween,\n  },\n  tabTitle: {\n    height: thickness * 0.8,\n    width: thickness,\n    ...flex.between,\n    background: color.secondaryLL,\n    marginBottom: 6,\n  },\n  tabTitleOn: {\n    height: thickness * 0.8,\n    width: thickness,\n    ...flex.between,\n    background: color.secondaryL,\n    marginBottom: 6,\n  },\n  pane: {\n    background: color.back,\n    ...size.full,\n    ...flex.center,\n  },\n  closeButton: {\n    height: thickness * 1.5,\n    width: thickness,\n    color: color.secondary,\n    fontSize: 35,\n    cursor: 'pointer',\n    ...flex.center,\n  },\n})\n",
    "import React from 'react'\nimport { createTilePanes, TileBranchSubstance } from '../../../components'\n\nimport { styles } from './style'\n\nconst nodes = {\n  pineapple: <div style={styles.pane}>pineapple</div>,\n  banana: <div style={styles.pane}>banana</div>,\n  lemon: <div style={styles.pane}>lemon</div>,\n  grape: <div style={styles.pane}>grape</div>,\n  kiwifruit: <div style={styles.pane}>kiwifruit</div>,\n}\n\nexport type nodeNames = keyof typeof nodes\n\nexport const icons: Record<nodeNames, string> = {\n  banana: '🍌',\n  pineapple: '🍍',\n  lemon: '🍋',\n  grape: '🍇',\n  kiwifruit: '🥝',\n}\n\nexport const [nodeList, names] = createTilePanes(nodes)\n\nexport const rootPane: TileBranchSubstance = {\n  children: [\n    { children: [names.pineapple, names.banana] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        {\n          isRow: true,\n          children: [\n            { children: [names.lemon, names.grape], grow: 3 },\n            { children: names.kiwifruit },\n          ],\n        },\n      ],\n    },\n  ],\n}\n",
    "import React, { useCallback, useMemo } from 'react'\nimport {\n  DraggableTitle,\n  PaneName,\n  TabBarPropsWithAction,\n  TabsBarConfig,\n} from '../../../../components'\nimport { icons, nodeNames } from '../panes'\nimport { color, flex, size, styles, thickness } from '../style'\n\nconst TabBar: React.FC<TabBarPropsWithAction> = ({ tabs, onTab, action }) => {\n  const tabBar = useCallback(\n    (tab: PaneName, i: number) => (\n      <DraggableTitle\n        style={i === onTab ? styles.tabTitleOn : styles.tabTitle}\n        name={tab}\n        key={tab}\n        onClick={() => action.switchTab(i)}\n      >\n        <div\n          style={{\n            background: i === onTab ? color.primary : color.secondaryL,\n            height: '100%',\n            width: 6,\n          }}\n        />\n        <div style={{ ...flex.center, ...size.full }}>\n          {icons[tab as nodeNames]}\n        </div>\n      </DraggableTitle>\n    ),\n    [action, onTab]\n  )\n\n  return useMemo(\n    () => (\n      <div style={styles.tabBar}>\n        <div>{tabs.map(tabBar)}</div>\n        <div onClick={() => action.closeTab(onTab)} style={styles.closeButton}>\n          ×\n        </div>\n      </div>\n    ),\n    [action, onTab, tabBar, tabs]\n  )\n}\n\nexport const tabBarConfig: TabsBarConfig = {\n  render: TabBar,\n  thickness,\n  position: 'left',\n  preBox: {\n    isRow: false,\n    isReverse: false,\n  },\n}\n",
    "import React from 'react'\nimport {\n  DraggableTitle,\n  TileContainer,\n  TileProvider,\n  useGetLeaf,\n  useMovePane,\n} from '../../../components'\nimport { icons, nodeList, rootPane } from './panes'\nimport { color, styles } from './style'\nimport { tabBarConfig } from './tab-bar'\nimport css from './style/index.module.css'\n\nfunction PaneIcon({ name }: { name: keyof typeof icons }) {\n  const getLeaf = useGetLeaf()\n  const move = useMovePane()\n  const leaf = getLeaf(name)\n  const isShowing = !!leaf\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: 60,\n        background: color.backL,\n        fontSize: 30,\n        padding: 10,\n        marginLeft: 5,\n        marginRight: 5,\n      }}\n    >\n      <div style={{ width: 40, height: 40, cursor: 'move' }}>\n        <DraggableTitle name={name}>{icons[name]}</DraggableTitle>\n      </div>\n      <div\n        onClick={() => move(name, isShowing ? null : [0.99, 0.5])}\n        style={{\n          cursor: 'pointer',\n          background: isShowing ? color.primary : color.secondary,\n          width: 14,\n          height: 14,\n          borderRadius: 99,\n        }}\n      />\n    </div>\n  )\n}\n\nexport const LeftTabDemo: React.FC = () => {\n  return (\n    <TileProvider\n      tilePanes={nodeList}\n      rootNode={rootPane}\n      tabBar={tabBarConfig}\n      stretchBar={{\n        className: css.stretchBar,\n        style: (isRow) => ({ cursor: isRow ? 'ew-resize' : 'ns-resize' }),\n        position: 'front',\n      }}\n    >\n      <TileContainer style={styles.container} />\n      <div style={{ display: 'flex', marginTop: 10 }}>\n        {(Object.keys(icons) as (keyof typeof icons)[]).map((name) => (\n          <PaneIcon key={name} {...{ name }} />\n        ))}\n      </div>\n    </TileProvider>\n  )\n}\n",
    "import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport '../static/style.css'\nimport { LeftTabDemo, SimpleDemo } from './demo'\n\nconst demos = {\n  'tab-bar in left demo': <LeftTabDemo />,\n  'simple demo': <SimpleDemo />,\n}\n\nconst color: Record<keyof typeof demos, [string, string]> = {\n  'tab-bar in left demo': ['#161718', '#ffffff'],\n  'simple demo': ['#ffffff', '#000000'],\n}\n\nconst App: React.FC = () => {\n  const [demo, setDemo] = useState<keyof typeof demos>('tab-bar in left demo')\n\n  useEffect(() => {\n    document.body.style.background = color[demo][0]\n    document.body.style.color = color[demo][1]\n  }, [demo])\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <div style={{ height: 30, display: 'flex' }}>\n        {(Object.keys(demos) as (keyof typeof demos)[]).map((key) => (\n          <div\n            style={{ marginLeft: 20, marginRight: 20 }}\n            key={key}\n            onClick={() => setDemo(key)}\n          >\n            {key}\n          </div>\n        ))}\n      </div>\n      {demos[demo]}\n    </div>\n  )\n}\n\nexport default App\n",
    "import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n",
    "import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport reportWebVitals from './common/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"
  ],
  "sourceRoot": ""
}