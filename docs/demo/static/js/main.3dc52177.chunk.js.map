{"version":3,"sources":["components/tilePane/index.ts","components/tilePane/view/index.ts","components/tilePane/view/Provider/index.tsx","components/tilePane/model/TileNode/index.ts","components/tilePane/model/TileNode/util/dehydrate.ts","components/tilePane/model/TileNode/util/index.ts","components/tilePane/util/index.ts","components/tilePane/view/Provider/config/TabBar/index.tsx","components/tilePane/view/Provider/config/StretchBar/index.ts","components/tilePane/view/Provider/config/PreBox/index.ts","components/tilePane/view/Provider/config/index.ts","components/index.ts","components/tilePane/model/index.ts","components/tilePane/view/DraggableTitle/index.tsx","components/tilePane/model/TileNode/helper/isTileLeaf.ts","components/tilePane/model/TileNode/helper/createTileNode.ts","components/tilePane/model/TileNode/helper/increasingID.ts","components/tilePane/view/DraggableTitle/hook/useDragAndPosition/index.ts","components/tilePane/view/DraggableTitle/hook/useThrottle/index.ts","components/tilePane/view/DraggableTitle/hook/useMouse.ts","components/tilePane/view/Provider/config/TabBar/style.module.css","components/tilePane/view/Provider/config/PreBox/style.module.css","components/tilePane/model/TileNode/util/setChildren.ts","components/tilePane/view/Provider/config/StretchBar/style.module.css","components/tilePane/util/unfold.ts","components/tilePane/util/createTitlePanes.ts","components/tilePane/util/array.ts","components/tilePane/view/Provider/data/index.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/index.tsx","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useChild.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useStyle.ts","components/tilePane/view/Container/components/TilePanes/index.tsx","components/tilePane/view/Container/components/TilePanes/hook/usePanes/index.ts","components/tilePane/view/Container/components/TabsBars/components/TabsBar/index.tsx","components/tilePane/view/Container/components/TabsBars/components/TabsBar/hook/index.ts","components/tilePane/view/Container/components/TabsBars/index.tsx","components/tilePane/view/Container/components/TabsBars/hook/index.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/util/calcBarStyles.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/index.tsx","components/tilePane/view/Container/components/StretchBars/StretchBar/hook/index.ts","components/tilePane/view/Container/components/StretchBars/index.tsx","components/tilePane/view/Container/utils/toCssLength.ts","components/tilePane/view/Container/index.tsx","components/tilePane/view/Provider/controller/MovingTab/startMovingTab.ts","components/tilePane/view/Provider/controller/MovingTab/stopMovingTab.ts","components/tilePane/view/Provider/controller/initRootNode.ts","components/tilePane/view/Provider/controller/index.ts","components/tilePane/view/Provider/controller/switchLeafTab.ts","components/tilePane/view/Provider/controller/moveBar.ts","components/tilePane/model/StretchBar/util/index.ts","components/tilePane/model/StretchBar/index.ts","components/tilePane/view/DraggableTitle/util/index.ts","components/tilePane/view/DraggableTitle/components/PreBox/index.tsx","App/App.tsx","common/reportWebVitals.ts","index.tsx"],"names":["TileProviderInner","children","rootNodeSub","rootNode","tilePanes","tabBar","defaultTabsBarConfig","stretchBar","defaultStretchBar","preBox","defaultPreBox","useReducer","tileStoreReducer","movingTabs","initRootNode","branches","leaves","stretchBars","tileStoreDispatch","childrenMemo","useMemo","useMeasure","scroll","targetRef","containerRect","Provider","value","TileProvider","memo","TileNode","id","increasingID","parent","grow","rect","top","left","width","height","TileLeaf","onTab","rest","setChildren","leafSetChildren","dehydrate","leafDehydrate","TileBranch","isRow","branchSetChildren","branchDehydrate","this","map","it","isTileLeaf","calcChildGrows","growsSolid","c","growSum","reduce","s","n","calcChildRects","grows","childLeft","arr","i","push","childTop","TabBarInner","tabs","action","className","style","tab","DraggableTitle","name","tabTitle","tabTitleOff","onClick","switchTab","render","thickness","position","TabsBarContext","createContext","rowBar","colBar","StretchBarConfigContext","throttle","_","target","preBranch","noPreBox","PreBoxConfigContext","TitlePanesContext","DraggableTitleInner","paneWithPreBoxRef","useRef","useContext","TileLeavesContext","pane","find","p","includes","useDragAndPosition","bind","styled","visibility","transform","zIndex","node","Array","isTilePaneNames","list","Object","createTileBranch","sub","undefined","ref","toString","leaf","dispatch","TileDispatchContext","useState","isDragging","toggleDragging","mouse","useMouse","useGesture","onDragStart","tabToStartMoving","onDragEnd","tabToStopMoving","current","drag","threshold","useThrottleFn","fn","ms","result","timerRef","throttledFn","useCallback","window","setTimeout","clearTimeout","enable","setPosition","mousemove","e","clientX","clientY","useEffect","addEventListener","removeEventListener","module","exports","unfold","forEach","prevPane","bar","StretchBarEntity","createTitlePanes","obj","keys","key","child","removeInArray","one","newArr","slice","index","Function","findIndex","splice","replaceInArray","newOne","TileBranchesContext","StretchBarsContext","MovingTabsContext","ContainerRefContext","defaultRect","bottom","right","x","y","ContainerRectContext","TilePaneInner","findChildPane","useChild","toQuadrant","isVertical","isAfter","completeUnit","toCssCalcLength","toCssLength","display","useStyle","TilePane","TilePanesInner","panes","usePanes","TilePanes","TabsBarInner","props","isHidden","leafToSwitchTab","closeTab","leafToCloseTab","Render","table","TabsBar","TabsBarsInner","tabBars","tabBarsProps","useTabs","TabsBars","calcBarStyles","StretchBarInner","parentPane","move","accumulation","distance","barToMove","useThrottleMove","classNamed","moveBar","mx","my","useDrag","down","delta","enabled","nextPane","StretchBar","React","StretchBarsInner","bars","StretchBars","length","percent","offset","mode","len","TileContainerInner","TileContainer","startMovingTab","notMoving","newMovingTabs","existedTab","l","newChildren","removeNode","nodes","stopMovingTab","targetNode","into","isNext","isBrother","isSegment","indexInParent","newNodes","segment","fission","insertPane","newLeaf","branch","oldLeaf","state","switchLeafTab","newLeaves","previousPaneGrow","previousPane","nextPaneGrow","isMoved","growA","growB","isValidGrow","branchProportion","leafProportion","calcPreBox","innerPosition","isInPane","PreBoxInner","calcLazyPreBox","paneWithPreBox","targetType","calcTargetType","boxPosition","proportion","calcBoxPosition","PreBox","Arbutus","number","count","Apple","arbutus","cherry","apple","banana","lemon","mango","pomelo","nodeList","names","rootPane","App","href","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dc52177.chunk.js","sourcesContent":["export * from './model'\nexport * from './view'\nexport * from './util'\n","export * from './Provider'\nexport * from './Container'\nexport * from './DraggableTitle'\n","import React, { memo, useMemo, useReducer } from 'react'\nimport useMeasure from 'react-use-measure'\nimport {\n  PreBoxConfig,\n  StretchBarConfig,\n  TileBranchSubstance,\n  TilePane,\n} from '../..'\nimport {\n  TitlePanesContext,\n  ContainerRectContext,\n  ContainerRefContext,\n  MovingTabsContext,\n  StretchBarsContext,\n  TileBranchesContext,\n  TileDispatchContext,\n  TileLeavesContext,\n  TileStoreReducer,\n  initRootNode,\n  TabsBarContext,\n  tileStoreReducer,\n  TabsBarConfig,\n  defaultTabsBarConfig,\n  StretchBarConfigContext,\n  defaultStretchBar,\n} from '.'\nimport { defaultPreBox, PreBoxConfigContext } from './config'\n\nexport interface TileProviderProps {\n  children?: React.ReactNode\n  rootNode: TileBranchSubstance\n  tilePanes: TilePane[]\n  tabBar?: TabsBarConfig\n  preBox?: PreBoxConfig\n  stretchBar?: StretchBarConfig\n}\n\nconst TileProviderInner: React.FC<TileProviderProps> = ({\n  children,\n  rootNode: rootNodeSub,\n  tilePanes,\n  tabBar = defaultTabsBarConfig,\n  stretchBar = defaultStretchBar,\n  preBox = defaultPreBox,\n}: TileProviderProps) => {\n  const [\n    { branches, leaves, stretchBars, movingTabs },\n    tileStoreDispatch,\n  ] = useReducer<TileStoreReducer>(tileStoreReducer, {\n    movingTabs: [],\n    ...initRootNode(rootNodeSub),\n  })\n\n  const childrenMemo = useMemo(() => children, [children])\n  const [targetRef, containerRect] = useMeasure({ scroll: true })\n  return (\n    <ContainerRefContext.Provider value={targetRef}>\n      <PreBoxConfigContext.Provider value={preBox}>\n        <TitlePanesContext.Provider value={tilePanes}>\n          <ContainerRectContext.Provider value={containerRect}>\n            <TileBranchesContext.Provider value={branches}>\n              <StretchBarConfigContext.Provider value={stretchBar}>\n                <TileLeavesContext.Provider value={leaves}>\n                  <StretchBarsContext.Provider value={stretchBars}>\n                    <TileDispatchContext.Provider value={tileStoreDispatch}>\n                      <MovingTabsContext.Provider value={movingTabs}>\n                        <TabsBarContext.Provider value={tabBar}>\n                          {childrenMemo}\n                        </TabsBarContext.Provider>\n                      </MovingTabsContext.Provider>\n                    </TileDispatchContext.Provider>\n                  </StretchBarsContext.Provider>\n                </TileLeavesContext.Provider>\n              </StretchBarConfigContext.Provider>\n            </TileBranchesContext.Provider>\n          </ContainerRectContext.Provider>\n        </TitlePanesContext.Provider>\n      </PreBoxConfigContext.Provider>\n    </ContainerRefContext.Provider>\n  )\n}\n\nexport const TileProvider = memo(TileProviderInner)\nexport * from './typings'\nexport * from './controller'\nexport * from './data'\nexport * from './config'\n","import { increasingID, PaneName } from '../..'\nimport {\n  TileBranchSubstance,\n  TileLeafSubstance,\n  TileNodeConstructor,\n  TileNodeRect,\n} from './typings'\nimport { branchDehydrate, leafDehydrate } from './util'\nimport { branchSetChildren, leafSetChildren } from './util/setChildren'\n\nexport class TileNode {\n  constructor(\n    public readonly id: string = increasingID(),\n    public readonly parent: TileBranch | null = null,\n    public grow: number = 1,\n    public rect: TileNodeRect = {\n      top: 0,\n      left: 0,\n      width: 1,\n      height: 1,\n    }\n  ) {}\n}\n\nexport class TileLeaf extends TileNode {\n  constructor(\n    public onTab: number = 0,\n    public children: PaneName[] = [],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n  }\n  public setChildren = leafSetChildren\n  public dehydrate = leafDehydrate\n}\n\nexport class TileBranch extends TileNode {\n  public children!: (TileBranch | TileLeaf)[]\n  constructor(\n    public isRow: boolean = false,\n    children: (TileBranchSubstance | TileLeafSubstance)[],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n    this.setChildren(children)\n  }\n\n  public setChildren = branchSetChildren\n  public dehydrate = branchDehydrate\n}\n\nexport * from './typings'\nexport * from './helper'\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n  isTileLeaf,\n} from '..'\n\nexport function leafDehydrate(this: TileLeaf): TileLeafSubstance {\n  const { children, onTab, grow } = this\n  return { children, onTab, grow }\n}\n\nexport function branchDehydrate(this: TileBranch): TileBranchSubstance {\n  const { children, isRow, grow } = this\n\n  const childrenDehydrated = children.map((it) =>\n    isTileLeaf(it) ? it.dehydrate() : it.dehydrate()\n  )\n  return { children: childrenDehydrated, isRow, grow }\n}\n","import { TileBranch, TileNodeRect } from '..'\n\nexport * from './dehydrate'\n\nexport function calcChildGrows(children: { grow?: number }[]) {\n  const growsSolid = children.map((c) => c.grow ?? 1)\n  const growSum = growsSolid.reduce((s, n) => (s += n), 0) // 部分值\n  const grows = growsSolid.map((c) => c / growSum) // 相对值\n  return grows\n}\n\nexport function calcChildRects(\n  parent: TileBranch,\n  grows: number[]\n): TileNodeRect[] {\n  const { isRow, rect } = parent\n  const { top, left, width, height } = rect\n  if (isRow) {\n    const childLeft = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 left\n        if (i > 0) arr.push(arr[i - 1] + width * grows[i - 1])\n        return arr\n      },\n      [left]\n    )\n    return grows.map((n, i) => ({\n      top,\n      height,\n      width: n * width,\n      left: childLeft[i],\n    }))\n  } else {\n    const childTop = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 top\n        if (i > 0) arr.push(arr[i - 1] + height * grows[i - 1])\n        return arr\n      },\n      [top]\n    )\n    return grows.map((n, i) => ({\n      left,\n      width,\n      height: n * height,\n      top: childTop[i],\n    }))\n  }\n}\n","export * from './unfold'\nexport * from './typings'\nexport * from './isNil'\nexport * from './createTitlePanes'\nexport * from './array'\n","import React, { createContext, memo, useMemo } from 'react'\nimport { TabBarAction, TabBarProps } from '../../..'\nimport { DraggableTitle } from '../../../DraggableTitle'\nimport style from './style.module.css'\n\nexport type TabBarPropsWithAction = TabBarProps & { action: TabBarAction }\n\nconst TabBarInner: React.FC<TabBarPropsWithAction> = ({\n  tabs,\n  onTab,\n  action,\n}) => {\n  return useMemo(\n    () => (\n      <div className={style.tabBar}>\n        {tabs.map((tab, i) => (\n          <DraggableTitle\n            name={tab}\n            key={tab}\n            className={i === onTab ? style.tabTitle : style.tabTitleOff}\n          >\n            <div onClick={() => action.switchTab(i)}>{tab}</div>\n          </DraggableTitle>\n        ))}\n      </div>\n    ),\n    [action, onTab, tabs]\n  )\n}\nexport type TabsBarPosition = 'left' | 'right' | 'top' | 'bottom'\nexport type TabsBarConfig = {\n  render: React.FC<TabBarPropsWithAction>\n  thickness: number | string\n  position: TabsBarPosition\n}\n\nexport const DefaultTabBar = memo(TabBarInner)\nexport const defaultTabsBarConfig: TabsBarConfig = {\n  render: DefaultTabBar,\n  thickness: 24,\n  position: 'top',\n}\nexport const TabsBarContext = createContext<TabsBarConfig>(defaultTabsBarConfig)\n","import { CSSProperties, createContext, ReactChild } from 'react'\nimport style from './style.module.css'\n\nexport type StretchBarConfig = {\n  style?: ((isRow: boolean) => CSSProperties) | CSSProperties\n  className?: ((isRow: boolean) => string) | string\n  child?: ((isRow: boolean) => ReactChild) | ReactChild\n  /** **millisecond**, Controls the minimum Trigger Period of the Stretch Bar */\n  throttle?: number\n}\n\nexport const defaultStretchBar: StretchBarConfig = {\n  className: (isRow) => (isRow ? style.rowBar : style.colBar),\n}\n\nexport const StretchBarConfigContext = createContext<StretchBarConfig>(\n  defaultStretchBar\n)\n","import { CSSProperties, createContext, ReactChild } from 'react'\nimport { Into } from '../../..'\nimport style from './style.module.css'\n\nexport type PreBoxTarget = 'leaf' | 'branch' | 'tag' | null\n\nexport type PreBoxConfig = {\n  style?: ((into: Into, target: PreBoxTarget) => CSSProperties) | CSSProperties\n  className?: ((into: Into, target: PreBoxTarget) => string) | string\n  child?: ((into: Into, target: PreBoxTarget) => ReactChild) | ReactChild\n  /** **millisecond**, Control PreBox calculation frequency */\n  throttle?: number\n}\n\nexport const defaultPreBox: PreBoxConfig = {\n  throttle: 66,\n  className: (_, target) => {\n    switch (target) {\n      case 'branch':\n        return style.preBranch\n      case null:\n        return style.noPreBox\n      default:\n        return style.preBox\n    }\n  },\n}\n\nexport const PreBoxConfigContext = createContext<PreBoxConfig>(defaultPreBox)\n","import { createContext } from 'react'\nimport { TilePane } from '../../..'\n\nexport const TitlePanesContext = createContext<TilePane[]>([])\nexport * from './TabBar'\nexport * from './StretchBar'\nexport * from './PreBox'\n","export * from './tilePane'\n","export * from './TileNode'\nexport * from './StretchBar'\n","import React, { memo, useContext, useMemo, useRef, CSSProperties } from 'react'\nimport { TileLeavesContext } from '..'\nimport { PaneName } from '../..'\nimport { PreBox } from './components'\nimport { useDragAndPosition } from './hook'\nimport { PaneWithPreBox } from './typings'\n\nexport interface DraggableTitleProps {\n  name: PaneName\n  children?: React.ReactNode\n  style?: CSSProperties\n  className?: string\n}\n\nconst DraggableTitleInner: React.FC<DraggableTitleProps> = ({\n  name,\n  children,\n  style,\n  className,\n}) => {\n  const paneWithPreBoxRef = useRef<PaneWithPreBox>()\n\n  const leaves = useContext(TileLeavesContext)\n  const pane = useMemo(() => leaves.find((p) => p.children.includes(name)), [\n    name,\n    leaves,\n  ])\n  const { position, bind } = useDragAndPosition(paneWithPreBoxRef, name, pane)\n\n  const styled = useMemo(\n    () =>\n      (position\n        ? {\n            ...style,\n            visibility: 'visible',\n            position: 'fixed',\n            top: position[1],\n            left: position[0],\n            transform: 'translate(-50%,-50%)',\n            zIndex: 1,\n          }\n        : style) as React.CSSProperties,\n    [position, style]\n  )\n  return useMemo(\n    () => (\n      <>\n        {position && <PreBox {...{ paneWithPreBoxRef, position }} />}\n        <div {...{ ...bind() }} style={styled} className={className}>\n          {children}\n        </div>\n      </>\n    ),\n    [bind, children, className, position, styled]\n  )\n}\n\nexport const DraggableTitle = memo(DraggableTitleInner)\nexport * from './typings'\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../..'\n\nexport function isTileLeaf(\n  node: TileLeafSubstance | TileBranchSubstance | TileLeaf | TileBranch\n): node is TileLeafSubstance | TileLeaf {\n  const { children = '0' } = node\n  if (children instanceof Array) {\n    return isTilePaneNames(children)\n  }\n  return true\n}\n\nexport function isTilePaneNames(\n  list:\n    | PaneName[]\n    | (TileBranchSubstance | TileLeafSubstance)[]\n    | (TileLeaf | TileBranch)[]\n    | TileLeafSubstance[]\n    | TileBranchSubstance[]\n    | TileLeaf[]\n    | TileBranch[]\n): list is PaneName[] {\n  return !(list[0] instanceof Object)\n}\n","import { TileBranch, TileBranchSubstance } from '..'\n\nexport function createTileBranch(sub: TileBranchSubstance) {\n  const { isRow, children, id, grow } = sub\n  return new TileBranch(isRow, children, id, null, grow, undefined)\n}\n","const ref = { n: 0 }\nexport function increasingID() {\n  return (ref.n++).toString(36)\n}\n","import { useState, useContext } from 'react'\nimport { useGesture } from 'react-use-gesture'\nimport { TileDispatchContext } from '../../..'\nimport { PaneName, TileLeaf } from '../../../..'\nimport { useMouse } from '..'\nimport { PaneWithPreBox } from '../../typings'\n\nexport function useDragAndPosition(\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>,\n  name: PaneName,\n  leaf: TileLeaf | undefined\n) {\n  const dispatch = useContext(TileDispatchContext)\n  const [isDragging, toggleDragging] = useState(false)\n  const mouse = useMouse(isDragging)\n\n  const bind = useGesture(\n    {\n      onDragStart: () => {\n        toggleDragging(true)\n        leaf && dispatch({ tabToStartMoving: { name, leaf } })\n      },\n      onDragEnd: () => {\n        toggleDragging(false)\n        dispatch({\n          tabToStopMoving: { pane: name, preBox: paneWithPreBoxRef.current },\n        })\n      },\n    },\n    { drag: { threshold: 10 } }\n  )\n\n  return { bind, position: isDragging ? mouse : undefined }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useCallback, useRef } from 'react'\n\nexport function useThrottleFn<Fn extends (...args: any[]) => any>(\n  fn: Fn,\n  ms?: number\n): Fn {\n  const result = useRef<any>()\n  const timerRef = useRef<number>()\n\n  const throttledFn = useCallback(\n    (...arg) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, ms)\n        result.current = fn(...arg)\n      }\n      return result.current\n    },\n    [fn, ms]\n  )\n\n  return ms ? (throttledFn as Fn) : fn\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { Vector2 } from 'react-use-gesture/dist/types'\n\nexport function useMouse(enable = true) {\n  const [position, setPosition] = useState<Vector2>([0, 0])\n\n  const mousemove = useCallback(\n    (e: MouseEvent) => {\n      enable && setPosition([e.clientX, e.clientY])\n    },\n    [enable]\n  )\n\n  useEffect(() => {\n    window.addEventListener('mousemove', mousemove)\n    return () => {\n      window.removeEventListener('mousemove', mousemove)\n    }\n  }, [mousemove])\n\n  return position\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabTitle\":\"style_tabTitle__1sgsB\",\"tabTitleOff\":\"style_tabTitleOff__3aFpr\",\"tabBar\":\"style_tabBar__3NaZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preBox\":\"style_preBox__3P7Tr\",\"preBranch\":\"style_preBranch__3-_78\",\"noPreBox\":\"style_noPreBox__2_pPL\"};","import { calcChildGrows, calcChildRects } from '.'\nimport {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../../util'\nimport { isTileLeaf } from '../helper'\n\nexport function leafSetChildren(this: TileLeaf, children: PaneName[]) {\n  this.children = children\n}\n\nexport function branchSetChildren(\n  this: TileBranch,\n  children: (TileBranchSubstance | TileLeafSubstance)[]\n) {\n  const grows = calcChildGrows(children)\n  const rect = calcChildRects(this, grows)\n  this.children = children.map((it, i) =>\n    isTileLeaf(it)\n      ? new TileLeaf(\n          it.onTab,\n          it.children instanceof Array ? it.children : [it.children],\n          it.id,\n          this,\n          grows[i],\n          rect[i]\n        )\n      : new TileBranch(it.isRow, it.children, it.id, this, grows[i], rect[i])\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowBar\":\"style_rowBar__1yrAO\",\"colBar\":\"style_colBar__2UPHu\"};","import {\n  TileBranch,\n  TileLeaf,\n  StretchBarEntity,\n  isTilePaneNames,\n  isTileLeaf,\n} from '..'\n\nexport function unfold(node: TileBranch) {\n  const leaves: TileLeaf[] = []\n  const branches = [node]\n  const stretchBars: StretchBarEntity[] = []\n  unfold(node)\n  function unfold(pane: TileBranch) {\n    const { children } = pane\n    !isTilePaneNames(children) &&\n      (children as (TileBranch | TileLeaf)[]).forEach((p, i) => {\n        if (!isTileLeaf(p)) {\n          unfold(p)\n          branches.push(p)\n        } else {\n          leaves.push(p)\n        }\n        const prevPane = children[i - 1]\n        if (!prevPane) return\n        const bar = new StretchBarEntity(pane, prevPane, p)\n        stretchBars.push(bar)\n      })\n  }\n  return {\n    leaves,\n    branches,\n    stretchBars,\n  }\n}\n","import { ReactChild } from 'react'\nimport { TileNodeID, TilePane } from '..'\n\nexport function createTitlePanes<T extends Record<TileNodeID, ReactChild>>(\n  obj: T\n): [TilePane[], Record<keyof T, keyof T>] {\n  const map = {} as Record<TileNodeID, keyof T>\n  const list: TilePane[] = []\n  Object.keys(obj).forEach((key) => {\n    map[key] = key\n    list.push({\n      name: key,\n      child: obj[key],\n    })\n  })\n  return [list, map as Record<keyof T, keyof T>]\n}\n","export function removeInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1)\n  return newArr\n}\n\nexport function replaceInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T,\n  newOne: T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1, newOne)\n  return newArr\n}\n","import { createContext, Dispatch } from 'react'\nimport useMeasure, { RectReadOnly } from 'react-use-measure'\nimport { TileStoreAction } from '..'\nimport {\n  MovingTabAction,\n  MovingTab,\n  StretchBarEntity,\n  TileBranch,\n  TileLeaf,\n} from '../../..'\n\nexport const TileDispatchContext = createContext<Dispatch<TileStoreAction>>(\n  (s) => s\n)\nexport const TileBranchesContext = createContext<TileBranch[]>([])\nexport const TileLeavesContext = createContext<TileLeaf[]>([])\nexport const StretchBarsContext = createContext<StretchBarEntity[]>([])\n\nexport const MovingTabsContext = createContext<MovingTab[]>([])\nexport const MovingTabsDispatchContext = createContext<\n  React.Dispatch<MovingTabAction>\n>((s) => s)\n\nexport const ContainerRefContext = createContext<\n  ReturnType<typeof useMeasure>[0]\n>(() => null)\n\nconst defaultRect: RectReadOnly = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n}\nexport const ContainerRectContext = createContext(defaultRect)\n","import React, { memo, useMemo } from 'react'\nimport { TilePaneWithRect } from '../../../../../..'\nimport { useChild, useStyle } from './hook'\n\nexport interface TilePaneProps {\n  pane: TilePaneWithRect\n}\nconst TilePaneInner: React.FC<TilePaneProps> = ({ pane }) => {\n  const child = useChild(pane.name)\n  const style = useStyle(pane.rect)\n  return useMemo(() => <div style={style}>{child}</div>, [child, style])\n}\nexport const TilePane = memo(TilePaneInner)\n","import { useContext, useCallback, useMemo } from 'react'\nimport { TitlePanesContext } from '../../../../../..'\nimport { PaneName } from '../../../../../../..'\n\nexport function useChild(id: PaneName) {\n  const tilePanes = useContext(TitlePanesContext)\n\n  const findChildPane = useCallback(\n    (id: PaneName) => {\n      const pane = tilePanes.find((it) => it.name === id)\n      return pane?.child\n    },\n    [tilePanes]\n  )\n  const child = useMemo(() => findChildPane(id), [findChildPane, id])\n  return child\n}\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssCalcLength,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\n\nexport function useStyle(rect: TileNodeRect | null): CSSProperties {\n  const tabBar = useContext(TabsBarContext)\n  const { position } = tabBar\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(tabBar.thickness), [\n    tabBar.thickness,\n  ])\n  return rect\n    ? {\n        position: 'absolute',\n        height: isVertical\n          ? toCssCalcLength(rect.height, thickness, '-')\n          : toCssLength(rect.height),\n        width: isVertical\n          ? toCssLength(rect.width)\n          : toCssCalcLength(rect.width, thickness, '-'),\n        top:\n          isVertical && !isAfter\n            ? toCssCalcLength(rect.top, thickness, '+')\n            : toCssLength(rect.top),\n        left:\n          !isVertical && !isAfter\n            ? toCssCalcLength(rect.left, thickness, '+')\n            : toCssLength(rect.left),\n      }\n    : {\n        display: 'none',\n      }\n}\n","import React, { memo, useMemo } from 'react'\nimport { usePanes } from './hook'\nimport { TilePane } from './components'\n\nconst TilePanesInner: React.FC = () => {\n  const panes = usePanes()\n  return useMemo(\n    () => (\n      <>\n        {panes.map((pane) => (\n          <TilePane pane={pane} key={pane.name} />\n        ))}\n      </>\n    ),\n    [panes]\n  )\n}\n\nexport const TilePanes = memo(TilePanesInner)\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../../..'\nimport { TilePaneWithRect } from '../../../../../..'\n\nexport function usePanes() {\n  const movingTabs = useContext(MovingTabsContext)\n  const leaves = useContext(TileLeavesContext)\n\n  const panes: TilePaneWithRect[] = useMemo(() => {\n    const panes: TilePaneWithRect[] = movingTabs.map(({ name }) => ({\n      name,\n      rect: null,\n    }))\n    leaves.forEach((leaf) => {\n      panes.push(\n        ...leaf.children.map((name, i) => ({\n          name,\n          rect: leaf.onTab === i ? leaf.rect : null,\n        }))\n      )\n    })\n    return panes\n  }, [leaves, movingTabs])\n  return panes\n}\n","import React, { memo, useCallback, useContext, useMemo } from 'react'\nimport { TabsBarContext, TileDispatchContext } from '../../../../..'\nimport { PaneName, TileLeaf } from '../../../../../..'\nimport { useStyle } from './hook'\nexport interface TabBarProps {\n  leaf: TileLeaf\n  onTab: number\n  tabs: PaneName[]\n}\n\nexport type TabBarMoreProps = TabBarProps & {\n  isHidden?: boolean\n}\n\nexport interface TabBarAction {\n  switchTab: (onTab: number) => void\n  closeTab: (index: number) => void\n}\n\nconst TabsBarInner: React.FC<TabBarMoreProps> = (props) => {\n  const { leaf, isHidden } = props\n  const tabBar = useContext(TabsBarContext)\n  const dispatch = useContext(TileDispatchContext)\n\n  const switchTab = useCallback(\n    (onTab: number) =>\n      dispatch({\n        leafToSwitchTab: {\n          leaf,\n          onTab,\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const closeTab = useCallback(\n    (index: number) =>\n      dispatch({\n        leafToCloseTab: {\n          leaf,\n          name: leaf.children[index],\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const action: TabBarAction = useMemo(() => ({ switchTab, closeTab }), [\n    closeTab,\n    switchTab,\n  ])\n\n  const { render: Render } = tabBar\n  const style = useStyle(leaf.rect, isHidden)\n  return useMemo(\n    () => (\n      <div style={style}>\n        <Render action={action} {...props} />\n      </div>\n    ),\n    [Render, action, props, style]\n  )\n}\n\nexport const TabsBar = memo(TabsBarInner)\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\nexport function useStyle(\n  rect: TileNodeRect,\n  isHidden?: boolean\n): CSSProperties {\n  const table = useContext(TabsBarContext)\n  const { position } = table\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(table.thickness), [table])\n  return {\n    visibility: isHidden ? 'hidden' : undefined,\n    position: 'absolute',\n    width: isVertical ? toCssLength(rect.width) : thickness,\n    height: isVertical ? thickness : toCssLength(rect.height),\n    top: isAfter ? undefined : toCssLength(rect.top),\n    bottom: isAfter ? toCssLength(1 - rect.top - rect.height) : undefined,\n    left: isAfter ? undefined : toCssLength(rect.left),\n    right: isAfter ? toCssLength(1 - rect.left - rect.width) : undefined,\n  }\n}\n","import React, { memo, useMemo } from 'react'\nimport { TabsBar } from './components'\nimport { useTabs } from './hook'\n\nconst TabsBarsInner: React.FC = () => {\n  const tabBars = useTabs()\n  return useMemo(\n    () => (\n      <>\n        {tabBars.map((tabBar) => (\n          <TabsBar key={tabBar.leaf.id} {...tabBar} />\n        ))}\n      </>\n    ),\n    [tabBars]\n  )\n}\n\nexport const TabsBars = memo(TabsBarsInner)\nexport * from './components'\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../..'\nimport { TabBarMoreProps } from '../components'\n\nexport function useTabs() {\n  const leaves = useContext(TileLeavesContext)\n  const movingTabs = useContext(MovingTabsContext)\n\n  const tabBarsProps = useMemo(() => {\n    const tabBarsProps: TabBarMoreProps[] = leaves.map((leaf) => ({\n      leaf,\n      onTab: leaf.onTab,\n      tabs: leaf.children.slice(),\n    }))\n    movingTabs.forEach((tab) => {\n      const tabBar = tabBarsProps.find((it) => it.leaf.id === tab.leaf.id)\n      if (tabBar) {\n        tabBar.tabs.push(tab.name)\n      } else {\n        tabBarsProps.push({\n          leaf: tab.leaf,\n          onTab: tab.leaf.onTab,\n          tabs: [tab.name],\n          isHidden: true,\n        })\n      }\n    })\n    return tabBarsProps\n  }, [leaves, movingTabs])\n  return tabBarsProps\n}\n","import { TileNodeRect } from '../../../../../..'\n\nexport function calcBarStyles(\n  { top, left, width, height }: TileNodeRect,\n  isRow?: boolean\n) {\n  return {\n    top: top * 100 + '%',\n    left: left * 100 + '%',\n    width: isRow ? undefined : width * 100 + '%',\n    height: isRow ? height * 100 + '%' : undefined,\n    transform: `translate${isRow ? 'X' : 'Y'}(-50%)`,\n  }\n}\n","import React, { useCallback, useContext, useMemo } from 'react'\nimport { useDrag } from 'react-use-gesture'\nimport { ContainerRectContext, StretchBarConfigContext } from '../../../..'\nimport { StretchBarEntity } from '../../../../..'\nimport { useThrottleMove } from './hook'\nimport { calcBarStyles } from './util'\n\nexport interface StretchBarProps {\n  bar: StretchBarEntity\n}\n\nconst StretchBarInner: React.FC<StretchBarProps> = ({ bar }) => {\n  const { isRow } = bar.parentPane\n  const containerRect = useContext(ContainerRectContext)\n  const { style, className, child } = useContext(StretchBarConfigContext)\n  const move = useThrottleMove(bar)\n\n  const styled = useMemo(\n    () => (typeof style === 'function' ? style(isRow) : style),\n    [isRow, style]\n  )\n\n  const classNamed = useMemo(\n    () => (typeof className === 'function' ? className(isRow) : className),\n    [className, isRow]\n  )\n  const children = useMemo(\n    () => (typeof child === 'function' ? child(isRow) : child),\n    [child, isRow]\n  )\n\n  const moveBar = useCallback(\n    (mx: number, my: number) => {\n      const distance = isRow\n        ? mx / containerRect.width\n        : my / containerRect.height\n      move(distance)\n    },\n    [containerRect.height, containerRect.width, isRow, move]\n  )\n\n  const bind = useDrag(\n    ({ down, delta: [mx, my] }) => {\n      down && moveBar(mx, my)\n    },\n    { enabled: true }\n  )\n  const { top, left, width, height } = bar.nextPane.rect\n\n  return useMemo(\n    () => (\n      <div\n        {...bind()}\n        className={classNamed}\n        style={{\n          ...styled,\n          position: 'absolute',\n          ...calcBarStyles({ top, left, width, height }, isRow),\n        }}\n      >\n        {children}\n      </div>\n    ),\n    [bind, children, classNamed, height, isRow, left, styled, top, width]\n  )\n}\n\nexport const StretchBar = React.memo(StretchBarInner)\n","import { useCallback, useContext, useRef } from 'react'\nimport {\n  StretchBarConfigContext,\n  StretchBarEntity,\n  TileDispatchContext,\n} from '../../../../../..'\n\nexport function useThrottleMove(bar: StretchBarEntity) {\n  const { throttle } = useContext(StretchBarConfigContext)\n  const timerRef = useRef<number>()\n  const accumulation = useRef<number>(0)\n\n  const dispatch = useContext(TileDispatchContext)\n\n  const move = useCallback(\n    (distance: number) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, throttle)\n        dispatch({\n          barToMove: {\n            bar,\n            distance: accumulation.current ?? distance,\n          },\n        })\n        accumulation.current = distance\n      } else {\n        accumulation.current += distance\n      }\n    },\n    [bar, dispatch, throttle]\n  )\n  return move\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { StretchBarsContext } from '../../..'\nimport { StretchBar } from './StretchBar'\n\nconst StretchBarsInner: React.FC = () => {\n  const bars = useContext(StretchBarsContext)\n  return useMemo(\n    () => (\n      <>\n        {bars.map((bar) => (\n          <StretchBar bar={bar} key={bar.nextPane.id} />\n        ))}\n      </>\n    ),\n    [bars]\n  )\n}\n\nexport const StretchBars = memo(StretchBarsInner)\n","import { TabsBarPosition } from '../..'\n\nexport function toCssLength(length: number) {\n  return `${length * 100}%`\n}\n\nexport function toCssCalcLength(\n  percent: number,\n  offset: string,\n  mode: '+' | '-'\n) {\n  return `calc(${toCssLength(percent)} ${mode} ${offset})`\n}\n\nexport const toQuadrant = (position: TabsBarPosition) => [\n  (['top', 'bottom'] as TabsBarPosition[]).includes(position),\n  (['right', 'bottom'] as TabsBarPosition[]).includes(position),\n]\n\nexport const completeUnit = (len: number | string) =>\n  typeof len === 'number' ? `${len}px` : len\n","import React, { memo, useContext, useMemo } from 'react'\nimport { ContainerRefContext } from '..'\nimport { StretchBars, TabsBars, TilePanes } from './components'\n\nexport interface TileContainerProps {\n  width?: string | number\n  height?: string | number\n}\n\nconst TileContainerInner: React.FC<TileContainerProps> = ({\n  width = '100%',\n  height = '100%',\n}) => {\n  const targetRef = useContext(ContainerRefContext)\n  return useMemo(\n    () => (\n      <div ref={targetRef} style={{ position: 'relative', width, height }}>\n        <TabsBars />\n        <TilePanes />\n        <StretchBars />\n      </div>\n    ),\n    [height, targetRef, width]\n  )\n}\n\nexport const TileContainer = memo(TileContainerInner)\nexport * from './utils'\nexport * from './components'\n","import { TileStore } from '../..'\nimport {\n  MovingTab,\n  removeInArray,\n  TileBranch,\n  TileLeaf,\n  unfold,\n} from '../../../..'\n\nexport function startMovingTab(\n  { movingTabs, leaves, branches, rootNode }: TileStore,\n  tabToStopMoving: MovingTab,\n  notMoving?: boolean\n): TileStore {\n  const newMovingTabs = movingTabs.slice()\n  const { name } = tabToStopMoving\n  const existedTab = newMovingTabs.find((it) => (it.name = name))\n  if (!notMoving && !existedTab) {\n    newMovingTabs.push(tabToStopMoving)\n  }\n\n  const leaf = leaves.find((l) => l.children.includes(name))\n  if (leaf) {\n    const newChildren = removeInArray(leaf.children, name)\n    leaf.onTab = 0\n    leaf.setChildren(newChildren)\n    if (newChildren.length === 0) {\n      removeNode(branches, leaf)\n    }\n  }\n\n  const nodes = unfold(rootNode)\n  return {\n    movingTabs: newMovingTabs,\n    rootNode,\n    ...nodes,\n  }\n}\n\nfunction removeNode(branches: TileBranch[], node: TileLeaf | TileBranch) {\n  const parent = branches.find((it) => it === node.parent)\n  if (parent) {\n    const newChildren = removeInArray(\n      parent.children,\n      (it) => it.id === node.id\n    )\n    if (newChildren.length === 0) {\n      removeNode(branches, parent)\n    } else {\n      parent.setChildren(newChildren)\n    }\n  }\n}\n","import { TileStore } from '../..'\nimport { Into, PaneWithPreBox } from '../../..'\nimport {\n  PaneName,\n  removeInArray,\n  unfold,\n  isTileLeaf,\n  TileBranch,\n  TileLeaf,\n  TileLeafSubstance,\n  TileBranchSubstance,\n  replaceInArray,\n} from '../../../..'\n\nexport type TabToStopMoving = {\n  pane: PaneName\n  preBox?: PaneWithPreBox\n}\n\nexport function stopMovingTab(\n  { movingTabs, ...rest }: TileStore,\n  { pane, preBox }: TabToStopMoving\n): TileStore {\n  const newMovingTabs = removeInArray(movingTabs, (it) => (it.name = pane))\n  if (preBox) {\n    const { rootNode } = rest\n    insertPane(pane, preBox, rest)\n    const nodes = unfold(rootNode)\n    return { movingTabs: newMovingTabs, rootNode, ...nodes }\n  } else return { movingTabs: newMovingTabs, ...rest }\n}\n\nfunction insertPane(\n  pane: PaneName,\n  preBox: PaneWithPreBox,\n  nodes: Pick<TileStore, 'branches' | 'leaves'>\n) {\n  const { targetNode: node, into } = preBox\n  const { leaves, branches } = nodes\n  const isNext = ['right', 'bottom'].includes(into)\n  const isBrother = isSegment(node, into)\n  const isRow = ['right', 'left'].includes(into)\n\n  if (isTileLeaf(node)) {\n    const leaf = leaves.find((it) => it === node)\n    if (leaf) {\n      if (into === 'center') {\n        const newChildren = leaf.children.slice()\n        newChildren.push(pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = leaf.children.length - 1\n      } else {\n        isBrother\n          ? segment(node, pane, isNext)\n          : fission(node, pane, isNext, isRow)\n      }\n    }\n  } else {\n    const branch = branches.find((it) => it === node)\n    if (branch) {\n      fission(node, pane, isNext, isRow)\n    }\n  }\n}\n\n/** 分割 ——插入同级节点 */\nfunction segment(node: TileBranch | TileLeaf, pane: PaneName, isNext: boolean) {\n  const { parent } = node\n  if (!parent) return\n  const grow = node.grow / 2\n  const leaf: TileLeafSubstance = { grow, children: [pane] }\n  node.grow = grow\n  const indexInParent = parent.children.findIndex((it) => it === node)\n  const index = isNext ? indexInParent + 1 : indexInParent\n  const newNodes: (\n    | TileBranchSubstance\n    | TileLeafSubstance\n  )[] = parent.children.slice()\n  newNodes.splice(index, 0, leaf)\n  parent.setChildren(newNodes)\n}\n\n/** 分裂 ——插入子级节点*/\nfunction fission(\n  node: TileBranch | TileLeaf,\n  pane: PaneName,\n  isNext: boolean,\n  isRow: boolean\n) {\n  const { parent, grow } = node\n  if (!parent) {\n    const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n    const oldLeaf: TileBranchSubstance | TileLeafSubstance = isTileLeaf(node)\n      ? node.dehydrate()\n      : node.dehydrate()\n    if (!isTileLeaf(node)) {\n      node.isRow = isRow\n      node.setChildren(isNext ? [oldLeaf, newLeaf] : [newLeaf, oldLeaf])\n    }\n    return\n  }\n  const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n  const branch: TileBranchSubstance = {\n    grow,\n    isRow,\n    children: isNext ? [node, newLeaf] : [newLeaf, node],\n  }\n  const newNodes = replaceInArray<TileBranchSubstance | TileLeafSubstance>(\n    parent?.children,\n    node,\n    branch\n  )\n  parent.setChildren(newNodes)\n}\n\nfunction isSegment(node: TileBranch | TileLeaf, into: Into): boolean {\n  const isRow = node.parent?.isRow\n  const segmentInto: Into[] = isRow ? ['left', 'right'] : ['top', 'bottom']\n  return segmentInto.includes(into)\n}\n","import { createTileBranch, TileBranchSubstance, unfold } from '../../..'\n\nexport function initRootNode(rootNodeSub: TileBranchSubstance) {\n  const rootNode = createTileBranch(rootNodeSub)\n  const nodes = unfold(rootNode)\n  return { rootNode, ...nodes }\n}\n","import { TileStoreReducer } from '../..'\nimport { MovingTab, TileLeaf } from '../../..'\nimport { BarToMove, moveBar } from './moveBar'\nimport { startMovingTab, stopMovingTab, TabToStopMoving } from './MovingTab'\nimport { switchLeafTab } from './switchLeafTab'\n\nexport * from './initRootNode'\n\nexport type TileStoreAction = {\n  leafToSwitchTab?: {\n    leaf: TileLeaf\n    onTab: number\n  }\n  leafToCloseTab?: MovingTab\n  tabToStopMoving?: TabToStopMoving\n  tabToStartMoving?: MovingTab\n  barToMove?: BarToMove\n}\n\nexport const tileStoreReducer: TileStoreReducer = (\n  state,\n  {\n    leafToSwitchTab,\n    tabToStopMoving,\n    tabToStartMoving,\n    barToMove,\n    leafToCloseTab,\n  }\n) => {\n  if (leafToSwitchTab) return switchLeafTab(state, leafToSwitchTab)\n  if (leafToCloseTab) return startMovingTab(state, leafToCloseTab, true)\n  if (tabToStartMoving) return startMovingTab(state, tabToStartMoving)\n  if (tabToStopMoving) return stopMovingTab(state, tabToStopMoving)\n  if (barToMove) return moveBar(state, barToMove)\n  return state\n}\n","import { TileLeaf } from '../../..'\nimport { TileStore } from '../typings'\n\nexport function switchLeafTab(\n  state: TileStore,\n  switchLeafTab: { leaf: TileLeaf; onTab: number }\n) {\n  const { leaves, ...rest } = state\n  const newLeaves = leaves.slice()\n  const leaf = newLeaves.find((l) => l === switchLeafTab.leaf)\n  if (leaf) {\n    leaf.onTab = switchLeafTab.onTab\n  }\n  return { leaves: newLeaves, ...rest }\n}\n","import { StretchBarEntity, TileStore, unfold } from '../../..'\n\nexport type BarToMove = {\n  distance: number\n  bar: StretchBarEntity\n}\n\nexport function moveBar(\n  { rootNode, movingTabs }: TileStore,\n  barToMove: BarToMove\n): TileStore {\n  const { bar, distance } = barToMove\n  bar.move(distance)\n  const nodes = unfold(rootNode)\n  return { ...nodes, movingTabs, rootNode }\n}\n","import { StretchBarEntity } from '..'\n\n/**\n * @param {number} distance percentage in container\n * @return {boolean} Did the move succeed?\n */\nexport function move(this: StretchBarEntity, distance: number): boolean {\n  const lengthSum = this.parentPane.isRow\n    ? this.parentPane.rect.width\n    : this.parentPane.rect.height\n  const offset = distance / lengthSum\n  const previousPaneGrow = this.previousPane.grow + offset\n  const nextPaneGrow = this.nextPane.grow - offset\n  const isMoved = isValidGrow(previousPaneGrow, nextPaneGrow)\n  if (isMoved) {\n    this.previousPane.grow = previousPaneGrow\n    this.nextPane.grow = nextPaneGrow\n    this.parentPane.setChildren(this.parentPane.children)\n  }\n  return isMoved\n}\n\nfunction isValidGrow(growA: number, growB: number): boolean {\n  if (growA < 0.04 || growB < 0.04) return false\n  const growSum = growA + growB\n  if (growA > growSum || growB > growSum) return false\n  return true\n}\n","import { TileBranch, TileNode } from '..'\nimport { move } from './util'\n\nexport class StretchBarEntity {\n  constructor(\n    public parentPane: TileBranch,\n    public previousPane: TileNode,\n    public nextPane: TileNode\n  ) {}\n  rect = this.nextPane.rect\n  move = move\n}\n","import { TileBranch, TileLeaf, TileNodeRect } from '../../..'\nimport { PaneWithPreBox } from '../typings'\n\nconst branchProportion = 0.05\nconst leafProportion = 0.3\nexport function calcPreBox(\n  branches: TileBranch[],\n  leaves: TileLeaf[],\n  innerPosition: [number, number]\n): PaneWithPreBox | undefined {\n  if (!innerPosition) return\n  const [x, y] = innerPosition\n  for (const pane of branches) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (pane.isRow) {\n        if (y - top < height * branchProportion) {\n          return { targetNode: pane, into: 'top' }\n        }\n        if (top + height - y < height * branchProportion) {\n          return { targetNode: pane, into: 'bottom' }\n        }\n      } else {\n        if (x - left < width * branchProportion) {\n          return { targetNode: pane, into: 'left' }\n        }\n        if (left + width - x < width * branchProportion) {\n          return { targetNode: pane, into: 'right' }\n        }\n      }\n    }\n  }\n\n  for (const pane of leaves) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (x - left < width * leafProportion) {\n        return { targetNode: pane, into: 'left' }\n      }\n      if (left + width - x < width * leafProportion) {\n        return { targetNode: pane, into: 'right' }\n      }\n      if (y - top < height * leafProportion) {\n        return { targetNode: pane, into: 'top' }\n      }\n      if (top + height - y < height * leafProportion) {\n        return { targetNode: pane, into: 'bottom' }\n      }\n      return { targetNode: pane, into: 'center' }\n    }\n  }\n}\n\nfunction isInPane(position: TileNodeRect, [x, y]: [number, number]) {\n  const { left, top, width, height } = position\n  return left < x && x < left + width && top < y && y < top + height\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { Vector2 } from 'react-use-gesture/dist/types'\nimport { RectReadOnly } from 'react-use-measure'\nimport {\n  ContainerRectContext,\n  PreBoxConfigContext,\n  PreBoxTarget,\n  TileBranchesContext,\n  TileLeavesContext,\n} from '../../..'\nimport { isTileLeaf, TileNodeRect } from '../../../../model'\nimport { useThrottleFn } from '../../hook'\nimport { PaneWithPreBox } from '../../typings'\nimport { calcPreBox } from '../../util'\n\nexport interface PreBoxProps {\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>\n  position: Vector2\n}\n\nconst PreBoxInner: React.FC<PreBoxProps> = ({\n  position,\n  paneWithPreBoxRef,\n}) => {\n  const containerRect = useContext(ContainerRectContext)\n  const branches = useContext(TileBranchesContext)\n  const leaves = useContext(TileLeavesContext)\n  const { throttle, style, className, child } = useContext(PreBoxConfigContext)\n\n  const innerPosition = useMemo(() => {\n    return [\n      (position[0] - containerRect.left) / containerRect.width,\n      (position[1] - containerRect.top) / containerRect.height,\n    ] as Vector2\n  }, [containerRect, position])\n\n  const calcLazyPreBox = useThrottleFn(calcPreBox, throttle)\n  const paneWithPreBox = useMemo(\n    () => calcLazyPreBox(branches, leaves, innerPosition),\n    [branches, calcLazyPreBox, innerPosition, leaves]\n  )\n  paneWithPreBoxRef.current = paneWithPreBox\n  return useMemo(() => {\n    const targetType = calcTargetType()\n    const into = paneWithPreBox?.into ?? 'center'\n    const styled = typeof style === 'function' ? style(into, targetType) : style\n    const classNamed =\n      typeof className === 'function' ? className(into, targetType) : className\n    const boxPosition = calcBoxPosition(paneWithPreBox, containerRect)\n    const children =\n      typeof child === 'function' ? child(into, targetType) : child\n\n    return (\n      <div\n        className={classNamed}\n        style={{\n          ...styled,\n          zIndex: 1,\n          visibility: 'visible',\n          position: 'fixed',\n          ...boxPosition,\n        }}\n      >\n        {children}\n      </div>\n    )\n\n    function calcTargetType(): PreBoxTarget {\n      if (!paneWithPreBox) return null\n      return isTileLeaf(paneWithPreBox?.targetNode ?? branches[0])\n        ? 'leaf'\n        : 'branch'\n    }\n  }, [branches, child, className, containerRect, paneWithPreBox, style])\n}\n\nconst proportion = 0.5\nexport const PreBox = memo(PreBoxInner)\n\nfunction calcBoxPosition(\n  paneWithPreBox: PaneWithPreBox | undefined,\n  containerRect: RectReadOnly\n): TileNodeRect {\n  if (!paneWithPreBox)\n    return {\n      top: containerRect.top,\n      left: containerRect.left,\n      height: containerRect.height,\n      width: containerRect.width,\n    }\n  const { targetNode, into } = paneWithPreBox\n  const { top, left, width, height } = targetNode.rect\n\n  switch (into) {\n    case 'center':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width,\n      }\n    case 'left':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'right':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left:\n          containerRect.left +\n          left * containerRect.width +\n          containerRect.width * width * (1 - proportion),\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'top':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    case 'bottom':\n      return {\n        top:\n          containerRect.top +\n          top * containerRect.height +\n          containerRect.height * height * (1 - proportion),\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n  }\n}\n","import React, { useState } from 'react'\nimport {\n  createTitlePanes,\n  DraggableTitle,\n  TileBranchSubstance,\n  TileContainer,\n  TileProvider,\n} from '../components'\nimport './App.css'\n\nfunction Arbutus() {\n  const [number, count] = useState(1)\n  return (\n    <div onClick={() => count((n) => n + 1)} className=\"pane\">\n      {number} 颗杨梅\n    </div>\n  )\n}\n\nfunction Apple() {\n  return <div className=\"pane\">苹果</div>\n}\n\nconst [nodeList, names] = createTitlePanes({\n  arbutus: <Arbutus />,\n  cherry: <div className=\"pane\">樱桃</div>,\n  apple: <Apple />,\n  banana: <div className=\"pane\">香蕉🍌</div>,\n  lemon: <div className=\"pane\">柠檬</div>,\n  mango: <div className=\"pane\">芒果</div>,\n  pomelo: <div className=\"pane\">柚子</div>,\n})\n\nconst rootPane: TileBranchSubstance = {\n  children: [\n    { children: [names.apple, names.cherry] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        { children: names.arbutus },\n        { children: names.lemon },\n        {\n          children: [\n            { children: names.mango, grow: 3 },\n            { children: names.pomelo },\n          ],\n        },\n      ],\n    },\n  ],\n}\n\nconst App: React.FC = () => {\n  return (\n    <TileProvider tilePanes={nodeList} rootNode={rootPane}>\n      <div className=\"App\">\n        <div style={{ height: 30 }} />\n        <div className=\"fence\">\n          <TileContainer />\n        </div>\n      </div>\n      <DraggableTitle name={names.banana}>拖动这个香蕉🍌</DraggableTitle>\n      <a href=\"https://xcfox.github.io/react-tile-pane/\">查看文档</a>\n    </TileProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport reportWebVitals from './common/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}