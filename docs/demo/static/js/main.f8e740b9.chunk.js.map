{"version":3,"sources":["components/tilePane/index.ts","components/tilePane/view/index.ts","components/tilePane/view/Provider/index.tsx","components/tilePane/model/TileNode/index.ts","components/tilePane/view/Provider/config/TabBar/style.module.css","components/tilePane/view/DraggableTitle/util/index.ts","components/tilePane/view/DraggableTitle/hook/useDragAndPosition/index.ts","components/tilePane/view/DraggableTitle/hook/useThrottle/index.ts","components/tilePane/view/DraggableTitle/hook/useSpring/index.ts","components/tilePane/model/TileNode/util/dehydrate.ts","components/tilePane/model/TileNode/util/index.ts","components/tilePane/util/index.ts","components/tilePane/view/DraggableTitle/index.tsx","components/tilePane/view/Provider/config/TabBar/index.tsx","components/tilePane/view/Provider/config/StretchBar/index.ts","components/tilePane/view/Provider/config/PreBox/index.ts","components/tilePane/view/Provider/config/index.ts","components/index.ts","components/tilePane/view/DraggableTitle/hook/useMovingChecker/index.ts","components/tilePane/model/index.ts","components/tilePane/model/TileNode/helper/isTileLeaf.ts","components/tilePane/model/TileNode/helper/createTileNode.ts","components/tilePane/model/TileNode/helper/increasingID.ts","components/tilePane/view/Provider/hook/useMouse/index.ts","components/tilePane/view/Provider/config/PreBox/style.module.css","components/tilePane/model/TileNode/util/setChildren.ts","components/tilePane/view/Provider/config/StretchBar/style.module.css","components/tilePane/util/unfold.ts","components/tilePane/util/createTitlePanes.ts","components/tilePane/util/array.ts","components/tilePane/view/Provider/data/index.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/index.tsx","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useChild.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useStyle.ts","components/tilePane/view/Container/components/TilePanes/index.tsx","components/tilePane/view/Container/components/TilePanes/hook/usePanes/index.ts","components/tilePane/view/Container/components/TabsBars/components/TabsBar/index.tsx","components/tilePane/view/Container/components/TabsBars/components/TabsBar/hook/index.ts","components/tilePane/view/Container/components/TabsBars/index.tsx","components/tilePane/view/Container/components/TabsBars/hook/index.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/util/calcBarStyles.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/index.tsx","components/tilePane/view/Container/components/StretchBars/StretchBar/hook/index.ts","components/tilePane/view/Container/components/StretchBars/index.tsx","components/tilePane/view/Container/utils/toCssLength.ts","components/tilePane/view/Container/index.tsx","components/tilePane/view/Provider/controller/MovingTab/startMovingTab.ts","components/tilePane/view/Provider/controller/MovingTab/stopMovingTab.ts","components/tilePane/view/Provider/controller/initRootNode.ts","components/tilePane/view/Provider/controller/index.ts","components/tilePane/view/Provider/controller/switchLeafTab.ts","components/tilePane/view/Provider/controller/moveBar.ts","components/tilePane/model/StretchBar/util/index.ts","components/tilePane/model/StretchBar/index.ts","components/tilePane/view/DraggableTitle/components/PreBox/index.tsx","App/App.tsx","common/reportWebVitals.ts","index.tsx"],"names":["TileProviderInner","children","rootNodeSub","rootNode","tilePanes","tabBar","defaultTabsBarConfig","stretchBar","defaultStretchBar","preBox","defaultPreBox","useReducer","tileStoreReducer","movingTabs","initRootNode","branches","leaves","stretchBars","tileStoreDispatch","childrenMemo","useMemo","useMeasure","scroll","targetRef","containerRect","Provider","value","TileProvider","memo","TileNode","id","increasingID","parent","grow","rect","top","left","width","height","TileLeaf","onTab","rest","setChildren","leafSetChildren","dehydrate","leafDehydrate","TileBranch","isRow","branchSetChildren","branchDehydrate","module","exports","branchProportion","leafProportion","calcPreBox","innerPosition","x","y","pane","isInPane","targetNode","into","position","orFn","orFunc","args","useDragAndPosition","paneWithPreBoxRef","name","leaf","dispatch","useContext","TileDispatchContext","useState","setPosition","velocity","setVelocities","bind","useGesture","onDrag","down","xy","undefined","onDragStart","tabToStartMoving","onDragEnd","tabToStopMoving","current","drag","threshold","useThrottleFn","fn","ms","result","useRef","timerRef","throttledFn","useCallback","window","setTimeout","clearTimeout","useSpring","targetValue","tension","friction","spring","setSpring","setValue","listener","onSpringUpdate","currentSpring","newValue","getCurrentValue","useEffect","newSpring","SpringSystem","createSpring","setCurrentValue","addListener","removeListener","setEndValue","this","map","it","isTileLeaf","calcChildGrows","growsSolid","c","growSum","reduce","s","n","calcChildRects","grows","childLeft","arr","i","push","childTop","DraggableTitleInner","props","TileLeavesContext","find","p","includes","childrenFn","styleFn","style","classNameFn","className","isMoving","useMovingChecker","checkMoving","useFn","scale","styled","visibility","transform","zIndex","ref","DraggableTitle","TabBarInner","tabs","action","checkTabMoving","tab","tabMoving","tabInner","tabInnerOff","onClick","switchTab","tabTitle","off","closeTab","render","thickness","TabsBarContext","createContext","rowBar","colBar","StretchBarConfigContext","throttle","_","target","preBranch","noPreBox","PreBoxConfigContext","TitlePanesContext","MovingTabsContext","node","Array","isTilePaneNames","list","Object","createTileBranch","sub","toString","useMouseXY","enable","mousemove","e","clientX","clientY","addEventListener","removeEventListener","filter","child","findIndex","unfold","forEach","prevPane","bar","StretchBarEntity","createTitlePanes","obj","keys","key","removeInArray","one","newArr","slice","index","Function","splice","replaceInArray","newOne","TileBranchesContext","StretchBarsContext","ContainerRefContext","defaultRect","bottom","right","ContainerRectContext","MousePositionContext","TilePaneInner","findChildPane","useChild","toQuadrant","isVertical","isAfter","completeUnit","toCssCalcLength","toCssLength","display","useStyle","TilePane","TilePanesInner","panes","usePanes","TilePanes","TabsBarInner","isHidden","leafToSwitchTab","leafToCloseTab","Render","table","TabsBar","TabsBarsInner","tabBars","tabBarsProps","useTabs","TabsBars","calcBarStyles","StretchBarInner","parentPane","move","accumulation","distance","barToMove","useThrottleMove","classNamed","moveBar","mx","my","useDrag","delta","enabled","nextPane","StretchBar","React","StretchBarsInner","bars","StretchBars","length","percent","offset","mode","len","TileContainerInner","userSelect","TileContainer","startMovingTab","notMoving","newMovingTabs","existedTab","l","newChildren","removeNode","nodes","stopMovingTab","isNext","isBrother","isSegment","indexInParent","newNodes","segment","fission","insertPane","newLeaf","branch","oldLeaf","state","switchLeafTab","newLeaves","previousPaneGrow","previousPane","nextPaneGrow","isMoved","growA","growB","isValidGrow","PreBoxInner","calcLazyPreBox","paneWithPreBox","targetType","calcTargetType","boxPosition","proportion","calcBoxPosition","PreBox","Arbutus","number","count","Apple","arbutus","cherry","apple","banana","lemon","mango","pomelo","nodeList","names","rootPane","App","href","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8e740b9.chunk.js","sourcesContent":["export * from './model'\nexport * from './view'\nexport * from './util'\n","export * from './Provider'\nexport * from './Container'\nexport * from './DraggableTitle'\n","import React, { memo, useMemo, useReducer } from 'react'\nimport useMeasure from 'react-use-measure'\nimport {\n  MousePositionContext,\n  PreBoxConfig,\n  StretchBarConfig,\n  TileBranchSubstance,\n  TilePane,\n} from '../..'\nimport {\n  TitlePanesContext,\n  ContainerRectContext,\n  ContainerRefContext,\n  MovingTabsContext,\n  StretchBarsContext,\n  TileBranchesContext,\n  TileDispatchContext,\n  TileLeavesContext,\n  TileStoreReducer,\n  initRootNode,\n  TabsBarContext,\n  tileStoreReducer,\n  TabsBarConfig,\n  defaultTabsBarConfig,\n  StretchBarConfigContext,\n  defaultStretchBar,\n} from '.'\nimport { defaultPreBox, PreBoxConfigContext } from './config'\nimport { useMouseXY } from './hook'\n\nexport interface TileProviderProps {\n  children?: React.ReactNode\n  rootNode: TileBranchSubstance\n  tilePanes: TilePane[]\n  tabBar?: TabsBarConfig\n  preBox?: PreBoxConfig\n  stretchBar?: StretchBarConfig\n}\n\nexport function MousePositionProvider({\n  children,\n}: {\n  children?: React.ReactNode\n}) {\n  const mousePosition = useMouseXY()\n  return (\n    <MousePositionContext.Provider value={mousePosition}>\n      {children}\n    </MousePositionContext.Provider>\n  )\n}\n\nconst TileProviderInner: React.FC<TileProviderProps> = ({\n  children,\n  rootNode: rootNodeSub,\n  tilePanes,\n  tabBar = defaultTabsBarConfig,\n  stretchBar = defaultStretchBar,\n  preBox = defaultPreBox,\n}: TileProviderProps) => {\n  const [\n    { branches, leaves, stretchBars, movingTabs },\n    tileStoreDispatch,\n  ] = useReducer<TileStoreReducer>(tileStoreReducer, {\n    movingTabs: [],\n    ...initRootNode(rootNodeSub),\n  })\n\n  const childrenMemo = useMemo(() => children, [children])\n  const [targetRef, containerRect] = useMeasure({ scroll: true })\n  return (\n    <ContainerRefContext.Provider value={targetRef}>\n      <PreBoxConfigContext.Provider value={preBox}>\n        <TitlePanesContext.Provider value={tilePanes}>\n          <ContainerRectContext.Provider value={containerRect}>\n            <TileBranchesContext.Provider value={branches}>\n              <StretchBarConfigContext.Provider value={stretchBar}>\n                <TileLeavesContext.Provider value={leaves}>\n                  <StretchBarsContext.Provider value={stretchBars}>\n                    <TileDispatchContext.Provider value={tileStoreDispatch}>\n                      <MovingTabsContext.Provider value={movingTabs}>\n                        <TabsBarContext.Provider value={tabBar}>\n                          {childrenMemo}\n                        </TabsBarContext.Provider>\n                      </MovingTabsContext.Provider>\n                    </TileDispatchContext.Provider>\n                  </StretchBarsContext.Provider>\n                </TileLeavesContext.Provider>\n              </StretchBarConfigContext.Provider>\n            </TileBranchesContext.Provider>\n          </ContainerRectContext.Provider>\n        </TitlePanesContext.Provider>\n      </PreBoxConfigContext.Provider>\n    </ContainerRefContext.Provider>\n  )\n}\n\nexport const TileProvider = memo(TileProviderInner)\nexport * from './typings'\nexport * from './controller'\nexport * from './data'\nexport * from './config'\nexport * from './hook'\n","import { increasingID, PaneName } from '../..'\nimport {\n  TileBranchSubstance,\n  TileLeafSubstance,\n  TileNodeConstructor,\n  TileNodeRect,\n} from './typings'\nimport { branchDehydrate, leafDehydrate } from './util'\nimport { branchSetChildren, leafSetChildren } from './util/setChildren'\n\nexport class TileNode {\n  constructor(\n    public readonly id: string = increasingID(),\n    public readonly parent: TileBranch | null = null,\n    public grow: number = 1,\n    public rect: TileNodeRect = {\n      top: 0,\n      left: 0,\n      width: 1,\n      height: 1,\n    }\n  ) {}\n}\n\nexport class TileLeaf extends TileNode {\n  constructor(\n    public onTab: number = 0,\n    public children: PaneName[] = [],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n  }\n  public setChildren = leafSetChildren\n  public dehydrate = leafDehydrate\n}\n\nexport class TileBranch extends TileNode {\n  public children!: (TileBranch | TileLeaf)[]\n  constructor(\n    public isRow: boolean = false,\n    children: (TileBranchSubstance | TileLeafSubstance)[],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n    this.setChildren(children)\n  }\n\n  public setChildren = branchSetChildren\n  public dehydrate = branchDehydrate\n}\n\nexport * from './typings'\nexport * from './helper'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabTitle\":\"style_tabTitle__1sgsB\",\"tabBar\":\"style_tabBar__3NaZx\",\"tab\":\"style_tab__3hWR_\",\"tabMoving\":\"style_tabMoving__1RRJV\",\"tabInner\":\"style_tabInner__3DL1o\",\"tabInnerOff\":\"style_tabInnerOff__1H0qR\",\"off\":\"style_off__2fIRl\"};","import { TileBranch, TileLeaf, TileNodeRect } from '../../..'\nimport { PaneWithPreBox } from '../typings'\n\nconst branchProportion = 0.05\nconst leafProportion = 0.3\nexport function calcPreBox(\n  branches: TileBranch[],\n  leaves: TileLeaf[],\n  innerPosition: [number, number]\n): PaneWithPreBox | undefined {\n  if (!innerPosition) return\n  const [x, y] = innerPosition\n  for (const pane of branches) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (pane.isRow) {\n        if (y - top < height * branchProportion) {\n          return { targetNode: pane, into: 'top' }\n        }\n        if (top + height - y < height * branchProportion) {\n          return { targetNode: pane, into: 'bottom' }\n        }\n      } else {\n        if (x - left < width * branchProportion) {\n          return { targetNode: pane, into: 'left' }\n        }\n        if (left + width - x < width * branchProportion) {\n          return { targetNode: pane, into: 'right' }\n        }\n      }\n    }\n  }\n\n  for (const pane of leaves) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (x - left < width * leafProportion) {\n        return { targetNode: pane, into: 'left' }\n      }\n      if (left + width - x < width * leafProportion) {\n        return { targetNode: pane, into: 'right' }\n      }\n      if (y - top < height * leafProportion) {\n        return { targetNode: pane, into: 'top' }\n      }\n      if (top + height - y < height * leafProportion) {\n        return { targetNode: pane, into: 'bottom' }\n      }\n      return { targetNode: pane, into: 'center' }\n    }\n  }\n}\n\nfunction isInPane(position: TileNodeRect, [x, y]: [number, number]) {\n  const { left, top, width, height } = position\n  return left < x && x < left + width && top < y && y < top + height\n}\n\nexport function orFn<As extends unknown[], T = unknown>(\n  orFunc: T | ((...args: As) => T),\n  ...args: As\n) {\n  return typeof orFunc === 'function'\n    ? (orFunc as (...args: As) => T)(...args)\n    : orFunc\n}\n","import { useState, useContext } from 'react'\nimport { useGesture } from 'react-use-gesture'\nimport { TileDispatchContext } from '../../..'\nimport { PaneName, TileLeaf } from '../../../..'\n// import { useMouse } from '..'\nimport { PaneWithPreBox } from '../../typings'\n\nexport function useDragAndPosition(\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>,\n  name: PaneName,\n  leaf: TileLeaf | undefined\n) {\n  const dispatch = useContext(TileDispatchContext)\n  const [position, setPosition] = useState<[number, number]>()\n  const [velocity, setVelocities] = useState(0)\n\n  const bind = useGesture(\n    {\n      onDrag: ({ down, xy, velocity }) => {\n        if (down) {\n          setPosition(xy)\n          setVelocities(velocity)\n        } else {\n          setVelocities(0)\n          setPosition(undefined)\n        }\n      },\n      onDragStart: () => leaf && dispatch({ tabToStartMoving: { name, leaf } }),\n      onDragEnd: () =>\n        dispatch({\n          tabToStopMoving: { pane: name, preBox: paneWithPreBoxRef.current },\n        }),\n    },\n    { drag: { threshold: 10 } }\n  )\n\n  return { bind, position, velocity }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useCallback, useRef } from 'react'\n\nexport function useThrottleFn<Fn extends (...args: any[]) => any>(\n  fn: Fn,\n  ms?: number\n): Fn {\n  const result = useRef<any>()\n  const timerRef = useRef<number>()\n\n  const throttledFn = useCallback(\n    (...arg) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, ms)\n        result.current = fn(...arg)\n      }\n      return result.current\n    },\n    [fn, ms]\n  )\n\n  return ms ? (throttledFn as Fn) : fn\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { Spring, SpringSystem } from 'rebound'\n\nexport const useSpring = (targetValue = 0, tension = 20, friction = 1) => {\n  const [spring, setSpring] = useState<Spring | null>(null)\n  const [value, setValue] = useState<number>(targetValue)\n\n  // memoize listener to being able to unsubscribe later properly, otherwise\n  // listener fn will be different on each re-render and wouldn't unsubscribe properly.\n  const listener = useMemo(\n    () => ({\n      onSpringUpdate: (currentSpring: Spring) => {\n        const newValue = currentSpring.getCurrentValue()\n        setValue(newValue)\n      },\n    }),\n    []\n  )\n\n  useEffect(() => {\n    if (!spring) {\n      const newSpring = new SpringSystem().createSpring(tension, friction)\n      newSpring.setCurrentValue(targetValue)\n      setSpring(newSpring)\n      newSpring.addListener(listener)\n    }\n\n    return () => {\n      if (spring) {\n        spring.removeListener(listener)\n        setSpring(null)\n      }\n    }\n  }, [tension, friction, spring, targetValue, listener])\n\n  useEffect(() => {\n    if (spring) {\n      spring.setEndValue(targetValue)\n    }\n  }, [spring, targetValue])\n\n  return value\n}\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n  isTileLeaf,\n} from '..'\n\nexport function leafDehydrate(this: TileLeaf): TileLeafSubstance {\n  const { children, onTab, grow } = this\n  return { children, onTab, grow }\n}\n\nexport function branchDehydrate(this: TileBranch): TileBranchSubstance {\n  const { children, isRow, grow } = this\n\n  const childrenDehydrated = children.map((it) =>\n    isTileLeaf(it) ? it.dehydrate() : it.dehydrate()\n  )\n  return { children: childrenDehydrated, isRow, grow }\n}\n","import { TileBranch, TileNodeRect } from '..'\n\nexport * from './dehydrate'\n\nexport function calcChildGrows(children: { grow?: number }[]) {\n  const growsSolid = children.map((c) => c.grow ?? 1)\n  const growSum = growsSolid.reduce((s, n) => (s += n), 0) // 部分值\n  const grows = growsSolid.map((c) => c / growSum) // 相对值\n  return grows\n}\n\nexport function calcChildRects(\n  parent: TileBranch,\n  grows: number[]\n): TileNodeRect[] {\n  const { isRow, rect } = parent\n  const { top, left, width, height } = rect\n  if (isRow) {\n    const childLeft = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 left\n        if (i > 0) arr.push(arr[i - 1] + width * grows[i - 1])\n        return arr\n      },\n      [left]\n    )\n    return grows.map((n, i) => ({\n      top,\n      height,\n      width: n * width,\n      left: childLeft[i],\n    }))\n  } else {\n    const childTop = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 top\n        if (i > 0) arr.push(arr[i - 1] + height * grows[i - 1])\n        return arr\n      },\n      [top]\n    )\n    return grows.map((n, i) => ({\n      left,\n      width,\n      height: n * height,\n      top: childTop[i],\n    }))\n  }\n}\n","export * from './unfold'\nexport * from './typings'\nexport * from './isNil'\nexport * from './createTitlePanes'\nexport * from './array'\n","import React, {\n  memo,\n  useContext,\n  useMemo,\n  useRef,\n  CSSProperties,\n  useEffect,\n} from 'react'\nimport useMeasure from 'react-use-measure'\nimport { TileLeavesContext } from '..'\nimport { PaneName } from '../..'\nimport { PreBox } from './components'\nimport { useDragAndPosition, useMovingChecker, useSpring } from './hook'\nimport { PaneWithPreBox } from './typings'\nimport { orFn } from './util'\n\nexport interface DraggableTitleProps {\n  name: PaneName\n  children?: React.ReactNode | ((isMoving: boolean) => React.ReactNode)\n  style?: CSSProperties | ((isMoving: boolean) => CSSProperties)\n  className?: string | ((isMoving: boolean) => string)\n}\n\nconst DraggableTitleInner: React.FC<DraggableTitleProps> = (props) => {\n  const { name } = props\n  const paneWithPreBoxRef = useRef<PaneWithPreBox>()\n\n  const leaves = useContext(TileLeavesContext)\n  const pane = useMemo(() => leaves.find((p) => p.children.includes(name)), [\n    leaves,\n    name,\n  ])\n  const { position, bind, velocity } = useDragAndPosition(\n    paneWithPreBoxRef,\n    name,\n    pane\n  )\n  const { style, className, children } = useFn(props)\n\n  const [targetRef, rect] = useMeasure({ scroll: true })\n\n  useEffect(() => {\n    // console.log(name, rect)\n  }, [name, rect])\n\n  const scale = useSpring(velocity + 1)\n\n  const styled = useMemo(\n    () =>\n      (position\n        ? {\n            ...style,\n            visibility: 'visible',\n            position: 'fixed',\n            left: position[0],\n            top: position[1],\n            transform: `translate(-50%,-50%) scale(${scale})`,\n            zIndex: 1,\n          }\n        : style) as React.CSSProperties,\n    [position, scale, style]\n  )\n  return useMemo(\n    () => (\n      <>\n        {position && <PreBox {...{ paneWithPreBoxRef, position }} />}\n        <div {...bind()} ref={targetRef} style={styled} className={className}>\n          {children}\n        </div>\n      </>\n    ),\n    [bind, children, className, position, styled, targetRef]\n  )\n}\n\nfunction useFn({\n  name,\n  children: childrenFn,\n  style: styleFn,\n  className: classNameFn,\n}: DraggableTitleProps) {\n  const checkMoving = useMovingChecker()\n  const isMoving = checkMoving(name)\n\n  const style = useMemo(() => orFn(styleFn, isMoving), [isMoving, styleFn])\n  const children = useMemo(() => orFn(childrenFn, isMoving), [\n    childrenFn,\n    isMoving,\n  ])\n  const className = useMemo(() => orFn(classNameFn, isMoving), [\n    classNameFn,\n    isMoving,\n  ])\n  return { style, children, className }\n}\n\nexport const DraggableTitle = memo(DraggableTitleInner)\nexport * from './typings'\nexport * from './hook/useMovingChecker'\n","import React, { createContext, memo, useMemo } from 'react'\nimport { TabBarAction, TabBarProps } from '../../..'\nimport { DraggableTitle, useMovingChecker } from '../../../DraggableTitle'\nimport style from './style.module.css'\n\nexport type TabBarPropsWithAction = TabBarProps & { action: TabBarAction }\n\nconst TabBarInner: React.FC<TabBarPropsWithAction> = ({\n  tabs,\n  onTab,\n  action,\n}) => {\n  const checkTabMoving = useMovingChecker()\n\n  return useMemo(\n    () => (\n      <div className={style.tabBar}>\n        {tabs.map((tab, i) => (\n          <DraggableTitle\n            className={(isMoving) => (isMoving ? style.tabMoving : style.tab)}\n            name={tab}\n            key={tab}\n          >\n            <div\n              className={i === onTab ? style.tabInner : style.tabInnerOff}\n              onClick={() => action.switchTab(i)}\n            >\n              <div className={style.tabTitle}>{tab}</div>\n              {!checkTabMoving(tabs[i]) && (\n                <div className={style.off} onClick={() => action.closeTab(i)}>\n                  ×\n                </div>\n              )}\n            </div>\n          </DraggableTitle>\n        ))}\n      </div>\n    ),\n    [action, checkTabMoving, onTab, tabs]\n  )\n}\nexport type TabsBarPosition = 'left' | 'right' | 'top' | 'bottom'\nexport type TabsBarConfig = {\n  render: React.FC<TabBarPropsWithAction>\n  thickness: number | string\n  position: TabsBarPosition\n}\n\nexport const DefaultTabBar = memo(TabBarInner)\nexport const defaultTabsBarConfig: TabsBarConfig = {\n  render: DefaultTabBar,\n  thickness: 24,\n  position: 'top',\n}\nexport const TabsBarContext = createContext<TabsBarConfig>(defaultTabsBarConfig)\n","import { CSSProperties, createContext, ReactChild } from 'react'\nimport style from './style.module.css'\n\nexport type StretchBarConfig = {\n  style?: ((isRow: boolean) => CSSProperties) | CSSProperties\n  className?: ((isRow: boolean) => string) | string\n  child?: ((isRow: boolean) => ReactChild) | ReactChild\n  /** **millisecond**, Controls the minimum Trigger Period of the Stretch Bar */\n  throttle?: number\n}\n\nexport const defaultStretchBar: StretchBarConfig = {\n  className: (isRow) => (isRow ? style.rowBar : style.colBar),\n}\n\nexport const StretchBarConfigContext = createContext<StretchBarConfig>(\n  defaultStretchBar\n)\n","import { CSSProperties, createContext, ReactChild } from 'react'\nimport { Into } from '../../..'\nimport style from './style.module.css'\n\nexport type PreBoxTarget = 'leaf' | 'branch' | 'tag' | null\n\nexport type PreBoxConfig = {\n  style?: ((into: Into, target: PreBoxTarget) => CSSProperties) | CSSProperties\n  className?: ((into: Into, target: PreBoxTarget) => string) | string\n  child?: ((into: Into, target: PreBoxTarget) => ReactChild) | ReactChild\n  /** **millisecond**, Control PreBox calculation frequency */\n  throttle?: number\n}\n\nexport const defaultPreBox: PreBoxConfig = {\n  throttle: 66,\n  className: (_, target) => {\n    switch (target) {\n      case 'branch':\n        return style.preBranch\n      case null:\n        return style.noPreBox\n      default:\n        return style.preBox\n    }\n  },\n}\n\nexport const PreBoxConfigContext = createContext<PreBoxConfig>(defaultPreBox)\n","import { createContext } from 'react'\nimport { TilePane } from '../../..'\n\nexport const TitlePanesContext = createContext<TilePane[]>([])\nexport * from './TabBar'\nexport * from './StretchBar'\nexport * from './PreBox'\n","export * from './tilePane'\n","import { useCallback, useContext } from 'react'\nimport { MovingTabsContext } from '../../..'\nimport { PaneName } from '../../../..'\n\nexport function useMovingChecker() {\n  const tabs = useContext(MovingTabsContext)\n  const isMoving = useCallback(\n    (name: PaneName) => tabs.map((tab) => tab.name).includes(name),\n    [tabs]\n  )\n  return isMoving\n}\n","export * from './TileNode'\nexport * from './StretchBar'\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../..'\n\nexport function isTileLeaf(\n  node: TileLeafSubstance | TileBranchSubstance | TileLeaf | TileBranch\n): node is TileLeafSubstance | TileLeaf {\n  const { children = '0' } = node\n  if (children instanceof Array) {\n    return isTilePaneNames(children)\n  }\n  return true\n}\n\nexport function isTilePaneNames(\n  list:\n    | PaneName[]\n    | (TileBranchSubstance | TileLeafSubstance)[]\n    | (TileLeaf | TileBranch)[]\n    | TileLeafSubstance[]\n    | TileBranchSubstance[]\n    | TileLeaf[]\n    | TileBranch[]\n): list is PaneName[] {\n  return !(list[0] instanceof Object)\n}\n","import { TileBranch, TileBranchSubstance } from '..'\n\nexport function createTileBranch(sub: TileBranchSubstance) {\n  const { isRow, children, id, grow } = sub\n  return new TileBranch(isRow, children, id, null, grow, undefined)\n}\n","const ref = { n: 0 }\nexport function increasingID() {\n  return (ref.n++).toString(36)\n}\n","import { useCallback, useEffect, useState, useContext } from 'react'\nimport { MousePositionContext } from '../..'\nexport type Vector2 = [number, number]\n\nexport function useMouseXY(enable = true) {\n  const [position, setPosition] = useState<Vector2>([0, 0])\n\n  const mousemove = useCallback(\n    (e: MouseEvent) => {\n      enable && setPosition([e.clientX, e.clientY])\n    },\n    [enable]\n  )\n\n  useEffect(() => {\n    window.addEventListener('mousemove', mousemove)\n    return () => {\n      window.removeEventListener('mousemove', mousemove)\n    }\n  }, [mousemove])\n\n  return position\n}\n\nexport interface UseMouseDragOption {\n  onStart?: () => void\n  onEnd?: () => void\n  threshold?: number\n}\n\nexport function useMouseDrag({\n  threshold = 8,\n  onEnd,\n  onStart,\n}: UseMouseDragOption) {\n  const mouseXY = useContext(MousePositionContext)\n  const [mouseDownXY, setMouseDownXY] = useState<Vector2>()\n  const [isDragging, toggleDragging] = useState(false)\n\n  const onMouseDown = useCallback<\n    React.MouseEventHandler<HTMLDivElement>\n  >(() => {\n    setMouseDownXY(mouseXY)\n  }, [mouseXY])\n\n  const onMouseMove = useCallback<\n    React.MouseEventHandler<HTMLDivElement>\n  >(() => {\n    if (\n      !isDragging &&\n      mouseDownXY &&\n      biggerThanThreshold(mouseXY, mouseDownXY, threshold)\n    ) {\n      toggleDragging(true)\n      onStart && onStart()\n    }\n  }, [isDragging, mouseDownXY, mouseXY, onStart, threshold])\n\n  const onMouseUp = useCallback<React.MouseEventHandler<HTMLDivElement>>(() => {\n    setMouseDownXY(undefined)\n    toggleDragging(false)\n    onEnd && onEnd()\n  }, [onEnd])\n\n  const onMouseLeave = useCallback(() => {\n    setMouseDownXY(undefined)\n  }, [])\n  const bind = { onMouseDown, onMouseMove, onMouseUp, onMouseLeave }\n  return { bind, isDragging }\n}\n\nfunction biggerThanThreshold(\n  [x1, y1]: Vector2,\n  [x2, y2]: Vector2,\n  threshold: number\n) {\n  return Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2) > Math.pow(threshold, 2)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preBox\":\"style_preBox__3P7Tr\",\"preBranch\":\"style_preBranch__3-_78\",\"noPreBox\":\"style_noPreBox__2_pPL\"};","import { calcChildGrows, calcChildRects } from '.'\nimport {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../../util'\nimport { isTileLeaf } from '../helper'\n\nexport function leafSetChildren(this: TileLeaf, children: PaneName[]) {\n  this.children = children.filter(\n    (child, i) => children.findIndex((it) => it === child) === i\n  )\n}\n\nexport function branchSetChildren(\n  this: TileBranch,\n  children: (TileBranchSubstance | TileLeafSubstance)[]\n) {\n  const grows = calcChildGrows(children)\n  const rect = calcChildRects(this, grows)\n  this.children = children\n    .filter((child, i) => children.findIndex((it) => it === child) === i)\n    .map((it, i) =>\n      isTileLeaf(it)\n        ? new TileLeaf(\n            it.onTab,\n            it.children instanceof Array ? it.children : [it.children],\n            it.id,\n            this,\n            grows[i],\n            rect[i]\n          )\n        : new TileBranch(it.isRow, it.children, it.id, this, grows[i], rect[i])\n    )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowBar\":\"style_rowBar__1yrAO\",\"colBar\":\"style_colBar__2UPHu\"};","import {\n  TileBranch,\n  TileLeaf,\n  StretchBarEntity,\n  isTilePaneNames,\n  isTileLeaf,\n} from '..'\n\nexport function unfold(node: TileBranch) {\n  const leaves: TileLeaf[] = []\n  const branches = [node]\n  const stretchBars: StretchBarEntity[] = []\n  unfold(node)\n  function unfold(pane: TileBranch) {\n    const { children } = pane\n    !isTilePaneNames(children) &&\n      (children as (TileBranch | TileLeaf)[]).forEach((p, i) => {\n        if (!isTileLeaf(p)) {\n          unfold(p)\n          branches.push(p)\n        } else {\n          leaves.push(p)\n        }\n        const prevPane = children[i - 1]\n        if (!prevPane) return\n        const bar = new StretchBarEntity(pane, prevPane, p)\n        stretchBars.push(bar)\n      })\n  }\n  return {\n    leaves,\n    branches,\n    stretchBars,\n  }\n}\n","import { ReactChild } from 'react'\nimport { TileNodeID, TilePane } from '..'\n\nexport function createTitlePanes<T extends Record<TileNodeID, ReactChild>>(\n  obj: T\n): [TilePane[], Record<keyof T, keyof T>] {\n  const map = {} as Record<TileNodeID, keyof T>\n  const list: TilePane[] = []\n  Object.keys(obj).forEach((key) => {\n    map[key] = key\n    list.push({\n      name: key,\n      child: obj[key],\n    })\n  })\n  return [list, map as Record<keyof T, keyof T>]\n}\n","export function removeInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1)\n  return newArr\n}\n\nexport function replaceInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T,\n  newOne: T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1, newOne)\n  return newArr\n}\n","import { createContext, Dispatch } from 'react'\nimport useMeasure, { RectReadOnly } from 'react-use-measure'\nimport { TileStoreAction } from '..'\nimport {\n  MovingTabAction,\n  MovingTab,\n  StretchBarEntity,\n  TileBranch,\n  TileLeaf,\n} from '../../..'\nimport { Vector2 } from '../hook'\n\nexport const TileDispatchContext = createContext<Dispatch<TileStoreAction>>(\n  (s) => s\n)\nexport const TileBranchesContext = createContext<TileBranch[]>([])\nexport const TileLeavesContext = createContext<TileLeaf[]>([])\nexport const StretchBarsContext = createContext<StretchBarEntity[]>([])\n\nexport const MovingTabsContext = createContext<MovingTab[]>([])\nexport const MovingTabsDispatchContext = createContext<\n  React.Dispatch<MovingTabAction>\n>((s) => s)\n\nexport const ContainerRefContext = createContext<\n  ReturnType<typeof useMeasure>[0]\n>(() => null)\n\nconst defaultRect: RectReadOnly = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n}\nexport const ContainerRectContext = createContext(defaultRect)\nexport const MousePositionContext = createContext<Vector2>([0, 0])\n","import React, { memo, useMemo } from 'react'\nimport { TilePaneWithRect } from '../../../../../..'\nimport { useChild, useStyle } from './hook'\n\nexport interface TilePaneProps {\n  pane: TilePaneWithRect\n}\nconst TilePaneInner: React.FC<TilePaneProps> = ({ pane }) => {\n  const child = useChild(pane.name)\n  const style = useStyle(pane.rect)\n  return useMemo(() => <div style={style}>{child}</div>, [child, style])\n}\nexport const TilePane = memo(TilePaneInner)\n","import { useContext, useCallback, useMemo } from 'react'\nimport { TitlePanesContext } from '../../../../../..'\nimport { PaneName } from '../../../../../../..'\n\nexport function useChild(id: PaneName) {\n  const tilePanes = useContext(TitlePanesContext)\n\n  const findChildPane = useCallback(\n    (id: PaneName) => {\n      const pane = tilePanes.find((it) => it.name === id)\n      return pane?.child\n    },\n    [tilePanes]\n  )\n  const child = useMemo(() => findChildPane(id), [findChildPane, id])\n  return child\n}\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssCalcLength,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\n\nexport function useStyle(rect: TileNodeRect | null): CSSProperties {\n  const tabBar = useContext(TabsBarContext)\n  const { position } = tabBar\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(tabBar.thickness), [\n    tabBar.thickness,\n  ])\n  return rect\n    ? {\n        position: 'absolute',\n        height: isVertical\n          ? toCssCalcLength(rect.height, thickness, '-')\n          : toCssLength(rect.height),\n        width: isVertical\n          ? toCssLength(rect.width)\n          : toCssCalcLength(rect.width, thickness, '-'),\n        top:\n          isVertical && !isAfter\n            ? toCssCalcLength(rect.top, thickness, '+')\n            : toCssLength(rect.top),\n        left:\n          !isVertical && !isAfter\n            ? toCssCalcLength(rect.left, thickness, '+')\n            : toCssLength(rect.left),\n      }\n    : {\n        display: 'none',\n      }\n}\n","import React, { memo, useMemo } from 'react'\nimport { usePanes } from './hook'\nimport { TilePane } from './components'\n\nconst TilePanesInner: React.FC = () => {\n  const panes = usePanes()\n  return useMemo(\n    () => (\n      <>\n        {panes.map((pane) => (\n          <TilePane pane={pane} key={pane.name} />\n        ))}\n      </>\n    ),\n    [panes]\n  )\n}\n\nexport const TilePanes = memo(TilePanesInner)\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../../..'\nimport { TilePaneWithRect } from '../../../../../..'\n\nexport function usePanes() {\n  const movingTabs = useContext(MovingTabsContext)\n  const leaves = useContext(TileLeavesContext)\n\n  const panes: TilePaneWithRect[] = useMemo(() => {\n    const panes: TilePaneWithRect[] = movingTabs.map(({ name }) => ({\n      name,\n      rect: null,\n    }))\n    leaves.forEach((leaf) => {\n      panes.push(\n        ...leaf.children.map((name, i) => ({\n          name,\n          rect: leaf.onTab === i ? leaf.rect : null,\n        }))\n      )\n    })\n    return panes\n  }, [leaves, movingTabs])\n  return panes\n}\n","import React, { memo, useCallback, useContext, useMemo } from 'react'\nimport { TabsBarContext, TileDispatchContext } from '../../../../..'\nimport { PaneName, TileLeaf } from '../../../../../..'\nimport { useStyle } from './hook'\nexport interface TabBarProps {\n  leaf: TileLeaf\n  onTab: number\n  tabs: PaneName[]\n}\n\nexport type TabBarMoreProps = TabBarProps & {\n  isHidden?: boolean\n}\n\nexport interface TabBarAction {\n  switchTab: (onTab: number) => void\n  closeTab: (index: number) => void\n}\n\nconst TabsBarInner: React.FC<TabBarMoreProps> = (props) => {\n  const { leaf, isHidden } = props\n  const tabBar = useContext(TabsBarContext)\n  const dispatch = useContext(TileDispatchContext)\n\n  const switchTab = useCallback(\n    (onTab: number) =>\n      dispatch({\n        leafToSwitchTab: {\n          leaf,\n          onTab,\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const closeTab = useCallback(\n    (index: number) =>\n      dispatch({\n        leafToCloseTab: {\n          leaf,\n          name: leaf.children[index],\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const action: TabBarAction = useMemo(() => ({ switchTab, closeTab }), [\n    closeTab,\n    switchTab,\n  ])\n\n  const { render: Render } = tabBar\n  const style = useStyle(leaf.rect, isHidden)\n  return useMemo(\n    () => (\n      <div style={style}>\n        <Render action={action} {...props} />\n      </div>\n    ),\n    [Render, action, props, style]\n  )\n}\n\nexport const TabsBar = memo(TabsBarInner)\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\nexport function useStyle(\n  rect: TileNodeRect,\n  isHidden?: boolean\n): CSSProperties {\n  const table = useContext(TabsBarContext)\n  const { position } = table\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(table.thickness), [table])\n  return {\n    visibility: isHidden ? 'hidden' : undefined,\n    position: 'absolute',\n    width: isVertical ? toCssLength(rect.width) : thickness,\n    height: isVertical ? thickness : toCssLength(rect.height),\n    top: isAfter ? undefined : toCssLength(rect.top),\n    bottom: isAfter ? toCssLength(1 - rect.top - rect.height) : undefined,\n    left: isAfter ? undefined : toCssLength(rect.left),\n    right: isAfter ? toCssLength(1 - rect.left - rect.width) : undefined,\n  }\n}\n","import React, { memo, useMemo } from 'react'\nimport { TabsBar } from './components'\nimport { useTabs } from './hook'\n\nconst TabsBarsInner: React.FC = () => {\n  const tabBars = useTabs()\n  return useMemo(\n    () => (\n      <>\n        {tabBars.map((tabBar) => (\n          <TabsBar key={tabBar.leaf.id} {...tabBar} />\n        ))}\n      </>\n    ),\n    [tabBars]\n  )\n}\n\nexport const TabsBars = memo(TabsBarsInner)\nexport * from './components'\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../..'\nimport { TabBarMoreProps } from '../components'\n\nexport function useTabs() {\n  const leaves = useContext(TileLeavesContext)\n  const movingTabs = useContext(MovingTabsContext)\n\n  const tabBarsProps = useMemo(() => {\n    const tabBarsProps: TabBarMoreProps[] = leaves.map((leaf) => ({\n      leaf,\n      onTab: leaf.onTab,\n      tabs: leaf.children.slice(),\n    }))\n    movingTabs.forEach((tab) => {\n      const tabBar = tabBarsProps.find((it) => it.leaf.id === tab.leaf.id)\n      if (tabBar) {\n        tabBar.tabs.push(tab.name)\n      } else {\n        tabBarsProps.push({\n          leaf: tab.leaf,\n          onTab: tab.leaf.onTab,\n          tabs: [tab.name],\n          isHidden: true,\n        })\n      }\n    })\n    return tabBarsProps\n  }, [leaves, movingTabs])\n  return tabBarsProps\n}\n","import { TileNodeRect } from '../../../../../..'\n\nexport function calcBarStyles(\n  { top, left, width, height }: TileNodeRect,\n  isRow?: boolean\n) {\n  return {\n    top: top * 100 + '%',\n    left: left * 100 + '%',\n    width: isRow ? undefined : width * 100 + '%',\n    height: isRow ? height * 100 + '%' : undefined,\n    transform: `translate${isRow ? 'X' : 'Y'}(-50%)`,\n  }\n}\n","import React, { useCallback, useContext, useMemo } from 'react'\nimport { useDrag } from 'react-use-gesture'\nimport { ContainerRectContext, StretchBarConfigContext } from '../../../..'\nimport { StretchBarEntity } from '../../../../..'\nimport { useThrottleMove } from './hook'\nimport { calcBarStyles } from './util'\n\nexport interface StretchBarProps {\n  bar: StretchBarEntity\n}\n\nconst StretchBarInner: React.FC<StretchBarProps> = ({ bar }) => {\n  const { isRow } = bar.parentPane\n  const containerRect = useContext(ContainerRectContext)\n  const { style, className, child } = useContext(StretchBarConfigContext)\n  const move = useThrottleMove(bar)\n\n  const styled = useMemo(\n    () => (typeof style === 'function' ? style(isRow) : style),\n    [isRow, style]\n  )\n\n  const classNamed = useMemo(\n    () => (typeof className === 'function' ? className(isRow) : className),\n    [className, isRow]\n  )\n  const children = useMemo(\n    () => (typeof child === 'function' ? child(isRow) : child),\n    [child, isRow]\n  )\n\n  const moveBar = useCallback(\n    (mx: number, my: number) => {\n      const distance = isRow\n        ? mx / containerRect.width\n        : my / containerRect.height\n      move(distance)\n    },\n    [containerRect.height, containerRect.width, isRow, move]\n  )\n\n  const bind = useDrag(\n    ({ down, delta: [mx, my] }) => {\n      down && moveBar(mx, my)\n    },\n    { enabled: true }\n  )\n  const { top, left, width, height } = bar.nextPane.rect\n\n  return useMemo(\n    () => (\n      <div\n        {...bind()}\n        className={classNamed}\n        style={{\n          ...styled,\n          position: 'absolute',\n          ...calcBarStyles({ top, left, width, height }, isRow),\n        }}\n      >\n        {children}\n      </div>\n    ),\n    [bind, children, classNamed, height, isRow, left, styled, top, width]\n  )\n}\n\nexport const StretchBar = React.memo(StretchBarInner)\n","import { useCallback, useContext, useRef } from 'react'\nimport {\n  StretchBarConfigContext,\n  StretchBarEntity,\n  TileDispatchContext,\n} from '../../../../../..'\n\nexport function useThrottleMove(bar: StretchBarEntity) {\n  const { throttle } = useContext(StretchBarConfigContext)\n  const timerRef = useRef<number>()\n  const accumulation = useRef<number>(0)\n\n  const dispatch = useContext(TileDispatchContext)\n\n  const move = useCallback(\n    (distance: number) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, throttle)\n        dispatch({\n          barToMove: {\n            bar,\n            distance: accumulation.current ?? distance,\n          },\n        })\n        accumulation.current = distance\n      } else {\n        accumulation.current += distance\n      }\n    },\n    [bar, dispatch, throttle]\n  )\n  return move\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { StretchBarsContext } from '../../..'\nimport { StretchBar } from './StretchBar'\n\nconst StretchBarsInner: React.FC = () => {\n  const bars = useContext(StretchBarsContext)\n  return useMemo(\n    () => (\n      <>\n        {bars.map((bar) => (\n          <StretchBar bar={bar} key={bar.nextPane.id} />\n        ))}\n      </>\n    ),\n    [bars]\n  )\n}\n\nexport const StretchBars = memo(StretchBarsInner)\n","import { TabsBarPosition } from '../..'\n\nexport function toCssLength(length: number) {\n  return `${length * 100}%`\n}\n\nexport function toCssCalcLength(\n  percent: number,\n  offset: string,\n  mode: '+' | '-'\n) {\n  return `calc(${toCssLength(percent)} ${mode} ${offset})`\n}\n\nexport const toQuadrant = (position: TabsBarPosition) => [\n  (['top', 'bottom'] as TabsBarPosition[]).includes(position),\n  (['right', 'bottom'] as TabsBarPosition[]).includes(position),\n]\n\nexport const completeUnit = (len: number | string) =>\n  typeof len === 'number' ? `${len}px` : len\n","import React, { memo, useContext, useMemo } from 'react'\nimport { ContainerRefContext, MovingTabsContext } from '..'\nimport { StretchBars, TabsBars, TilePanes } from './components'\n\nexport interface TileContainerProps {\n  style?: React.CSSProperties\n  className?: string\n}\n\nconst TileContainerInner: React.FC<TileContainerProps> = ({\n  style = { width: '100%', height: '100%' },\n  className,\n}) => {\n  const targetRef = useContext(ContainerRefContext)\n  const movingTabs = useContext(MovingTabsContext)\n  return useMemo(\n    () => (\n      <div\n        ref={targetRef}\n        className={className}\n        style={{\n          ...style,\n          position: 'relative',\n          userSelect: movingTabs.length ? 'none' : 'auto',\n        }}\n      >\n        <TabsBars />\n        <TilePanes />\n        <StretchBars />\n      </div>\n    ),\n    [className, movingTabs.length, style, targetRef]\n  )\n}\n\nexport const TileContainer = memo(TileContainerInner)\nexport * from './utils'\nexport * from './components'\n","import { TileStore } from '../..'\nimport {\n  MovingTab,\n  removeInArray,\n  TileBranch,\n  TileLeaf,\n  unfold,\n} from '../../../..'\n\nexport function startMovingTab(\n  { movingTabs, leaves, branches, rootNode }: TileStore,\n  tabToStopMoving: MovingTab,\n  notMoving?: boolean\n): TileStore {\n  const newMovingTabs = movingTabs.slice()\n  const { name } = tabToStopMoving\n  const existedTab = newMovingTabs.find((it) => (it.name = name))\n  if (!notMoving && !existedTab) {\n    newMovingTabs.push(tabToStopMoving)\n  }\n\n  const leaf = leaves.find((l) => l.children.includes(name))\n  if (leaf) {\n    const newChildren = removeInArray(leaf.children, name)\n    leaf.onTab = 0\n    leaf.setChildren(newChildren)\n    if (newChildren.length === 0) {\n      removeNode(branches, leaf)\n    }\n  }\n\n  const nodes = unfold(rootNode)\n  return {\n    movingTabs: newMovingTabs,\n    rootNode,\n    ...nodes,\n  }\n}\n\nfunction removeNode(branches: TileBranch[], node: TileLeaf | TileBranch) {\n  const parent = branches.find((it) => it === node.parent)\n  if (parent) {\n    const newChildren = removeInArray(\n      parent.children,\n      (it) => it.id === node.id\n    )\n    if (newChildren.length === 0) {\n      removeNode(branches, parent)\n    } else {\n      parent.setChildren(newChildren)\n    }\n  }\n}\n","import { TileStore } from '../..'\nimport { Into, PaneWithPreBox } from '../../..'\nimport {\n  PaneName,\n  removeInArray,\n  unfold,\n  isTileLeaf,\n  TileBranch,\n  TileLeaf,\n  TileLeafSubstance,\n  TileBranchSubstance,\n  replaceInArray,\n} from '../../../..'\n\nexport type TabToStopMoving = {\n  pane: PaneName\n  preBox?: PaneWithPreBox\n}\n\nexport function stopMovingTab(\n  { movingTabs, ...rest }: TileStore,\n  { pane, preBox }: TabToStopMoving\n): TileStore {\n  const newMovingTabs = removeInArray(movingTabs, (it) => (it.name = pane))\n  if (preBox) {\n    const { rootNode } = rest\n    insertPane(pane, preBox, rest)\n    const nodes = unfold(rootNode)\n    return { movingTabs: newMovingTabs, rootNode, ...nodes }\n  } else return { movingTabs: newMovingTabs, ...rest }\n}\n\nfunction insertPane(\n  pane: PaneName,\n  preBox: PaneWithPreBox,\n  nodes: Pick<TileStore, 'branches' | 'leaves'>\n) {\n  const { targetNode: node, into } = preBox\n  const { leaves, branches } = nodes\n  const isNext = ['right', 'bottom'].includes(into)\n  const isBrother = isSegment(node, into)\n  const isRow = ['right', 'left'].includes(into)\n\n  if (isTileLeaf(node)) {\n    const leaf = leaves.find((it) => it === node)\n    if (leaf) {\n      if (into === 'center') {\n        const newChildren = leaf.children.slice()\n        newChildren.push(pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = leaf.children.length - 1\n      } else {\n        isBrother\n          ? segment(node, pane, isNext)\n          : fission(node, pane, isNext, isRow)\n      }\n    }\n  } else {\n    const branch = branches.find((it) => it === node)\n    if (branch) {\n      fission(node, pane, isNext, isRow)\n    }\n  }\n}\n\n/** 分割 ——插入同级节点 */\nfunction segment(node: TileBranch | TileLeaf, pane: PaneName, isNext: boolean) {\n  const { parent } = node\n  if (!parent) return\n  const grow = node.grow / 2\n  const leaf: TileLeafSubstance = { grow, children: [pane] }\n  node.grow = grow\n  const indexInParent = parent.children.findIndex((it) => it === node)\n  const index = isNext ? indexInParent + 1 : indexInParent\n  const newNodes: (\n    | TileBranchSubstance\n    | TileLeafSubstance\n  )[] = parent.children.slice()\n  newNodes.splice(index, 0, leaf)\n  parent.setChildren(newNodes)\n}\n\n/** 分裂 ——插入子级节点*/\nfunction fission(\n  node: TileBranch | TileLeaf,\n  pane: PaneName,\n  isNext: boolean,\n  isRow: boolean\n) {\n  const { parent, grow } = node\n  if (!parent) {\n    const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n    const oldLeaf: TileBranchSubstance | TileLeafSubstance = isTileLeaf(node)\n      ? node.dehydrate()\n      : node.dehydrate()\n    if (!isTileLeaf(node)) {\n      node.isRow = isRow\n      node.setChildren(isNext ? [oldLeaf, newLeaf] : [newLeaf, oldLeaf])\n    }\n    return\n  }\n  const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n  const branch: TileBranchSubstance = {\n    grow,\n    isRow,\n    children: isNext ? [node, newLeaf] : [newLeaf, node],\n  }\n  const newNodes = replaceInArray<TileBranchSubstance | TileLeafSubstance>(\n    parent?.children,\n    node,\n    branch\n  )\n  parent.setChildren(newNodes)\n}\n\nfunction isSegment(node: TileBranch | TileLeaf, into: Into): boolean {\n  const isRow = node.parent?.isRow\n  const segmentInto: Into[] = isRow ? ['left', 'right'] : ['top', 'bottom']\n  return segmentInto.includes(into)\n}\n","import { createTileBranch, TileBranchSubstance, unfold } from '../../..'\n\nexport function initRootNode(rootNodeSub: TileBranchSubstance) {\n  const rootNode = createTileBranch(rootNodeSub)\n  const nodes = unfold(rootNode)\n  return { rootNode, ...nodes }\n}\n","import { TileStoreReducer } from '../..'\nimport { MovingTab, TileLeaf } from '../../..'\nimport { BarToMove, moveBar } from './moveBar'\nimport { startMovingTab, stopMovingTab, TabToStopMoving } from './MovingTab'\nimport { switchLeafTab } from './switchLeafTab'\n\nexport * from './initRootNode'\n\nexport type TileStoreAction = {\n  leafToSwitchTab?: {\n    leaf: TileLeaf\n    onTab: number\n  }\n  leafToCloseTab?: MovingTab\n  tabToStopMoving?: TabToStopMoving\n  tabToStartMoving?: MovingTab\n  barToMove?: BarToMove\n}\n\nexport const tileStoreReducer: TileStoreReducer = (\n  state,\n  {\n    leafToSwitchTab,\n    tabToStopMoving,\n    tabToStartMoving,\n    barToMove,\n    leafToCloseTab,\n  }\n) => {\n  if (leafToSwitchTab) return switchLeafTab(state, leafToSwitchTab)\n  if (leafToCloseTab) return startMovingTab(state, leafToCloseTab, true)\n  if (tabToStartMoving) return startMovingTab(state, tabToStartMoving)\n  if (tabToStopMoving) return stopMovingTab(state, tabToStopMoving)\n  if (barToMove) return moveBar(state, barToMove)\n  return state\n}\n","import { TileLeaf } from '../../..'\nimport { TileStore } from '../typings'\n\nexport function switchLeafTab(\n  state: TileStore,\n  switchLeafTab: { leaf: TileLeaf; onTab: number }\n) {\n  const { leaves, ...rest } = state\n  const newLeaves = leaves.slice()\n  const leaf = newLeaves.find((l) => l === switchLeafTab.leaf)\n  if (leaf) {\n    leaf.onTab = switchLeafTab.onTab\n  }\n  return { leaves: newLeaves, ...rest }\n}\n","import { StretchBarEntity, TileStore, unfold } from '../../..'\n\nexport type BarToMove = {\n  distance: number\n  bar: StretchBarEntity\n}\n\nexport function moveBar(\n  { rootNode, movingTabs }: TileStore,\n  barToMove: BarToMove\n): TileStore {\n  const { bar, distance } = barToMove\n  bar.move(distance)\n  const nodes = unfold(rootNode)\n  return { ...nodes, movingTabs, rootNode }\n}\n","import { StretchBarEntity } from '..'\n\n/**\n * @param {number} distance percentage in container\n * @return {boolean} Did the move succeed?\n */\nexport function move(this: StretchBarEntity, distance: number): boolean {\n  const lengthSum = this.parentPane.isRow\n    ? this.parentPane.rect.width\n    : this.parentPane.rect.height\n  const offset = distance / lengthSum\n  const previousPaneGrow = this.previousPane.grow + offset\n  const nextPaneGrow = this.nextPane.grow - offset\n  const isMoved = isValidGrow(previousPaneGrow, nextPaneGrow)\n  if (isMoved) {\n    this.previousPane.grow = previousPaneGrow\n    this.nextPane.grow = nextPaneGrow\n    this.parentPane.setChildren(this.parentPane.children)\n  }\n  return isMoved\n}\n\nfunction isValidGrow(growA: number, growB: number): boolean {\n  if (growA < 0.04 || growB < 0.04) return false\n  const growSum = growA + growB\n  if (growA > growSum || growB > growSum) return false\n  return true\n}\n","import { TileBranch, TileNode } from '..'\nimport { move } from './util'\n\nexport class StretchBarEntity {\n  constructor(\n    public parentPane: TileBranch,\n    public previousPane: TileNode,\n    public nextPane: TileNode\n  ) {}\n  rect = this.nextPane.rect\n  move = move\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { Vector2 } from 'react-use-gesture/dist/types'\nimport { RectReadOnly } from 'react-use-measure'\nimport {\n  ContainerRectContext,\n  PreBoxConfigContext,\n  PreBoxTarget,\n  TileBranchesContext,\n  TileLeavesContext,\n} from '../../..'\nimport { isTileLeaf, TileNodeRect } from '../../../../model'\nimport { useThrottleFn } from '../../hook'\nimport { PaneWithPreBox } from '../../typings'\nimport { calcPreBox } from '../../util'\n\nexport interface PreBoxProps {\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>\n  position: Vector2\n}\n\nconst PreBoxInner: React.FC<PreBoxProps> = ({\n  position,\n  paneWithPreBoxRef,\n}) => {\n  const containerRect = useContext(ContainerRectContext)\n  const branches = useContext(TileBranchesContext)\n  const leaves = useContext(TileLeavesContext)\n  const { throttle, style, className, child } = useContext(PreBoxConfigContext)\n\n  const innerPosition = useMemo(() => {\n    return [\n      (position[0] - containerRect.left) / containerRect.width,\n      (position[1] - containerRect.top) / containerRect.height,\n    ] as Vector2\n  }, [containerRect, position])\n\n  const calcLazyPreBox = useThrottleFn(calcPreBox, throttle)\n  const paneWithPreBox = useMemo(\n    () => calcLazyPreBox(branches, leaves, innerPosition),\n    [branches, calcLazyPreBox, innerPosition, leaves]\n  )\n  paneWithPreBoxRef.current = paneWithPreBox\n  return useMemo(() => {\n    const targetType = calcTargetType()\n    const into = paneWithPreBox?.into ?? 'center'\n    const styled = typeof style === 'function' ? style(into, targetType) : style\n    const classNamed =\n      typeof className === 'function' ? className(into, targetType) : className\n    const boxPosition = calcBoxPosition(paneWithPreBox, containerRect)\n    const children =\n      typeof child === 'function' ? child(into, targetType) : child\n\n    return (\n      <div\n        className={classNamed}\n        style={{\n          ...styled,\n          zIndex: 1,\n          visibility: 'visible',\n          position: 'fixed',\n          ...boxPosition,\n        }}\n      >\n        {children}\n      </div>\n    )\n\n    function calcTargetType(): PreBoxTarget {\n      if (!paneWithPreBox) return null\n      return isTileLeaf(paneWithPreBox?.targetNode ?? branches[0])\n        ? 'leaf'\n        : 'branch'\n    }\n  }, [branches, child, className, containerRect, paneWithPreBox, style])\n}\n\nconst proportion = 0.5\nexport const PreBox = memo(PreBoxInner)\n\nfunction calcBoxPosition(\n  paneWithPreBox: PaneWithPreBox | undefined,\n  containerRect: RectReadOnly\n): TileNodeRect {\n  if (!paneWithPreBox)\n    return {\n      top: containerRect.top,\n      left: containerRect.left,\n      height: containerRect.height,\n      width: containerRect.width,\n    }\n  const { targetNode, into } = paneWithPreBox\n  const { top, left, width, height } = targetNode.rect\n\n  switch (into) {\n    case 'center':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width,\n      }\n    case 'left':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'right':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left:\n          containerRect.left +\n          left * containerRect.width +\n          containerRect.width * width * (1 - proportion),\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'top':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    case 'bottom':\n      return {\n        top:\n          containerRect.top +\n          top * containerRect.height +\n          containerRect.height * height * (1 - proportion),\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n  }\n}\n","import React, { useState } from 'react'\nimport {\n  createTitlePanes,\n  DraggableTitle,\n  TileBranchSubstance,\n  TileContainer,\n  TileProvider,\n} from '../components'\nimport './App.css'\n\nfunction Arbutus() {\n  const [number, count] = useState(1)\n  return (\n    <div onClick={() => count((n) => n + 1)} className=\"pane\">\n      {number} 颗杨梅\n    </div>\n  )\n}\n\nfunction Apple() {\n  return <div className=\"pane\">苹果</div>\n}\n\nconst [nodeList, names] = createTitlePanes({\n  arbutus: <Arbutus />,\n  cherry: <div className=\"pane\">樱桃</div>,\n  apple: <Apple />,\n  banana: <div className=\"pane\">香蕉🍌</div>,\n  lemon: <div className=\"pane\">柠檬</div>,\n  mango: <div className=\"pane\">芒果</div>,\n  pomelo: <div className=\"pane\">柚子</div>,\n})\n\nconst rootPane: TileBranchSubstance = {\n  children: [\n    { children: [names.apple, names.cherry] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        { children: names.arbutus },\n        { children: names.lemon },\n        {\n          children: [\n            { children: names.mango, grow: 3 },\n            { children: names.pomelo },\n          ],\n        },\n      ],\n    },\n  ],\n}\n\nconst App: React.FC = () => {\n  return (\n    <TileProvider tilePanes={nodeList} rootNode={rootPane}>\n      <div className=\"App\">\n        <div style={{ height: 30 }} />\n        <div className=\"fence\">\n          <TileContainer />\n        </div>\n      </div>\n      <DraggableTitle name={names.banana}>拖动这个香蕉🍌</DraggableTitle>\n      <a href=\"https://xcfox.github.io/react-tile-pane/\">查看文档</a>\n    </TileProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport reportWebVitals from './common/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}