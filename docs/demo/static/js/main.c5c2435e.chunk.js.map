{"version":3,"sources":["App/demo/left-tab/style/index.module.css","components/tilePane/model/TileNode/util/dehydrate.ts","components/tilePane/model/TileNode/helper/isTileLeaf.ts","components/tilePane/util/unfold.ts","components/tilePane/util/createTilePanes.ts","components/tilePane/util/array.ts","components/tilePane/model/TileNode/helper/increasingID.ts","components/tilePane/model/TileNode/util/setChildren.ts","components/tilePane/model/TileNode/util/index.ts","components/tilePane/model/TileNode/index.ts","components/tilePane/model/StretchBar/util/index.ts","components/tilePane/model/StretchBar/index.ts","components/tilePane/view/DraggableTitle/components/PreBox/util/calcBoxPosition.ts","components/tilePane/view/DraggableTitle/components/PreBox/util/calcLeafWithTitleRect.ts","components/tilePane/view/DraggableTitle/components/PreBox/util/index.ts","components/tilePane/view/DraggableTitle/components/PreBox/hook/useCalcPreBox.ts","components/tilePane/view/DraggableTitle/hook/useThrottle/index.ts","components/tilePane/view/DraggableTitle/components/PreBox/index.tsx","components/tilePane/view/DraggableTitle/util/index.ts","components/tilePane/view/DraggableTitle/index.tsx","components/tilePane/view/DraggableTitle/hook/useDragAndPosition/index.ts","components/tilePane/view/Provider/config/TabBar/index.tsx","components/tilePane/view/DraggableTitle/hook/useMovingChecker/index.ts","components/tilePane/view/Provider/config/StretchBar/index.ts","components/tilePane/view/Provider/config/PreBox/index.ts","components/tilePane/view/Provider/config/Pane/index.ts","components/tilePane/view/Provider/config/index.ts","components/tilePane/view/Provider/controller/MovingTab/startMovingTab.ts","components/tilePane/view/Provider/controller/MovingTab/stopMovingTab.ts","components/tilePane/view/Provider/controller/initRootNode.ts","components/tilePane/model/TileNode/helper/createTileNode.ts","components/tilePane/view/Provider/controller/index.ts","components/tilePane/view/Provider/controller/switchLeafTab.ts","components/tilePane/view/Provider/controller/moveBar.ts","components/tilePane/view/Provider/data/TitleRects/index.tsx","components/tilePane/view/Provider/data/index.ts","components/tilePane/view/Provider/hook/useRootPane/index.ts","components/tilePane/view/Provider/index.tsx","components/tilePane/view/Container/components/TilePanes/components/TilePane/index.tsx","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useChild.ts","components/tilePane/view/Container/components/TilePanes/components/TilePane/hook/useStyle.ts","components/tilePane/view/Container/components/TilePanes/index.tsx","components/tilePane/view/Container/components/TilePanes/hook/usePanes/index.ts","components/tilePane/view/Container/components/TabsBars/components/TabsBar/index.tsx","components/tilePane/view/Container/components/TabsBars/components/TabsBar/hook/index.ts","components/tilePane/view/Container/components/TabsBars/index.tsx","components/tilePane/view/Container/components/TabsBars/hook/index.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/util/calcBarStyles.ts","components/tilePane/view/Container/components/StretchBars/StretchBar/index.tsx","components/tilePane/view/Container/components/StretchBars/StretchBar/hook/index.ts","components/tilePane/view/Container/components/StretchBars/index.tsx","components/tilePane/view/Container/utils/toCssLength.ts","components/tilePane/view/Container/index.tsx","App/demo/simple/index.tsx","App/demo/left-tab/style/index.ts","App/demo/left-tab/panes.tsx","App/demo/left-tab/tab-bar/index.tsx","App/demo/left-tab/index.tsx","components/tilePane/view/Provider/hook/useGetLeaf/index.ts","components/tilePane/view/Provider/hook/useMove/index.ts","App/App.tsx","common/reportWebVitals.ts","index.tsx"],"names":["module","exports","leafDehydrate","children","this","onTab","grow","branchDehydrate","isRow","map","it","isTileLeaf","dehydrate","node","Array","isTilePaneNames","list","Object","unfold","leaves","branches","stretchBars","pane","forEach","p","i","push","prevPane","bar","StretchBarEntity","createTilePanes","obj","keys","key","name","child","removeInArray","arr","one","newArr","slice","index","Function","findIndex","splice","replaceInArray","newOne","ref","n","increasingID","toString","leafSetChildren","filter","branchSetChildren","grows","growsSolid","c","growSum","reduce","s","calcChildGrows","rect","parent","top","left","width","height","childLeft","childTop","calcChildRects","TileLeaf","id","TileBranch","TileNode","rest","setChildren","move","distance","offset","parentPane","previousPaneGrow","previousPane","nextPaneGrow","nextPane","isMoved","growA","growB","isValidGrow","thickness","calcLeafWithTitleRect","titleRects","leafWithTitleRects","leaf","title","branchProportion","leafProportion","calcPreBox","innerPosition","config","x","y","titleRect","isInPane","isEnd","tab","target","into","hasNext","isReverse","branch","position","useCalcPreBox","throttle","containerRect","useContext","ContainerRectContext","TileBranchesContext","TileLeavesContext","preBoxInTabBar","TabsBarContext","preBox","TitleRectsContext","useMemo","absolute2Relative","calcLazyPreBox","fn","ms","result","useRef","timerRef","throttledFn","useCallback","current","window","setTimeout","clearTimeout","undefined","useThrottleFn","paneWithPreBox","PreBoxInner","paneWithPreBoxRef","PreBoxConfigContext","style","className","styled","classNamed","boxPosition","toInContainer","isNext","currentTitle","find","intoLeft","intoRight","intoTop","intoBottom","intoPrev","intoNext","calcTitleBoxPosition","proportion","calcBoxPosition","zIndex","visibility","PreBox","memo","orFn","orFunc","args","DraggableTitleInner","props","LeafContext","dispatch","TileDispatchContext","useState","setPosition","isDragging","bind","useGesture","onDrag","down","xy","velocity","onDragStart","tabToStartMoving","onDragEnd","tabToStopMoving","drag","threshold","useDragAndPosition","isMoving","childrenFn","styleFn","classNameFn","useFn","useMeasure","scroll","targetRef","setTitleRects","SetTitleRectsContext","useEffect","transform","userSelect","DraggableTitle","TabBarInner","tabs","action","checkTabMoving","MovingTabsContext","includes","useMovingChecker","onClick","switchTab","closeTab","defaultTabsBarConfig","render","createContext","defaultStretchBar","cursor","StretchBarConfigContext","defaultPreBox","defaultPane","PaneContext","TitlePanesContext","startMovingTab","notMoving","movingTabs","rootNode","newMovingTabs","existedTab","leafIndex","l","tabIndex","newChildren","length","removeNode","nodes","stopMovingTab","next","isBrother","isSegment","row","indexInParent","newNodes","segment","fission","insertPane","newLeaf","oldLeaf","initRootNode","rootNodeSub","sub","createTileBranch","tileStoreReducer","state","leafToSwitchTab","barToMove","leafToCloseTab","switchLeafTab","newLeaves","moveBar","TitleRectsProvider","useReducer","right","bottom","Provider","value","StretchBarsContext","ContainerRefContext","defaultRect","useGetRootNode","TileProviderInner","tilePanes","tabBar","stretchBar","tileStoreDispatch","childrenMemo","TileProvider","TilePaneInner","findChildPane","useChild","toQuadrant","isVertical","isAfter","completeUnit","toCssCalcLength","toCssLength","display","useStyle","TilePane","TilePanesInner","panes","usePanes","TilePanes","TabsBarInner","isHidden","Render","table","TabsBar","TabsBarsInner","tabBars","tabBarsProps","onTabs","useTabs","TabsBars","calcBarStyles","StretchBarInner","accumulation","useThrottleMove","mx","my","useDrag","delta","enabled","positionToOffset","StretchBar","React","StretchBarsInner","bars","StretchBars","percent","mode","len","TileContainerInner","TileContainer","localStorageKey","Arbutus","number","count","Apple","arbutus","cherry","apple","banana","lemon","mango","pomelo","nodeList","names","rootPane","SaveLayout","getRootNode","localStorage","setItem","JSON","stringify","SimpleDemo","localRoot","getItem","root","parse","href","color","size","full","flex","center","justifyContent","alignItems","around","between","columnBetween","flexDirection","styles","container","background","tabTitle","marginBottom","tabTitleOn","closeButton","fontSize","icons","pineapple","grape","kiwifruit","tabBarConfig","PaneIcon","getLeaf","useGetLeaf","useMovePane","isShowing","padding","marginLeft","marginRight","borderRadius","LeftTabDemo","css","marginTop","AutoSaveLayout","demos","App","demo","setDemo","document","body","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c5c2435e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stretchBar\":\"style_stretchBar__2lrcx\"};","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n  isTileLeaf,\n} from '..'\n\nexport function leafDehydrate(this: TileLeaf): TileLeafSubstance {\n  const { children, onTab, grow } = this\n  return { children, onTab, grow }\n}\n\nexport function branchDehydrate(this: TileBranch): TileBranchSubstance {\n  const { children, isRow, grow } = this\n\n  const childrenDehydrated = children.map((it) =>\n    isTileLeaf(it) ? it.dehydrate() : it.dehydrate()\n  )\n  return { children: childrenDehydrated, isRow, grow }\n}\n","import {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../..'\n\nexport function isTileLeaf(\n  node: TileLeafSubstance | TileBranchSubstance | TileLeaf | TileBranch\n): node is TileLeafSubstance | TileLeaf {\n  const { children = '0' } = node\n  if (children instanceof Array) {\n    return isTilePaneNames(children)\n  }\n  return true\n}\n\nexport function isTilePaneNames(\n  list:\n    | PaneName[]\n    | (TileBranchSubstance | TileLeafSubstance)[]\n    | (TileLeaf | TileBranch)[]\n    | TileLeafSubstance[]\n    | TileBranchSubstance[]\n    | TileLeaf[]\n    | TileBranch[]\n): list is PaneName[] {\n  return !(list[0] instanceof Object)\n}\n","import {\n  TileBranch,\n  TileLeaf,\n  StretchBarEntity,\n  isTilePaneNames,\n  isTileLeaf,\n} from '..'\n\nexport function unfold(node: TileBranch) {\n  const leaves: TileLeaf[] = []\n  const branches = [node]\n  const stretchBars: StretchBarEntity[] = []\n  unfold(node)\n  function unfold(pane: TileBranch) {\n    const { children } = pane\n    !isTilePaneNames(children) &&\n      (children as (TileBranch | TileLeaf)[]).forEach((p, i) => {\n        if (!isTileLeaf(p)) {\n          unfold(p)\n          branches.push(p)\n        } else {\n          leaves.push(p)\n        }\n        const prevPane = children[i - 1]\n        if (!prevPane) return\n        const bar = new StretchBarEntity(pane, prevPane, p)\n        stretchBars.push(bar)\n      })\n  }\n  return {\n    leaves,\n    branches,\n    stretchBars,\n  }\n}\n","import { ReactChild } from 'react'\nimport { PaneName, TilePane } from '..'\n\nexport function createTilePanes<T extends Record<PaneName, ReactChild>>(\n  obj: T\n): [TilePane[], Record<keyof T, keyof T>] {\n  const map = {} as Record<PaneName, keyof T>\n  const list: TilePane[] = []\n  Object.keys(obj).forEach((key) => {\n    map[key] = key\n    list.push({\n      name: key,\n      child: obj[key],\n    })\n  })\n  return [list, map as Record<keyof T, keyof T>]\n}\n","export function removeInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1)\n  return newArr\n}\n\nexport function replaceInArray<T>(\n  arr: T[],\n  one: ((value: T, index: number, obj: T[]) => unknown) | T,\n  newOne: T\n) {\n  const newArr = arr.slice()\n  const index =\n    one instanceof Function\n      ? arr.findIndex(one)\n      : arr.findIndex((it) => it === one)\n  newArr.splice(index, 1, newOne)\n  return newArr\n}\n","const ref = { n: 0 }\nexport function increasingID() {\n  return (ref.n++).toString(36)\n}\n","import { calcChildGrows, calcChildRects } from '.'\nimport {\n  TileBranch,\n  TileBranchSubstance,\n  TileLeaf,\n  TileLeafSubstance,\n} from '..'\nimport { PaneName } from '../../../util'\nimport { isTileLeaf } from '../helper'\n\nexport function leafSetChildren(this: TileLeaf, children: PaneName[]) {\n  this.children = children.filter(\n    (child, i) => children.findIndex((it) => it === child) === i\n  )\n}\n\nexport function branchSetChildren(\n  this: TileBranch,\n  children: (TileBranchSubstance | TileLeafSubstance)[]\n) {\n  const grows = calcChildGrows(children)\n  const rect = calcChildRects(this, grows)\n  this.children = children\n    .filter((child, i) => children.findIndex((it) => it === child) === i)\n    .map((it, i) =>\n      isTileLeaf(it)\n        ? new TileLeaf(\n            it.onTab,\n            it.children instanceof Array ? it.children : [it.children],\n            it.id,\n            this,\n            grows[i],\n            rect[i]\n          )\n        : new TileBranch(it.isRow, it.children, it.id, this, grows[i], rect[i])\n    )\n}\n","import { TileBranch, TileNodeRect } from '..'\n\nexport * from './dehydrate'\n\nexport function calcChildGrows(children: { grow?: number }[]) {\n  const growsSolid = children.map((c) => c.grow ?? 1)\n  const growSum = growsSolid.reduce((s, n) => (s += n), 0) // 部分值\n  const grows = growsSolid.map((c) => c / growSum) // 相对值\n  return grows\n}\n\nexport function calcChildRects(\n  parent: TileBranch,\n  grows: number[]\n): TileNodeRect[] {\n  const { isRow, rect } = parent\n  const { top, left, width, height } = rect\n  if (isRow) {\n    const childLeft = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 left\n        if (i > 0) arr.push(arr[i - 1] + width * grows[i - 1])\n        return arr\n      },\n      [left]\n    )\n    return grows.map((n, i) => ({\n      top,\n      height,\n      width: n * width,\n      left: childLeft[i],\n    }))\n  } else {\n    const childTop = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 top\n        if (i > 0) arr.push(arr[i - 1] + height * grows[i - 1])\n        return arr\n      },\n      [top]\n    )\n    return grows.map((n, i) => ({\n      left,\n      width,\n      height: n * height,\n      top: childTop[i],\n    }))\n  }\n}\n","import { increasingID, PaneName } from '../..'\nimport {\n  TileBranchSubstance,\n  TileLeafSubstance,\n  TileNodeConstructor,\n  TileNodeRect,\n} from './typings'\nimport { branchDehydrate, leafDehydrate } from './util'\nimport { branchSetChildren, leafSetChildren } from './util/setChildren'\n\nexport class TileNode {\n  constructor(\n    public readonly id: string = increasingID(),\n    public readonly parent: TileBranch | null = null,\n    public grow: number = 1,\n    public rect: TileNodeRect = {\n      top: 0,\n      left: 0,\n      width: 1,\n      height: 1,\n    }\n  ) {}\n}\n\nexport class TileLeaf extends TileNode {\n  constructor(\n    public onTab: number = 0,\n    public children: PaneName[] = [],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n  }\n  public setChildren = leafSetChildren\n  public dehydrate = leafDehydrate\n}\n\nexport class TileBranch extends TileNode {\n  public children!: (TileBranch | TileLeaf)[]\n  constructor(\n    public isRow: boolean = false,\n    children: (TileBranchSubstance | TileLeafSubstance)[],\n    ...rest: TileNodeConstructor\n  ) {\n    super(...rest)\n    this.setChildren(children)\n  }\n\n  public setChildren = branchSetChildren\n  public dehydrate = branchDehydrate\n}\n\nexport * from './typings'\nexport * from './helper'\n","import { StretchBarEntity } from '..'\n\n/**\n * @param {number} distance percentage in container\n * @return {boolean} Did the move succeed?\n */\nexport function move(this: StretchBarEntity, distance: number): boolean {\n  const lengthSum = this.parentPane.isRow\n    ? this.parentPane.rect.width\n    : this.parentPane.rect.height\n  const offset = distance / lengthSum\n  const previousPaneGrow = this.previousPane.grow + offset\n  const nextPaneGrow = this.nextPane.grow - offset\n  const isMoved = isValidGrow(previousPaneGrow, nextPaneGrow)\n  if (isMoved) {\n    this.previousPane.grow = previousPaneGrow\n    this.nextPane.grow = nextPaneGrow\n    this.parentPane.setChildren(this.parentPane.children)\n  }\n  return isMoved\n}\n\nfunction isValidGrow(growA: number, growB: number): boolean {\n  if (growA < 0.04 || growB < 0.04) return false\n  const growSum = growA + growB\n  if (growA > growSum || growB > growSum) return false\n  return true\n}\n","import { TileBranch, TileNode } from '..'\nimport { move } from './util'\n\nexport class StretchBarEntity {\n  constructor(\n    public parentPane: TileBranch,\n    public previousPane: TileNode,\n    public nextPane: TileNode\n  ) {}\n  rect = this.nextPane.rect\n  move = move\n}\n","import { RectReadOnly } from 'react-use-measure'\nimport { TileNodeRect } from '../../../../../model'\nimport { PaneWithPreBox } from '../../../typings'\nimport { proportion } from '..'\nimport { LeafWithTitleRect } from '.'\nimport { TabsBarConfig } from '../../../..'\n\nexport function calcBoxPosition(\n  paneWithPreBox: PaneWithPreBox | undefined,\n  containerRect: RectReadOnly\n): TileNodeRect {\n  if (!paneWithPreBox)\n    return {\n      top: containerRect.top,\n      left: containerRect.left,\n      height: containerRect.height,\n      width: containerRect.width,\n    }\n  const node = paneWithPreBox.leaf ?? paneWithPreBox.branch\n  if (!node) return { top: 0, left: 0, height: 1, width: 1 }\n  const { target, into } = node\n  const { top, left, width, height } = target.rect\n\n  switch (into) {\n    case 'left':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'right':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left:\n          containerRect.left +\n          left * containerRect.width +\n          containerRect.width * width * (1 - proportion),\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'top':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    case 'bottom':\n      return {\n        top:\n          containerRect.top +\n          top * containerRect.height +\n          containerRect.height * height * (1 - proportion),\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    default:\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width,\n      }\n  }\n}\n\nconst thickness = 0.01\nexport function calcTitleBoxPosition(\n  paneWithPreBox: PaneWithPreBox | undefined,\n  leafWithTitleRects: LeafWithTitleRect[],\n  config: TabsBarConfig['preBox']\n): TileNodeRect | undefined {\n  if (!paneWithPreBox?.tab) return\n  const { target, into, hasNext: isNext } = paneWithPreBox.tab\n  const { children } = target\n  const currentTitle = children[into]\n  const current = leafWithTitleRects.find((it) => it.title === currentTitle)\n\n  if (current) {\n    const { top, left, height, width } = current.rect\n    const isEnd = config?.isReverse ? !isNext : isNext\n    const intoLeft = { top, left, height, width: thickness }\n    const intoRight = {\n      top,\n      height,\n      width: thickness,\n      left: left + width - thickness,\n    }\n    const intoTop = { top, left, height: thickness, width }\n    const intoBottom = {\n      top: top + height - thickness,\n      height: thickness,\n      width,\n      left,\n    }\n    const intoPrev = config?.isRow ? intoLeft : intoTop\n    const intoNext = config?.isRow ? intoRight : intoBottom\n    return isEnd ? intoNext : intoPrev\n  }\n}\n\nexport function toInContainer(\n  rect: TileNodeRect | undefined,\n  containerRect: RectReadOnly\n): TileNodeRect | undefined {\n  if (!rect) return\n  const { top, left, width, height } = rect\n  return {\n    top: containerRect.top + top * containerRect.height,\n    left: containerRect.left + left * containerRect.width,\n    height: containerRect.height * height,\n    width: containerRect.width * width,\n  }\n}\n","import { PaneName, TileLeaf, TileNodeRect } from '../../../../..'\n\nexport interface LeafWithTitleRect {\n  leaf: TileLeaf\n  index: number\n  title: PaneName\n  rect: TileNodeRect\n}\n\nexport function calcLeafWithTitleRect(\n  titleRects: Record<PaneName, TileNodeRect>,\n  leaves: TileLeaf[]\n): LeafWithTitleRect[] {\n  const leafWithTitleRects: LeafWithTitleRect[] = []\n  leaves.forEach((leaf) => {\n    leaf.children.forEach((title, index) => {\n      const rect = titleRects[title]\n      if (!rect) return\n      leafWithTitleRects.push({\n        leaf,\n        title,\n        index,\n        rect,\n      })\n    })\n  })\n  return leafWithTitleRects\n}\n","import {\n  TabsBarConfig,\n  TileBranch,\n  TileLeaf,\n  TileNodeRect,\n} from '../../../../..'\nimport { PaneWithPreBox } from '../../../typings'\nimport { LeafWithTitleRect } from './calcLeafWithTitleRect'\n\nconst branchProportion = 0.05\nconst leafProportion = 0.3\nexport function calcPreBox(\n  branches: TileBranch[],\n  leaves: TileLeaf[],\n  leafWithTitleRects: LeafWithTitleRect[],\n  innerPosition: [number, number],\n  config: TabsBarConfig['preBox']\n): PaneWithPreBox | undefined {\n  if (!innerPosition) return\n  const [x, y] = innerPosition\n\n  for (const { leaf, rect: titleRect, index } of leafWithTitleRects) {\n    if (isInPane(titleRect, innerPosition)) {\n      const isEnd = config?.isRow\n        ? titleRect.left + titleRect.width / 2 < x\n        : titleRect.top + titleRect.height / 2 < y\n      const isNext = config?.isReverse ? !isEnd : isEnd\n      return {\n        tab: {\n          target: leaf,\n          into: index,\n          hasNext: isNext,\n        },\n      }\n    }\n  }\n\n  for (const pane of branches) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (pane.isRow) {\n        if (y - top < height * branchProportion)\n          return { branch: { target: pane, into: 'top' } }\n        if (top + height - y < height * branchProportion)\n          return { branch: { target: pane, into: 'bottom' } }\n      } else {\n        if (x - left < width * branchProportion)\n          return { branch: { target: pane, into: 'left' } }\n        if (left + width - x < width * branchProportion)\n          return { branch: { target: pane, into: 'right' } }\n      }\n    }\n  }\n\n  for (const pane of leaves) {\n    if (isInPane(pane.rect, innerPosition)) {\n      const { left, top, width, height } = pane.rect\n      if (x - left < width * leafProportion)\n        return { leaf: { target: pane, into: 'left' } }\n      if (left + width - x < width * leafProportion)\n        return { leaf: { target: pane, into: 'right' } }\n      if (y - top < height * leafProportion)\n        return { leaf: { target: pane, into: 'top' } }\n      if (top + height - y < height * leafProportion)\n        return { leaf: { target: pane, into: 'bottom' } }\n      return { leaf: { target: pane, into: 'center' } }\n    }\n  }\n}\n\nfunction isInPane(position: TileNodeRect, [x, y]: [number, number]) {\n  const { left, top, width, height } = position\n  return left < x && x < left + width && top < y && y < top + height\n}\n\nexport * from './calcBoxPosition'\nexport * from './calcLeafWithTitleRect'\n","import { useContext, useMemo } from 'react'\nimport {\n  ContainerRectContext,\n  TileBranchesContext,\n  TileLeavesContext,\n  TabsBarContext,\n  absolute2Relative,\n  TitleRectsContext,\n  Vector2,\n} from '../../../..'\nimport { useThrottleFn } from '../../../hook'\nimport { calcLeafWithTitleRect, calcPreBox } from '../util'\n\nexport function useCalcPreBox(position: Vector2, throttle?: number) {\n  const containerRect = useContext(ContainerRectContext)\n  const branches = useContext(TileBranchesContext)\n  const leaves = useContext(TileLeavesContext)\n  const { preBox: preBoxInTabBar } = useContext(TabsBarContext)\n  const titleRects = useContext(TitleRectsContext)\n\n  const leafWithTitleRects = useMemo(\n    () => calcLeafWithTitleRect(titleRects, leaves),\n    [leaves, titleRects]\n  )\n\n  const innerPosition = useMemo(\n    () => absolute2Relative(containerRect, ...position),\n    [containerRect, position]\n  )\n\n  const calcLazyPreBox = useThrottleFn(calcPreBox, throttle)\n  const paneWithPreBox = useMemo(\n    () =>\n      calcLazyPreBox(\n        branches,\n        leaves,\n        leafWithTitleRects,\n        innerPosition,\n        preBoxInTabBar\n      ),\n    [\n      branches,\n      calcLazyPreBox,\n      innerPosition,\n      leafWithTitleRects,\n      leaves,\n      preBoxInTabBar,\n    ]\n  )\n  return { paneWithPreBox, leafWithTitleRects }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useCallback, useRef } from 'react'\n\nexport function useThrottleFn<Fn extends (...args: any[]) => any>(\n  fn: Fn,\n  ms?: number\n): Fn {\n  const result = useRef<any>()\n  const timerRef = useRef<number>()\n\n  const throttledFn = useCallback(\n    (...arg) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, ms)\n        result.current = fn(...arg)\n      }\n      return result.current\n    },\n    [fn, ms]\n  )\n\n  return ms ? (throttledFn as Fn) : fn\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { Vector2 } from '@use-gesture/react'\nimport {\n  ContainerRectContext,\n  PreBoxConfigContext,\n  TabsBarContext,\n} from '../../..'\nimport { PaneWithPreBox } from '../../typings'\nimport { useCalcPreBox } from './hook/useCalcPreBox'\nimport { calcBoxPosition, calcTitleBoxPosition, toInContainer } from './util'\n\nexport interface PreBoxProps {\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>\n  position: Vector2\n}\n\nconst PreBoxInner: React.FC<PreBoxProps> = ({\n  position,\n  paneWithPreBoxRef,\n}) => {\n  const containerRect = useContext(ContainerRectContext)\n  const { throttle, style, className, child } = useContext(PreBoxConfigContext)\n  const { preBox: preBoxInTabBar } = useContext(TabsBarContext)\n\n  const { paneWithPreBox, leafWithTitleRects } = useCalcPreBox(\n    position,\n    throttle\n  )\n  paneWithPreBoxRef.current = paneWithPreBox\n\n  return useMemo(() => {\n    const styled =\n      typeof style === 'function' ? style(paneWithPreBox ?? {}) : style\n    const classNamed =\n      typeof className === 'function'\n        ? className(paneWithPreBox ?? {})\n        : className\n    const boxPosition =\n      toInContainer(\n        calcTitleBoxPosition(\n          paneWithPreBox,\n          leafWithTitleRects,\n          preBoxInTabBar\n        ),\n        containerRect\n      ) ?? calcBoxPosition(paneWithPreBox, containerRect)\n    const children =\n      typeof child === 'function' ? child(paneWithPreBox ?? {}) : child\n\n    return (\n      <div\n        className={classNamed}\n        style={{\n          ...styled,\n          zIndex: 1,\n          visibility: 'visible',\n          position: 'fixed',\n          ...boxPosition,\n        }}\n      >\n        {children}\n      </div>\n    )\n  }, [\n    child,\n    className,\n    containerRect,\n    leafWithTitleRects,\n    paneWithPreBox,\n    preBoxInTabBar,\n    style,\n  ])\n}\n\nexport const proportion = 0.5\nexport const PreBox = memo(PreBoxInner)\n","export function orFn<As extends unknown[], T = unknown>(\n  orFunc: T | ((...args: As) => T),\n  ...args: As\n) {\n  return typeof orFunc === 'function'\n    ? (orFunc as (...args: As) => T)(...args)\n    : orFunc\n}\n","import React, {\n  memo,\n  useContext,\n  useMemo,\n  useRef,\n  CSSProperties,\n  useEffect,\n} from 'react'\nimport useMeasure from 'react-use-measure'\nimport { LeafContext, SetTitleRectsContext } from '..'\nimport { PaneName } from '../..'\nimport { PreBox } from './components'\nimport { useDragAndPosition } from './hook'\nimport { PaneWithPreBox } from './typings'\nimport { orFn } from './util'\n\nexport type DraggableTitleProps = {\n  name: PaneName\n  children?: React.ReactNode | ((isMoving: boolean) => React.ReactNode)\n  style?: CSSProperties | ((isMoving: boolean) => CSSProperties)\n  className?: string | ((isMoving: boolean) => string)\n} & React.DOMAttributes<HTMLDivElement>\n\nconst DraggableTitleInner: React.FC<DraggableTitleProps> = (props) => {\n  const { name } = props\n  const paneWithPreBoxRef = useRef<PaneWithPreBox>()\n\n  const pane = useContext(LeafContext)\n  const { position, bind, isDragging } = useDragAndPosition(\n    paneWithPreBoxRef,\n    name,\n    pane\n  )\n\n  const { style, className, children, rest } = useFn(props, isDragging)\n\n  const [targetRef, rect] = useMeasure({ scroll: true })\n  const setTitleRects = useContext(SetTitleRectsContext)\n\n  const { left, height, top, width } = rect\n  useEffect(() => {\n    setTitleRects({ name, rect: { left, height, top, width } })\n  }, [height, left, name, rect, setTitleRects, top, width])\n\n  const styled = useMemo(\n    () =>\n      (position\n        ? {\n            ...style,\n            visibility: 'visible',\n            position: 'fixed',\n            left: position[0],\n            top: position[1],\n            transform: 'translate(-50%,-50%)',\n            zIndex: 1,\n            userSelect: 'none',\n          }\n        : style) as React.CSSProperties,\n    [position, style]\n  )\n  return useMemo(\n    () => (\n      <>\n        {position && <PreBox {...{ paneWithPreBoxRef, position }} />}\n        <div\n          {...bind()}\n          {...rest}\n          ref={targetRef}\n          style={styled}\n          className={className}\n        >\n          {children}\n        </div>\n      </>\n    ),\n    [bind, children, className, position, rest, styled, targetRef]\n  )\n}\n\nfunction useFn(\n  {\n    children: childrenFn,\n    style: styleFn,\n    className: classNameFn,\n    ...rest\n  }: DraggableTitleProps,\n  isMoving: boolean\n) {\n  const style = useMemo(() => orFn(styleFn, isMoving), [isMoving, styleFn])\n  const children = useMemo(() => orFn(childrenFn, isMoving), [\n    childrenFn,\n    isMoving,\n  ])\n  const className = useMemo(() => orFn(classNameFn, isMoving), [\n    classNameFn,\n    isMoving,\n  ])\n  return { style, children, className, rest }\n}\n\nexport const DraggableTitle = memo(DraggableTitleInner)\nexport * from './typings'\nexport * from './hook/useMovingChecker'\n","import { useState, useContext } from 'react'\nimport { useGesture } from '@use-gesture/react'\nimport { TileDispatchContext } from '../../..'\nimport { PaneName, TileLeaf } from '../../../..'\nimport { PaneWithPreBox } from '../../typings'\n\nexport function useDragAndPosition(\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>,\n  name: PaneName,\n  leaf: TileLeaf | undefined\n) {\n  const dispatch = useContext(TileDispatchContext)\n  const [position, setPosition] = useState<[number, number]>()\n  const isDragging = !!position\n\n  const bind = useGesture(\n    {\n      onDrag: ({ down, xy, velocity }) => {\n        if (down) {\n          setPosition(xy)\n        } else {\n          setPosition(undefined)\n        }\n      },\n      onDragStart: () => dispatch({ tabToStartMoving: { name, leaf } }),\n      onDragEnd: () =>\n        dispatch({\n          tabToStopMoving: { pane: name, preBox: paneWithPreBoxRef.current },\n        }),\n    },\n    { drag: { threshold: 10 } }\n  )\n\n  return { bind, position, isDragging }\n}\n","import React, { createContext, memo, useMemo } from 'react'\nimport { TabBarAction, TabBarProps } from '../../..'\nimport { DraggableTitle, useMovingChecker } from '../../../DraggableTitle'\n\nexport type TabBarPropsWithAction = TabBarProps & { action: TabBarAction }\n\nconst TabBarInner: React.FC<TabBarPropsWithAction> = ({\n  tabs,\n  onTab,\n  action,\n}) => {\n  const checkTabMoving = useMovingChecker()\n\n  return useMemo(\n    () => (\n      <div className=\"react-tile-pane-tabBar\">\n        {tabs.map((tab, i) => (\n          <DraggableTitle\n            className={(isMoving) =>\n              isMoving ? 'react-tile-pane-tabMoving' : 'react-tile-pane-tab'\n            }\n            name={tab}\n            key={tab}\n          >\n            <div\n              className={\n                i === onTab\n                  ? 'react-tile-pane-tabInner '\n                  : 'react-tile-pane-tabInnerOff'\n              }\n              onClick={() => action.switchTab(i)}\n            >\n              <div className=\"react-tile-pane-tabTitle\">{tab}</div>\n              {!checkTabMoving(tabs[i]) && (\n                <div\n                  className=\"react-tile-pane-off\"\n                  onClick={() => action.closeTab(i)}\n                >\n                  ×\n                </div>\n              )}\n            </div>\n          </DraggableTitle>\n        ))}\n      </div>\n    ),\n    [action, checkTabMoving, onTab, tabs]\n  )\n}\nexport type TabsBarPosition = 'left' | 'right' | 'top' | 'bottom'\n/**How TabsBar look like?*/\nexport type TabsBarConfig = {\n  /**To customize how the TabsBar is rendered*/\n  render: React.FC<TabBarPropsWithAction>\n  /**Accepts a CSS length attribute, which defaults to px if number is passed in\n   * @example 20, '20px', '2vw'\n   */\n  thickness: number | string\n  /**Where to position the TabsBar in the pane */\n  position: TabsBarPosition\n  /**How preBox in TabsBar look like?*/\n  preBox?: {\n    isRow?: boolean\n    isReverse?: boolean\n  }\n}\n\nexport const DefaultTabBar = memo(TabBarInner)\nexport const defaultTabsBarConfig: TabsBarConfig = {\n  render: DefaultTabBar,\n  thickness: 24,\n  position: 'top',\n  preBox: {\n    isRow: true,\n    isReverse: false,\n  },\n}\nexport const TabsBarContext = createContext<TabsBarConfig>(defaultTabsBarConfig)\n","import { useCallback, useContext } from 'react'\nimport { MovingTabsContext } from '../../..'\nimport { PaneName } from '../../../..'\n\nexport function useMovingChecker() {\n  const tabs = useContext(MovingTabsContext)\n  const isMoving = useCallback(\n    (name: PaneName) => tabs.map((tab) => tab.name).includes(name),\n    [tabs]\n  )\n  return isMoving\n}\n","import { CSSProperties, createContext, ReactChild } from 'react'\nexport type StretchBarConfig = {\n  style?: ((isRow: boolean) => CSSProperties) | CSSProperties\n  className?: ((isRow: boolean) => string) | string\n  child?: ((isRow: boolean) => ReactChild) | ReactChild\n  /** The StretchBar does not occupy the container area,\n   *  but actually floats on top of the pane.\n   *  position is used to specify whether the StretchBar floats in the middle of the adjacent pane,\n   *  or is biased towards the previous, or the next one */\n  position?: 'middle' | 'previous' | 'next'\n  /** **millisecond**, Controls the minimum Trigger Period of the Stretch Bar */\n  throttle?: number\n}\n\nexport const defaultStretchBar: StretchBarConfig = {\n  className: (isRow) => (isRow ? 'react-tile-pane-Bar' : 'react-tile-pane-Bar'),\n  style: (isRow) => ({ cursor: isRow ? 'ew-resize' : 'ns-resize' }),\n}\n\nexport const StretchBarConfigContext = createContext<StretchBarConfig>(\n  defaultStretchBar\n)\n","import { CSSProperties, createContext, ReactChild } from 'react'\nimport { PaneWithPreBox } from '../../..'\n\nexport type PreBoxTarget = 'leaf' | 'branch' | 'tab' | null\n\nexport type PreBoxConfig = {\n  style?: ((paneWithPreBox: PaneWithPreBox) => CSSProperties) | CSSProperties\n  className?: ((paneWithPreBox: PaneWithPreBox) => string) | string\n  child?: ((paneWithPreBox: PaneWithPreBox) => ReactChild) | ReactChild\n  /** **millisecond**, Control PreBox calculation frequency */\n  throttle?: number\n}\n\nexport const defaultPreBox: PreBoxConfig = {\n  throttle: 66,\n  className: ({ branch, leaf, tab }) => {\n    if (branch) return 'react-tile-pane-preBranch'\n    if (leaf) return 'react-tile-pane-preBox'\n    if (tab) return 'react-tile-pane-preBoxInTab'\n    return 'react-tile-pane-noPreBox'\n  },\n}\n\nexport const PreBoxConfigContext = createContext<PreBoxConfig>(defaultPreBox)\n","import { createContext, CSSProperties } from 'react'\n\nexport interface PaneConfig {\n  style?: CSSProperties\n  className?: string\n}\n\nexport const defaultPane: PaneConfig = {}\n\nexport const PaneContext = createContext<PaneConfig>(defaultPane)\n","import { createContext } from 'react'\nimport { TilePane } from '../../..'\n\nexport const TitlePanesContext = createContext<TilePane[]>([])\nexport * from './TabBar'\nexport * from './StretchBar'\nexport * from './PreBox'\nexport * from './Pane'\n","import { TileStore } from '../..'\nimport {\n  MovingTab,\n  removeInArray,\n  TileBranch,\n  TileLeaf,\n  unfold,\n} from '../../../..'\n\nexport function startMovingTab(\n  { movingTabs, leaves, branches, rootNode }: TileStore,\n  tabToStopMoving: Pick<MovingTab, 'name' | 'leaf'>,\n  notMoving?: boolean\n): TileStore {\n  const newMovingTabs = movingTabs.slice()\n  const { name } = tabToStopMoving\n  const existedTab = newMovingTabs.find((it) => (it.name = name))\n\n  const leafIndex = leaves.findIndex((l) => l === tabToStopMoving.leaf)\n  const leaf = leaves.find((l) => l.children.includes(name))\n  const tabIndex = leaf?.children.findIndex((it) => it === name) ?? 0\n  if (leaf) {\n    const newChildren = removeInArray(leaf.children, name)\n    leaf.onTab = 0\n    leaf.setChildren(newChildren)\n    if (newChildren.length === 0) {\n      removeNode(branches, leaf)\n    }\n  }\n  if (!notMoving && !existedTab) {\n    newMovingTabs.push({ ...tabToStopMoving, tabIndex, leafIndex })\n  }\n\n  const nodes = unfold(rootNode)\n  return {\n    movingTabs: newMovingTabs,\n    rootNode,\n    ...nodes,\n  }\n}\n\nfunction removeNode(branches: TileBranch[], node: TileLeaf | TileBranch) {\n  const parent = branches.find((it) => it === node.parent)\n  if (parent) {\n    const newChildren = removeInArray(\n      parent.children,\n      (it) => it.id === node.id\n    )\n    if (newChildren.length === 0) {\n      removeNode(branches, parent)\n    } else {\n      parent.setChildren(newChildren)\n    }\n  }\n}\n","import { TileStore } from '../..'\nimport { Into, PaneWithPreBox } from '../../..'\nimport {\n  PaneName,\n  removeInArray,\n  unfold,\n  isTileLeaf,\n  TileBranch,\n  TileLeaf,\n  TileLeafSubstance,\n  TileBranchSubstance,\n  replaceInArray,\n} from '../../../..'\n\nexport type TabToStopMoving = {\n  pane: PaneName\n  preBox?: PaneWithPreBox\n}\n\nexport function stopMovingTab(\n  { movingTabs, ...rest }: TileStore,\n  { pane, preBox }: TabToStopMoving\n): TileStore {\n  const newMovingTabs = removeInArray(movingTabs, (it) => (it.name = pane))\n  if (preBox) {\n    const { rootNode } = rest\n    insertPane(pane, preBox, rest)\n    const nodes = unfold(rootNode)\n    return { movingTabs: newMovingTabs, rootNode, ...nodes }\n  } else return { movingTabs: newMovingTabs, ...rest }\n}\n\nconst next: Into[] = ['right', 'bottom']\nconst row: Into[] = ['right', 'left']\n\nfunction insertPane(\n  pane: PaneName,\n  preBox: PaneWithPreBox,\n  nodes: Pick<TileStore, 'branches' | 'leaves'>\n) {\n  // const { targetNode: node, into } = preBox\n  const node = preBox.leaf ?? preBox.branch ?? preBox.tab\n  if (!node) return\n  const { target, into } = node\n  const { leaves, branches } = nodes\n  const isNext = typeof into === 'number' ? false : next.includes(into)\n  const isBrother = typeof into === 'number' ? false : isSegment(target, into)\n  const isRow = typeof into === 'number' ? false : row.includes(into)\n\n  if (isTileLeaf(target)) {\n    const leaf = leaves.find((it) => it === target)\n    if (leaf) {\n      if (into === 'center') {\n        const newChildren = leaf.children.slice()\n        newChildren.push(pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = leaf.children.length - 1\n      } else if (preBox.tab) {\n        const newChildren = leaf.children.slice()\n        const index = preBox.tab.into + (preBox.tab.hasNext ? 1 : 0)\n        newChildren.splice(index, 0, pane)\n        leaf.setChildren(newChildren)\n        leaf.onTab = index\n      } else {\n        isBrother\n          ? segment(target, pane, isNext)\n          : fission(target, pane, isNext, isRow)\n      }\n    }\n  } else {\n    const branch = branches.find((it) => it === target)\n    if (branch) {\n      fission(target, pane, isNext, isRow)\n    }\n  }\n}\n\n/** 分割 ——插入同级节点 */\nfunction segment(node: TileBranch | TileLeaf, pane: PaneName, isNext: boolean) {\n  const { parent } = node\n  if (!parent) return\n  const grow = node.grow / 2\n  const leaf: TileLeafSubstance = { grow, children: [pane] }\n  node.grow = grow\n  const indexInParent = parent.children.findIndex((it) => it === node)\n  const index = isNext ? indexInParent + 1 : indexInParent\n  const newNodes: (\n    | TileBranchSubstance\n    | TileLeafSubstance\n  )[] = parent.children.slice()\n  newNodes.splice(index, 0, leaf)\n  parent.setChildren(newNodes)\n}\n\n/** 分裂 ——插入子级节点*/\nfunction fission(\n  node: TileBranch | TileLeaf,\n  pane: PaneName,\n  isNext: boolean,\n  isRow: boolean\n) {\n  const { parent, grow } = node\n  if (!parent) {\n    const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n    const oldLeaf: TileBranchSubstance | TileLeafSubstance = isTileLeaf(node)\n      ? node.dehydrate()\n      : node.dehydrate()\n    if (!isTileLeaf(node)) {\n      node.isRow = isRow\n      node.setChildren(isNext ? [oldLeaf, newLeaf] : [newLeaf, oldLeaf])\n    }\n    return\n  }\n  const newLeaf: TileLeafSubstance = { grow, children: [pane] }\n  const branch: TileBranchSubstance = {\n    grow,\n    isRow,\n    children: isNext ? [node, newLeaf] : [newLeaf, node],\n  }\n  const newNodes = replaceInArray<TileBranchSubstance | TileLeafSubstance>(\n    parent?.children,\n    node,\n    branch\n  )\n  parent.setChildren(newNodes)\n}\n\nfunction isSegment(node: TileBranch | TileLeaf, into: Into): boolean {\n  const isRow = node.parent?.isRow\n  const segmentInto: Into[] = isRow ? ['left', 'right'] : ['top', 'bottom']\n  return segmentInto.includes(into)\n}\n","import { createTileBranch, TileBranchSubstance, unfold } from '../../..'\n\nexport function initRootNode(rootNodeSub: TileBranchSubstance) {\n  const rootNode = createTileBranch(rootNodeSub)\n  const nodes = unfold(rootNode)\n  return { rootNode, ...nodes }\n}\n","import { TileBranch, TileBranchSubstance } from '..'\n\nexport function createTileBranch(sub: TileBranchSubstance) {\n  const { isRow, children, id, grow } = sub\n  return new TileBranch(isRow, children, id, null, grow, undefined)\n}\n","import { TileStoreReducer } from '../..'\nimport { MovingTab, TileLeaf } from '../../..'\nimport { BarToMove, moveBar } from './moveBar'\nimport { startMovingTab, stopMovingTab, TabToStopMoving } from './MovingTab'\nimport { switchLeafTab } from './switchLeafTab'\n\nexport * from './initRootNode'\n\nexport type TileStoreAction = {\n  leafToSwitchTab?: {\n    leaf: TileLeaf\n    onTab: number\n  }\n  leafToCloseTab?: Pick<MovingTab, 'name' | 'leaf'>\n  tabToStopMoving?: TabToStopMoving\n  tabToStartMoving?: Pick<MovingTab, 'name' | 'leaf'>\n  barToMove?: BarToMove\n}\n\nexport const tileStoreReducer: TileStoreReducer = (\n  state,\n  {\n    leafToSwitchTab,\n    tabToStopMoving,\n    tabToStartMoving,\n    barToMove,\n    leafToCloseTab,\n  }\n) => {\n  if (leafToSwitchTab) return switchLeafTab(state, leafToSwitchTab)\n  if (leafToCloseTab) return startMovingTab(state, leafToCloseTab, true)\n  if (tabToStartMoving) return startMovingTab(state, tabToStartMoving)\n  if (tabToStopMoving) return stopMovingTab(state, tabToStopMoving)\n  if (barToMove) return moveBar(state, barToMove)\n  return state\n}\n","import { TileLeaf } from '../../..'\nimport { TileStore } from '../typings'\n\nexport function switchLeafTab(\n  state: TileStore,\n  switchLeafTab: { leaf: TileLeaf; onTab: number }\n) {\n  const { leaves, ...rest } = state\n  const newLeaves = leaves.slice()\n  const leaf = newLeaves.find((l) => l === switchLeafTab.leaf)\n  if (leaf) {\n    leaf.onTab = switchLeafTab.onTab\n  }\n  return { leaves: newLeaves, ...rest }\n}\n","import { StretchBarEntity, TileStore, unfold } from '../../..'\n\nexport type BarToMove = {\n  distance: number\n  bar: StretchBarEntity\n}\n\nexport function moveBar(\n  { rootNode, movingTabs }: TileStore,\n  barToMove: BarToMove\n): TileStore {\n  const { bar, distance } = barToMove\n  bar.move(distance)\n  const nodes = unfold(rootNode)\n  return { ...nodes, movingTabs, rootNode }\n}\n","import React, {\n  createContext,\n  useMemo,\n  useReducer,\n  Reducer,\n  useContext,\n} from 'react'\nimport { RectReadOnly } from 'react-use-measure'\nimport {\n  ContainerRectContext,\n  PaneName,\n  TileNodeRect,\n  Vector2,\n} from '../../../..'\n\ninterface DispatchTitleRectsReducer {\n  name: PaneName\n  rect: TileNodeRect\n}\n\nexport type TitleRectsReducer = Reducer<\n  Record<PaneName, TileNodeRect>,\n  DispatchTitleRectsReducer\n>\n\nexport const TitleRectsContext = createContext<Record<PaneName, TileNodeRect>>(\n  {}\n)\nexport const SetTitleRectsContext = createContext<\n  React.Dispatch<DispatchTitleRectsReducer>\n>(() => void null)\n\nexport const TitleRectsProvider: React.FC = ({ children }) => {\n  const containerRect = useContext(ContainerRectContext)\n  const [titleRects, setTitleRects] = useReducer<TitleRectsReducer>(reducer, {})\n\n  return useMemo(\n    () => (\n      <TitleRectsContext.Provider value={titleRects}>\n        <SetTitleRectsContext.Provider value={setTitleRects}>\n          {children}\n        </SetTitleRectsContext.Provider>\n      </TitleRectsContext.Provider>\n    ),\n    [children, titleRects]\n  )\n  function reducer(\n    state: Record<PaneName, TileNodeRect>,\n    { rect, name }: DispatchTitleRectsReducer\n  ) {\n    const [left, top] = absolute2Relative(containerRect, rect.left, rect.top)\n    const [right, bottom] = absolute2Relative(\n      containerRect,\n      rect.left + rect.width,\n      rect.top + rect.height\n    )\n    const width = right - left\n    const height = bottom - top\n    state[name] = { left, height, width, top }\n    return state\n  }\n}\n\nexport const LeafWithTitleRectProvider: React.FC = ({ children }) => {\n  return useMemo(() => <>{children}</>, [children])\n}\n\nexport function absolute2Relative(\n  containerRect: RectReadOnly,\n  x: number,\n  y: number\n) {\n  return [\n    (x - containerRect.left) / containerRect.width,\n    (y - containerRect.top) / containerRect.height,\n  ] as Vector2\n}\n","import { createContext, Dispatch } from 'react'\nimport useMeasure, { RectReadOnly } from 'react-use-measure'\nimport { TileStoreAction } from '..'\nimport {\n  MovingTabAction,\n  MovingTab,\n  StretchBarEntity,\n  TileBranch,\n  TileLeaf,\n} from '../../..'\nimport { Vector2 } from '../hook'\n\nexport const TileDispatchContext = createContext<Dispatch<TileStoreAction>>(\n  (s) => s\n)\nexport const TileBranchesContext = createContext<TileBranch[]>([])\nexport const TileLeavesContext = createContext<TileLeaf[]>([])\nexport const StretchBarsContext = createContext<StretchBarEntity[]>([])\n\nexport const MovingTabsContext = createContext<MovingTab[]>([])\nexport const MovingTabsDispatchContext = createContext<\n  React.Dispatch<MovingTabAction>\n>((s) => s)\n\nexport const ContainerRefContext = createContext<\n  ReturnType<typeof useMeasure>[0]\n>(() => null)\n\nconst defaultRect: RectReadOnly = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n}\nexport const ContainerRectContext = createContext(defaultRect)\nexport const MousePositionContext = createContext<Vector2>([0, 0])\nexport * from './TitleRects'\n","import { useContext } from 'react'\nimport { TileBranchesContext } from '../..'\n\nexport function useGetRootNode() {\n  const nodes = useContext(TileBranchesContext)\n  return () => nodes[0].dehydrate()\n}\n","import React, { memo, useMemo, useReducer } from 'react'\nimport useMeasure from 'react-use-measure'\nimport {\n  PreBoxConfig,\n  StretchBarConfig,\n  TileBranchSubstance,\n  TilePane,\n  TitleRectsProvider,\n} from '../..'\nimport {\n  TitlePanesContext,\n  ContainerRectContext,\n  ContainerRefContext,\n  MovingTabsContext,\n  StretchBarsContext,\n  TileBranchesContext,\n  TileDispatchContext,\n  TileLeavesContext,\n  TileStoreReducer,\n  initRootNode,\n  TabsBarContext,\n  tileStoreReducer,\n  TabsBarConfig,\n  defaultTabsBarConfig,\n  StretchBarConfigContext,\n  defaultStretchBar,\n  PaneContext,\n} from '.'\nimport {\n  defaultPane,\n  defaultPreBox,\n  PaneConfig,\n  PreBoxConfigContext,\n} from './config'\n\nexport interface TileProviderProps {\n  children?: React.ReactNode\n  rootNode: TileBranchSubstance\n  tilePanes: TilePane[]\n  tabBar?: TabsBarConfig\n  preBox?: PreBoxConfig\n  stretchBar?: StretchBarConfig\n  pane?: PaneConfig\n}\n\nconst TileProviderInner: React.FC<TileProviderProps> = ({\n  children,\n  rootNode: rootNodeSub,\n  tilePanes,\n  tabBar = defaultTabsBarConfig,\n  stretchBar = defaultStretchBar,\n  preBox = defaultPreBox,\n  pane = defaultPane,\n}: TileProviderProps) => {\n  const [\n    { branches, leaves, stretchBars, movingTabs },\n    tileStoreDispatch,\n  ] = useReducer<TileStoreReducer>(tileStoreReducer, {\n    movingTabs: [],\n    ...initRootNode(rootNodeSub),\n  })\n\n  const childrenMemo = useMemo(() => children, [children])\n  const [targetRef, containerRect] = useMeasure({ scroll: true })\n  return (\n    <ContainerRefContext.Provider value={targetRef}>\n      <PreBoxConfigContext.Provider value={preBox}>\n        <TitlePanesContext.Provider value={tilePanes}>\n          <ContainerRectContext.Provider value={containerRect}>\n            <TileBranchesContext.Provider value={branches}>\n              <StretchBarConfigContext.Provider value={stretchBar}>\n                <TileLeavesContext.Provider value={leaves}>\n                  <PaneContext.Provider value={pane}>\n                    <StretchBarsContext.Provider value={stretchBars}>\n                      <TileDispatchContext.Provider value={tileStoreDispatch}>\n                        <MovingTabsContext.Provider value={movingTabs}>\n                          <TabsBarContext.Provider value={tabBar}>\n                            <TitleRectsProvider>\n                              {childrenMemo}\n                            </TitleRectsProvider>\n                          </TabsBarContext.Provider>\n                        </MovingTabsContext.Provider>\n                      </TileDispatchContext.Provider>\n                    </StretchBarsContext.Provider>\n                  </PaneContext.Provider>\n                </TileLeavesContext.Provider>\n              </StretchBarConfigContext.Provider>\n            </TileBranchesContext.Provider>\n          </ContainerRectContext.Provider>\n        </TitlePanesContext.Provider>\n      </PreBoxConfigContext.Provider>\n    </ContainerRefContext.Provider>\n  )\n}\n\nexport const TileProvider = memo(TileProviderInner)\nexport * from './typings'\nexport * from './controller'\nexport * from './data'\nexport * from './config'\nexport * from './hook'\n","import React, { memo, useContext, useMemo } from 'react'\nimport { PaneContext, TilePaneWithRect } from '../../../../../..'\nimport { useChild, useStyle } from './hook'\n\nexport interface TilePaneProps {\n  pane: TilePaneWithRect\n}\nconst TilePaneInner: React.FC<TilePaneProps> = ({ pane }) => {\n  const { style, className } = useContext(PaneContext)\n  const child = useChild(pane.name)\n  const styled = useStyle(pane.rect)\n  return useMemo(\n    () => (\n      <div className={className} style={{ ...style, ...styled }}>\n        {child}\n      </div>\n    ),\n    [child, className, style, styled]\n  )\n}\nexport const TilePane = memo(TilePaneInner)\n","import { useContext, useCallback, useMemo } from 'react'\nimport { TitlePanesContext } from '../../../../../..'\nimport { PaneName } from '../../../../../../..'\n\nexport function useChild(id: PaneName) {\n  const tilePanes = useContext(TitlePanesContext)\n\n  const findChildPane = useCallback(\n    (id: PaneName) => {\n      const pane = tilePanes.find((it) => it.name === id)\n      return pane?.child\n    },\n    [tilePanes]\n  )\n  const child = useMemo(() => findChildPane(id), [findChildPane, id])\n  return child\n}\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssCalcLength,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\n\nexport function useStyle(rect: TileNodeRect | null): CSSProperties {\n  const tabBar = useContext(TabsBarContext)\n  const { position } = tabBar\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(tabBar.thickness), [\n    tabBar.thickness,\n  ])\n  return rect\n    ? {\n        position: 'absolute',\n        height: isVertical\n          ? toCssCalcLength(rect.height, thickness, '-')\n          : toCssLength(rect.height),\n        width: isVertical\n          ? toCssLength(rect.width)\n          : toCssCalcLength(rect.width, thickness, '-'),\n        top:\n          isVertical && !isAfter\n            ? toCssCalcLength(rect.top, thickness, '+')\n            : toCssLength(rect.top),\n        left:\n          !isVertical && !isAfter\n            ? toCssCalcLength(rect.left, thickness, '+')\n            : toCssLength(rect.left),\n      }\n    : {\n        display: 'none',\n      }\n}\n","import React, { memo, useMemo } from 'react'\nimport { usePanes } from './hook'\nimport { TilePane } from './components'\n\nconst TilePanesInner: React.FC = () => {\n  const panes = usePanes()\n  return useMemo(\n    () => (\n      <>\n        {panes.map((pane) => (\n          <TilePane pane={pane} key={pane.name} />\n        ))}\n      </>\n    ),\n    [panes]\n  )\n}\n\nexport const TilePanes = memo(TilePanesInner)\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../../..'\nimport { TilePaneWithRect } from '../../../../../..'\n\nexport function usePanes() {\n  const movingTabs = useContext(MovingTabsContext)\n  const leaves = useContext(TileLeavesContext)\n\n  const panes: TilePaneWithRect[] = useMemo(() => {\n    const panes: TilePaneWithRect[] = movingTabs.map(({ name }) => ({\n      name,\n      rect: null,\n    }))\n    leaves.forEach((leaf) => {\n      panes.push(\n        ...leaf.children.map((name, i) => ({\n          name,\n          rect: leaf.onTab === i ? leaf.rect : null,\n        }))\n      )\n    })\n    return panes\n  }, [leaves, movingTabs])\n  return panes\n}\n","import React, {\n  createContext,\n  memo,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react'\nimport { TabsBarContext, TileDispatchContext } from '../../../../..'\nimport { PaneName, TileLeaf } from '../../../../../..'\nimport { useStyle } from './hook'\nexport interface TabBarProps {\n  leaf: TileLeaf\n  onTab: number\n  tabs: PaneName[]\n}\n\nexport type TabBarMoreProps = TabBarProps & {\n  isHidden?: boolean\n}\n\nexport interface TabBarAction {\n  switchTab: (onTab: number) => void\n  closeTab: (index: number) => void\n}\n\nexport const LeafContext = createContext<TileLeaf | undefined>(undefined)\n\nconst TabsBarInner: React.FC<TabBarMoreProps> = (props) => {\n  const { leaf, isHidden } = props\n  const tabBar = useContext(TabsBarContext)\n  const dispatch = useContext(TileDispatchContext)\n\n  const switchTab = useCallback(\n    (onTab: number) =>\n      dispatch({\n        leafToSwitchTab: {\n          leaf,\n          onTab,\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const closeTab = useCallback(\n    (index: number) =>\n      dispatch({\n        leafToCloseTab: {\n          leaf,\n          name: leaf.children[index],\n        },\n      }),\n    [dispatch, leaf]\n  )\n\n  const action: TabBarAction = useMemo(() => ({ switchTab, closeTab }), [\n    closeTab,\n    switchTab,\n  ])\n\n  const { render: Render } = tabBar\n  const style = useStyle(leaf.rect, isHidden)\n  return useMemo(\n    () => (\n      <LeafContext.Provider value={leaf}>\n        <div style={style}>\n          <Render action={action} {...props} />\n        </div>\n      </LeafContext.Provider>\n    ),\n    [Render, action, leaf, props, style]\n  )\n}\n\nexport const TabsBar = memo(TabsBarInner)\n","import { CSSProperties, useContext, useMemo } from 'react'\nimport {\n  completeUnit,\n  TabsBarContext,\n  TileNodeRect,\n  toCssLength,\n  toQuadrant,\n} from '../../../../../../..'\nexport function useStyle(\n  rect: TileNodeRect,\n  isHidden?: boolean\n): CSSProperties {\n  const table = useContext(TabsBarContext)\n  const { position } = table\n  const [isVertical, isAfter] = useMemo(() => toQuadrant(position), [position])\n  const thickness = useMemo(() => completeUnit(table.thickness), [table])\n  return {\n    visibility: isHidden ? 'hidden' : undefined,\n    position: 'absolute',\n    width: isVertical ? toCssLength(rect.width) : thickness,\n    height: isVertical ? thickness : toCssLength(rect.height),\n    top: isAfter ? undefined : toCssLength(rect.top),\n    bottom: isAfter ? toCssLength(1 - rect.top - rect.height) : undefined,\n    left: isAfter ? undefined : toCssLength(rect.left),\n    right: isAfter ? toCssLength(1 - rect.left - rect.width) : undefined,\n  }\n}\n","import React, { memo, useMemo } from 'react'\nimport { TabsBar } from './components'\nimport { useTabs } from './hook'\n\nconst TabsBarsInner: React.FC = () => {\n  const tabBars = useTabs()\n  return useMemo(\n    () => (\n      <>\n        {tabBars.map((tabBar) => (\n          <TabsBar key={tabBar.leaf.id} {...tabBar} />\n        ))}\n      </>\n    ),\n    [tabBars]\n  )\n}\n\nexport const TabsBars = memo(TabsBarsInner)\nexport * from './components'\n","import { useContext, useMemo } from 'react'\nimport { MovingTabsContext, TileLeavesContext } from '../../../..'\nimport { PaneName } from '../../../../..'\nimport { TabBarMoreProps } from '../components'\n\nexport function useTabs() {\n  const leaves = useContext(TileLeavesContext)\n  const movingTabs = useContext(MovingTabsContext)\n\n  const tabBarsProps = useMemo(() => {\n    const tabBarsProps: TabBarMoreProps[] = leaves.map((leaf) => ({\n      leaf,\n      onTab: leaf.onTab,\n      tabs: leaf.children.slice(),\n    }))\n    // 保持 onTab\n    const onTabs: PaneName[] = tabBarsProps.map((it) => it.tabs[it.onTab])\n    movingTabs.forEach((tab) => {\n      const { leaf } = tab\n      if (!leaf) return\n      const tabBar = tabBarsProps.find((it) => it.leaf.id === leaf.id)\n      if (tabBar) {\n        tabBar.tabs.splice(tab.tabIndex, 0, tab.name)\n      } else {\n        tabBarsProps.splice(tab.leafIndex, 0, {\n          leaf: leaf,\n          onTab: leaf.onTab,\n          tabs: [tab.name],\n          isHidden: true,\n        })\n      }\n    })\n    tabBarsProps.forEach((it, i) => {\n      const onTab = it.tabs.findIndex((tab) => tab === onTabs[i])\n      it.onTab = onTab\n    })\n    return tabBarsProps\n  }, [leaves, movingTabs])\n\n  return tabBarsProps\n}\n","import { TileNodeRect } from '../../../../../..'\n\nexport function calcBarStyles(\n  { top, left, width, height }: TileNodeRect,\n  offset: number,\n  isRow?: boolean\n) {\n  return {\n    top: top * 100 + '%',\n    left: left * 100 + '%',\n    width: isRow ? undefined : width * 100 + '%',\n    height: isRow ? height * 100 + '%' : undefined,\n    transform: `translate${isRow ? 'X' : 'Y'}(${offset}%)`,\n  }\n}\n","import React, { useCallback, useContext, useMemo } from 'react'\nimport { useDrag } from '@use-gesture/react'\nimport { ContainerRectContext, StretchBarConfigContext } from '../../../..'\nimport { StretchBarEntity } from '../../../../..'\nimport { useThrottleMove } from './hook'\nimport { calcBarStyles } from './util'\n\nexport interface StretchBarProps {\n  bar: StretchBarEntity\n}\n\nconst StretchBarInner: React.FC<StretchBarProps> = ({ bar }) => {\n  const { isRow } = bar.parentPane\n  const containerRect = useContext(ContainerRectContext)\n  const { style, className, child, position = 'previous' } = useContext(\n    StretchBarConfigContext\n  )\n  const move = useThrottleMove(bar)\n\n  const styled = useMemo(\n    () => (typeof style === 'function' ? style(isRow) : style),\n    [isRow, style]\n  )\n\n  const classNamed = useMemo(\n    () => (typeof className === 'function' ? className(isRow) : className),\n    [className, isRow]\n  )\n  const children = useMemo(\n    () => (typeof child === 'function' ? child(isRow) : child),\n    [child, isRow]\n  )\n\n  const moveBar = useCallback(\n    (mx: number, my: number) => {\n      const distance = isRow\n        ? mx / containerRect.width\n        : my / containerRect.height\n      move(distance)\n    },\n    [containerRect.height, containerRect.width, isRow, move]\n  )\n\n  const bind = useDrag(\n    ({ down, delta: [mx, my] }) => {\n      down && moveBar(mx, my)\n    },\n    { enabled: true }\n  )\n  const { top, left, width, height } = bar.nextPane.rect\n\n  return useMemo(\n    () => (\n      <div\n        {...bind()}\n        className={classNamed}\n        style={{\n          ...styled,\n          position: 'absolute',\n          ...calcBarStyles(\n            { top, left, width, height },\n            positionToOffset(position),\n            isRow\n          ),\n        }}\n      >\n        {children}\n      </div>\n    ),\n    [\n      bind,\n      children,\n      classNamed,\n      height,\n      isRow,\n      left,\n      position,\n      styled,\n      top,\n      width,\n    ]\n  )\n}\n\nexport const StretchBar = React.memo(StretchBarInner)\n\nfunction positionToOffset(\n  position: 'middle' | 'previous' | 'next' = 'middle'\n): number {\n  switch (position) {\n    case 'previous':\n      return -100\n    case 'next':\n      return -0\n    default:\n      return -50\n  }\n}\n","import { useCallback, useContext, useRef } from 'react'\nimport {\n  StretchBarConfigContext,\n  StretchBarEntity,\n  TileDispatchContext,\n} from '../../../../../..'\n\nexport function useThrottleMove(bar: StretchBarEntity) {\n  const { throttle } = useContext(StretchBarConfigContext)\n  const timerRef = useRef<number>()\n  const accumulation = useRef<number>(0)\n\n  const dispatch = useContext(TileDispatchContext)\n\n  const move = useCallback(\n    (distance: number) => {\n      if (!timerRef.current) {\n        timerRef.current = window.setTimeout(() => {\n          clearTimeout(timerRef.current)\n          timerRef.current = undefined\n        }, throttle)\n        dispatch({\n          barToMove: {\n            bar,\n            distance: accumulation.current ?? distance,\n          },\n        })\n        accumulation.current = distance\n      } else {\n        accumulation.current += distance\n      }\n    },\n    [bar, dispatch, throttle]\n  )\n  return move\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { StretchBarsContext } from '../../..'\nimport { StretchBar } from './StretchBar'\n\nconst StretchBarsInner: React.FC = () => {\n  const bars = useContext(StretchBarsContext)\n  return useMemo(\n    () => (\n      <>\n        {bars.map((bar) => (\n          <StretchBar bar={bar} key={bar.nextPane.id} />\n        ))}\n      </>\n    ),\n    [bars]\n  )\n}\n\nexport const StretchBars = memo(StretchBarsInner)\n","import { TabsBarPosition } from '../..'\n\nexport function toCssLength(length: number) {\n  return `${length * 100}%`\n}\n\nexport function toCssCalcLength(\n  percent: number,\n  offset: string,\n  mode: '+' | '-'\n) {\n  return `calc(${toCssLength(percent)} ${mode} ${offset})`\n}\n\nexport const toQuadrant = (position: TabsBarPosition) => [\n  (['top', 'bottom'] as TabsBarPosition[]).includes(position),\n  (['right', 'bottom'] as TabsBarPosition[]).includes(position),\n]\n\nexport const completeUnit = (len: number | string) =>\n  typeof len === 'number' ? `${len}px` : len\n","import React, { memo, useContext, useMemo } from 'react'\nimport { ContainerRefContext, MovingTabsContext } from '..'\nimport { StretchBars, TabsBars, TilePanes } from './components'\n\nexport interface TileContainerProps {\n  style?: React.CSSProperties\n  className?: string\n}\n\nconst TileContainerInner: React.FC<TileContainerProps> = ({\n  style = { width: '100%', height: '100%' },\n  className,\n}) => {\n  const targetRef = useContext(ContainerRefContext)\n  const movingTabs = useContext(MovingTabsContext)\n  return useMemo(\n    () => (\n      <div\n        ref={targetRef}\n        className={className}\n        style={{\n          ...style,\n          position: 'relative',\n          userSelect: movingTabs.length ? 'none' : 'auto',\n        }}\n      >\n        <TabsBars />\n        <TilePanes />\n        <StretchBars />\n      </div>\n    ),\n    [className, movingTabs.length, style, targetRef]\n  )\n}\n\nexport * from './utils'\nexport * from './components'\nexport const TileContainer = memo(TileContainerInner)\n","import React, { useState } from 'react'\nimport {\n  createTilePanes,\n  DraggableTitle,\n  TileBranchSubstance,\n  TileContainer,\n  TileProvider,\n  useGetRootNode,\n} from '../../../components'\nimport '../../../static/style.css'\n\nconst localStorageKey = 'react-tile-pane-layout'\n\nfunction Arbutus() {\n  const [number, count] = useState(1)\n  return (\n    <div onClick={() => count((n) => n + 1)} className=\"pane\">\n      {number} 颗杨梅\n    </div>\n  )\n}\n\nfunction Apple() {\n  return <div className=\"pane\">apple</div>\n}\n\nconst [nodeList, names] = createTilePanes({\n  arbutus: <Arbutus />,\n  cherry: <div className=\"pane\">cherry</div>,\n  apple: <Apple />,\n  banana: <div className=\"pane\">banana</div>,\n  lemon: <div className=\"pane\">lemon</div>,\n  mango: <div className=\"pane\">mango</div>,\n  pomelo: <div className=\"pane\">pomelo</div>,\n})\n\nconst rootPane: TileBranchSubstance = {\n  children: [\n    { children: [names.apple, names.cherry] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        { children: names.arbutus },\n        { children: names.lemon },\n        {\n          children: [\n            { children: names.mango, grow: 3 },\n            { children: names.pomelo },\n          ],\n        },\n      ],\n    },\n  ],\n}\n\nfunction SaveLayout() {\n  const getRootNode = useGetRootNode()\n  localStorage.setItem(localStorageKey, JSON.stringify(getRootNode()))\n  return <></>\n}\n\nexport const SimpleDemo: React.FC = () => {\n  const localRoot = localStorage.getItem(localStorageKey)\n  const root = localRoot\n    ? (JSON.parse(localRoot) as TileBranchSubstance)\n    : rootPane\n  return (\n    <TileProvider tilePanes={nodeList} rootNode={root}>\n      <SaveLayout />\n      <div className=\"App\">\n        <div className=\"fence\">\n          <TileContainer />\n        </div>\n      </div>\n      <DraggableTitle name={names.arbutus}>Drag this arbutus</DraggableTitle>\n      <a href=\"https://github.com/xcfox/react-tile-pane#quick-start\">\n        document\n      </a>\n    </TileProvider>\n  )\n}\n","import React from 'react'\n\nfunction createStyles<T extends Record<string, React.CSSProperties>>(\n  styles: T\n): T {\n  return styles\n}\n\nexport const thickness = 40\n\nexport const color = {\n  backL: '#1C242D',\n  back: '#181E26',\n  backD: '#12171D',\n  secondary: '#567091',\n  secondaryL: '#29394e',\n  secondaryLL: 'rgba(41,57,78,0.3)',\n  primary: '#60cbff',\n}\n\nexport const size = createStyles({\n  full: {\n    height: '100%',\n    width: '100%',\n  },\n})\n\nexport const flex = createStyles({\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  around: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  between: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  columnBetween: {\n    flexDirection: 'column',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n})\n\nexport const styles = createStyles({\n  container: {\n    color: '#fff',\n    height: 600,\n    width: 1000,\n  },\n  tabBar: {\n    background: color.backL,\n    ...size.full,\n    ...flex.columnBetween,\n  },\n  tabTitle: {\n    height: thickness * 0.8,\n    width: thickness,\n    ...flex.between,\n    background: color.secondaryLL,\n    marginBottom: 6,\n    cursor: 'move',\n    userSelect: 'none',\n  },\n  tabTitleOn: {\n    height: thickness * 0.8,\n    width: thickness,\n    ...flex.between,\n    background: color.secondaryL,\n    marginBottom: 6,\n    cursor: 'move',\n    userSelect: 'none',\n  },\n  pane: {\n    background: color.back,\n    ...size.full,\n    ...flex.center,\n  },\n  closeButton: {\n    height: thickness * 1.5,\n    width: thickness,\n    color: color.secondary,\n    fontSize: 35,\n    cursor: 'pointer',\n    ...flex.center,\n  },\n})\n","import React from 'react'\nimport { createTilePanes, TileBranchSubstance } from '../../../components'\n\nimport { styles } from './style'\n\nconst nodes = {\n  pineapple: <div style={styles.pane}>pineapple</div>,\n  banana: <div style={styles.pane}>banana</div>,\n  lemon: <div style={styles.pane}>lemon</div>,\n  grape: <div style={styles.pane}>grape</div>,\n  kiwifruit: <div style={styles.pane}>kiwifruit</div>,\n}\n\nexport type nodeNames = keyof typeof nodes\n\nexport const icons: Record<nodeNames, string> = {\n  banana: '🍌',\n  pineapple: '🍍',\n  lemon: '🍋',\n  grape: '🍇',\n  kiwifruit: '🥝',\n}\n\nexport const [nodeList, names] = createTilePanes(nodes)\n\nexport const rootPane: TileBranchSubstance = {\n  children: [\n    { children: [names.pineapple, names.banana] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        {\n          isRow: true,\n          children: [\n            { children: [names.lemon, names.grape], grow: 3 },\n            { children: names.kiwifruit },\n          ],\n        },\n      ],\n    },\n  ],\n}\n","import React, { useCallback, useMemo } from 'react'\nimport {\n  DraggableTitle,\n  PaneName,\n  TabBarPropsWithAction,\n  TabsBarConfig,\n} from '../../../../components'\nimport { icons, nodeNames } from '../panes'\nimport { color, flex, size, styles, thickness } from '../style'\n\nconst TabBar: React.FC<TabBarPropsWithAction> = ({ tabs, onTab, action }) => {\n  const tabBar = useCallback(\n    (tab: PaneName, i: number) => (\n      <DraggableTitle\n        style={i === onTab ? styles.tabTitleOn : styles.tabTitle}\n        name={tab}\n        key={tab}\n        onClick={() => action.switchTab(i)}\n      >\n        <div\n          style={{\n            background: i === onTab ? color.primary : color.secondaryL,\n            height: '100%',\n            width: 6,\n          }}\n        />\n        <div style={{ ...flex.center, ...size.full }}>\n          {icons[tab as nodeNames]}\n        </div>\n      </DraggableTitle>\n    ),\n    [action, onTab]\n  )\n\n  return useMemo(\n    () => (\n      <div style={styles.tabBar}>\n        <div>{tabs.map(tabBar)}</div>\n        <div onClick={() => action.closeTab(onTab)} style={styles.closeButton}>\n          ×\n        </div>\n      </div>\n    ),\n    [action, onTab, tabBar, tabs]\n  )\n}\n\nexport const tabBarConfig: TabsBarConfig = {\n  render: TabBar,\n  thickness,\n  position: 'left',\n  preBox: {\n    isRow: false,\n    isReverse: false,\n  },\n}\n","import React from 'react'\nimport {\n  DraggableTitle,\n  TileContainer,\n  TileProvider,\n  useGetLeaf,\n  useMovePane,\n  useGetRootNode,\n  TileBranchSubstance,\n} from '../../../components'\nimport { icons, nodeList, rootPane } from './panes'\nimport { color, styles } from './style'\nimport { tabBarConfig } from './tab-bar'\nimport css from './style/index.module.css'\n\nconst localStorageKey = 'react-tile-pane-left-tab-layout'\n\nfunction PaneIcon({ name }: { name: keyof typeof icons }) {\n  const getLeaf = useGetLeaf()\n  const move = useMovePane()\n  const leaf = getLeaf(name)\n  const isShowing = !!leaf\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: 60,\n        background: color.backL,\n        fontSize: 30,\n        padding: 10,\n        marginLeft: 5,\n        marginRight: 5,\n      }}\n    >\n      <div style={{ width: 40, height: 40, cursor: 'move' }}>\n        <DraggableTitle name={name}>{icons[name]}</DraggableTitle>\n      </div>\n      <div\n        onClick={() => move(name, isShowing ? null : [0.99, 0.5])}\n        style={{\n          cursor: 'pointer',\n          background: isShowing ? color.primary : color.secondary,\n          width: 14,\n          height: 14,\n          borderRadius: 99,\n        }}\n      />\n    </div>\n  )\n}\n\nexport const LeftTabDemo: React.FC = () => {\n  const localRoot = localStorage.getItem(localStorageKey)\n  const root = localRoot\n    ? (JSON.parse(localRoot) as TileBranchSubstance)\n    : rootPane\n  return (\n    <TileProvider\n      tilePanes={nodeList}\n      rootNode={root}\n      tabBar={tabBarConfig}\n      stretchBar={{\n        className: css.stretchBar,\n        style: (isRow) => ({ cursor: isRow ? 'ew-resize' : 'ns-resize' }),\n        position: 'previous',\n      }}\n    >\n      <TileContainer style={styles.container} />\n      <div style={{ display: 'flex', marginTop: 10 }}>\n        {(Object.keys(icons) as (keyof typeof icons)[]).map((name) => (\n          <PaneIcon key={name} {...{ name }} />\n        ))}\n      </div>\n      <AutoSaveLayout />\n    </TileProvider>\n  )\n}\n\nfunction AutoSaveLayout() {\n  const getRootNode = useGetRootNode()\n  localStorage.setItem(localStorageKey, JSON.stringify(getRootNode()))\n  return <></>\n}\n","import { useContext } from 'react'\nimport { TileLeavesContext } from '../..'\nimport { TileLeaf } from '../../../..'\nimport { PaneName } from '../../../../util'\n\nexport function useGetLeaf(): (name: PaneName) => TileLeaf | undefined {\n  const leaves = useContext(TileLeavesContext)\n  return (name) => {\n    const leaf = leaves.find((l) => l.children.includes(name))\n    return leaf\n  }\n}\n","import { useContext, useMemo } from 'react'\nimport {\n  TileBranchesContext,\n  TileLeavesContext,\n  TabsBarContext,\n  TitleRectsContext,\n  TileDispatchContext,\n} from '../..'\nimport { PaneName } from '../../../../util'\nimport {\n  calcLeafWithTitleRect,\n  calcPreBox,\n} from '../../../DraggableTitle/components/PreBox/util'\n\nexport type Vector2 = [number, number]\n\n/** Accepts an array in [x, y] format, with each number between 0 and 1, the pane will be moved to that position in the container.\n *  when null is passed in, the pane will be closed.\n * @example\n * move(names.apple, null)  // close the `apple` pane\n * move(names.apple, [0.99, 0.01])  // move `apple` pane to upper right corner\n */\nexport type MovePane = (name: PaneName, position?: Vector2 | null) => void\n\nexport function useMovePane(): MovePane {\n  const dispatch = useContext(TileDispatchContext)\n  const branches = useContext(TileBranchesContext)\n  const leaves = useContext(TileLeavesContext)\n  const { preBox: preBoxInTabBar } = useContext(TabsBarContext)\n  const titleRects = useContext(TitleRectsContext)\n\n  const leafWithTitleRects = useMemo(\n    () => calcLeafWithTitleRect(titleRects, leaves),\n    [leaves, titleRects]\n  )\n\n  return (name, position) => {\n    if (!position) {\n      dispatch({ leafToCloseTab: { name } })\n      return\n    }\n\n    const paneWithPreBox = calcPreBox(\n      branches,\n      leaves,\n      leafWithTitleRects,\n      position,\n      preBoxInTabBar\n    )\n    dispatch({ tabToStartMoving: { name } })\n    dispatch({ tabToStopMoving: { pane: name, preBox: paneWithPreBox } })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport '../static/style.css'\nimport { LeftTabDemo, SimpleDemo } from './demo'\n\nconst demos = {\n  'tab-bar in left demo': <LeftTabDemo />,\n  'simple demo': <SimpleDemo />,\n}\n\nconst color: Record<keyof typeof demos, [string, string]> = {\n  'tab-bar in left demo': ['#161718', '#ffffff'],\n  'simple demo': ['#ffffff', '#000000'],\n}\n\nconst App: React.FC = () => {\n  const [demo, setDemo] = useState<keyof typeof demos>('tab-bar in left demo')\n\n  useEffect(() => {\n    document.body.style.background = color[demo][0]\n    document.body.style.color = color[demo][1]\n  }, [demo])\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <div style={{ height: 30, display: 'flex' }}>\n        {(Object.keys(demos) as (keyof typeof demos)[]).map((key) => (\n          <div\n            style={{ marginLeft: 20, marginRight: 20 }}\n            key={key}\n            onClick={() => setDemo(key)}\n          >\n            {key}\n          </div>\n        ))}\n      </div>\n      {demos[demo]}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport reportWebVitals from './common/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}