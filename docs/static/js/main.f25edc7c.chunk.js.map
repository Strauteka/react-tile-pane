{"version":3,"sources":["components/titlePane/container/config/tabsBar/index.tsx","components/titlePane/container/config/option/index.ts","components/titlePane/container/config/TileLeaves/index.ts","components/titlePane/container/model/ContainerRectContext/index.ts","components/titlePane/container/model/UpdateManuallyContext/index.ts","components/titlePane/util/titlePane/takeOverChild/index.ts","components/titlePane/util/titlePane/reCalcChildGrow/index.ts","components/titlePane/util/titlePane/reCalcChildrenPosition/index.ts","components/titlePane/util/titlePane/removeSelf/index.ts","components/titlePane/util/titlePane/calcPosition.ts","components/titlePane/util/titlePane/removeTab/index.ts","components/titlePane/util/titlePane/movingTab/index.ts","components/titlePane/util/titlePane/insertLeaf/index.ts","components/titlePane/util/titlePane/unfoldPane.ts","components/titlePane/util/titlePane/calcPreBox.ts","components/titlePane/util/titlePane/index.ts","components/titlePane/util/stretchBar/move/index.ts","components/titlePane/util/stretchBar/index.ts","components/titlePane/util/isNil.ts","components/titlePane/container/model/ContainerContext/index.ts","components/titlePane/container/model/index.tsx","components/titlePane/container/hook/useContainer.ts","components/titlePane/container/components/StretchBar/util/calcBarStyles.ts","components/titlePane/container/components/StretchBar/index.tsx","components/titlePane/container/components/pane/components/Leaves/index.tsx","components/titlePane/container/components/pane/util/toFlexDirection/index.ts","components/titlePane/container/components/pane/index.tsx","components/titlePane/util/inLimit.ts","components/titlePane/container/util/toStyles.ts","components/titlePane/container/index.tsx","components/titlePane/DraggableTitle/components/PreBox/index.tsx","components/titlePane/DraggableTitle/index.tsx","components/titlePane/DraggableTitle/hook/useDragAndPosition/index.ts","App/App.tsx","components/titlePane/util/tileLeaf/index.ts","common/reportWebVitals.ts","index.tsx"],"names":["DefaultTabsBar","calcLayout","pane","currentIndex","leaves","style","display","width","justifyContent","map","it","i","DraggableTitle","id","onClick","onTab","color","background","console","log","removeTab","TabsBarContext","createContext","defaultOption","tabsBarPosition","stretchBarThickness","OptionContext","TileLeavesContext","defaultRect","left","top","height","bottom","right","x","y","ContainerRefContext","ContainerRectContext","UpdateManuallyContext","takeOverChild","children","this","parent","indexInParent","isTileNodeIDs","length","oneChild","reCalcChildGrow","grows","calcChildGrows","forEach","child","grow","reCalcChildrenPosition","onlyChildren","childPositions","calcChildPosition","c","includes","isNeedReCalc","position","removeSelf","undefined","splice","growsSolid","growSum","reduce","s","n","isRow","childLeft","arr","push","childTop","index","newChildren","slice","startMovingTab","movingTabs","newMovingTabs","endMovingTab","indexInChildren","findIndex","indexInMovingTabs","insertLeaf","into","isNext","isLeaf","isSegment","newPane","TilePaneEntity","segment","fission","unfoldPane","panes","stretchBars","unfold","p","prevPane","bar","StretchBarEntity","branchProportion","leafProportion","isInPane","args","isTitlePane","Object","assign","Array","childrenPanes","renderReactComponent","calcConstructor","Math","random","toString","list","move","distance","offset","parentPane","previousPaneGrow","previousPane","nextPaneGrow","nextPane","isMoved","growA","growB","isValidGrow","isNotNil","target","ContainerContext","paneLeaves","PaneProvider","rootPane","tileLeaves","tabsBar","option","rootPaneEntityRef","useRef","useState","current","setPanes","reCalcLayout","useCallback","useContainer","useMemo","filter","useMeasure","scroll","targetRef","containerRect","Provider","value","calcBarStyles","thickness","StretchBarInner","useContext","moveBar","mx","my","bind","useDrag","down","delta","enabled","StretchBar","React","memo","LeafInner","leaf","isShowing","flexGrow","node","Leaf","tabsBarPositionToFlexDirection","Pane","TabBar","leafList","find","max","min","inLimit","visibility","flexDirection","boxSizing","padding","PaneContainerInner","ref","b","PaneContainer","PreBoxInner","paneWithPreBoxRef","innerPosition","paneWithPreBox","branches","calcPreBox","boxPosition","proportion","calcBoxPosition","zIndex","PreBox","DraggableTitleInner","setPosition","useGesture","onDrag","xy","onDragStart","onDragEnd","drag","threshold","useDragAndPosition","transform","Arbutus","number","count","className","Apple","obj","keys","key","createTileLeaves","arbutus","cherry","apple","banana","lemon","mango","pomelo","nodeList","names","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f25edc7c.chunk.js","sourcesContent":["import React, { createContext } from 'react'\nimport { DraggableTitle, TileLeaf, TilePaneEntity } from '../../..'\n\nexport type TabsBarProps = {\n  calcLayout: () => void\n  pane: TilePaneEntity\n  currentIndex: number\n  leaves: TileLeaf[]\n}\n\nexport const DefaultTabsBar: React.FC<TabsBarProps> = ({\n  calcLayout,\n  pane,\n  currentIndex,\n  leaves,\n}: TabsBarProps) => {\n  return (\n    <div\n      style={{ display: 'flex', width: '100%', justifyContent: 'space-around' }}\n    >\n      {leaves.map((it, i) => (\n        <div\n          style={{\n            display: 'flex',\n          }}\n          key={it.id}\n        >\n          <DraggableTitle id={leaves[i].id}>\n            <div\n              onClick={() => {\n                pane.onTab = i\n                calcLayout()\n              }}\n              style={{\n                color: currentIndex === i ? '#000' : '#999',\n                background: '#d1f0b5',\n              }}\n            >\n              {it.id}\n            </div>\n          </DraggableTitle>\n          <div\n            onClick={() => {\n              console.log(pane)\n              console.log(i)\n              pane.removeTab(i)\n              calcLayout()\n            }}\n          >\n            off\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\nexport const TabsBarContext = createContext(DefaultTabsBar)\n","import { createContext } from 'react'\n\nexport type TabsBarPosition = 'top' | 'bottom' | 'left' | 'right'\nexport interface Option {\n  tabsBarPosition: TabsBarPosition\n  stretchBarThickness: number\n}\n\nexport const defaultOption: Option = {\n  tabsBarPosition: 'top',\n  stretchBarThickness: 8,\n}\n\nexport const OptionContext = createContext<Option>(defaultOption)\n","import { createContext } from 'react'\nimport { TileLeaf } from '../../..'\n\nexport const TileLeavesContext = createContext<TileLeaf[]>([])\n","import { createContext } from 'react'\nimport useMeasure, { RectReadOnly } from 'react-use-measure'\n\nconst defaultRect: RectReadOnly = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n}\n\nexport const ContainerRefContext = createContext<\n  ReturnType<typeof useMeasure>[0]\n>(() => null)\n\nexport const ContainerRectContext = createContext(defaultRect)\n","import { createContext } from 'react'\n\nexport const UpdateManuallyContext = createContext<() => void>(() => void 0)\n","import { isTileNodeIDs, TilePaneEntity } from '..'\n\nexport function takeOverChild(this: TilePaneEntity) {\n  const { children, parent, indexInParent } = this\n  if (!parent || !indexInParent) return\n  if (isTileNodeIDs(parent.children)) return\n  if (isTileNodeIDs(children)) return\n  if (children.length === 1) {\n    const oneChild = children[0]\n    this.children = oneChild.children\n  }\n}\n","import { TilePaneEntity, calcChildGrows, isTileNodeIDs } from '..'\n\nexport function reCalcChildGrow(this: TilePaneEntity) {\n  const { children } = this\n  if (isTileNodeIDs(children)) return\n  const grows = calcChildGrows(children)\n  children.forEach((child, i) => {\n    child.grow = grows[i]\n    child.indexInParent = i\n  })\n}\n","import { TilePaneEntity, calcChildPosition, isTileNodeIDs } from '../..'\n\nexport function reCalcChildrenPosition(\n  this: TilePaneEntity,\n  onlyChildren?: TilePaneEntity[]\n) {\n  const { children } = this\n  if (!isTileNodeIDs(children)) {\n    const grows = children.map((c) => c.grow)\n    const childPositions = calcChildPosition(this, grows)\n    children.forEach((pane, i) => {\n      if (isNeedReCalc(pane)) {\n        pane.position = childPositions[i]\n        pane.reCalcChildrenPosition()\n      }\n    })\n  }\n  function isNeedReCalc(pane: TilePaneEntity): boolean {\n    if (!onlyChildren) return true\n    return onlyChildren.includes(pane)\n  }\n}\n","import { isTileNodeIDs, TilePaneEntity } from '../..'\n\nexport function removeSelf(this: TilePaneEntity) {\n  const { parent } = this\n  if (!parent) return\n  if (this.indexInParent === undefined) return\n  if (isTileNodeIDs(parent.children)) return\n  parent.children.splice(this.indexInParent, 1)\n  parent.takeOverChild()\n  parent.reCalcChildGrow()\n  parent.reCalcChildrenPosition()\n}\n","import { TilePaneEntity, TitlePaneConstructor, TitlePaneInterface } from '.'\n\nexport type PanePosition = {\n  top: number\n  left: number\n  width: number\n  height: number\n}\n\nexport function calcConstructor(\n  parent: TilePaneEntity,\n  children: TitlePaneInterface[]\n): TitlePaneConstructor[] {\n  const grows = calcChildGrows(children)\n  const positions = calcChildPosition(parent, grows)\n  return positions.map((position, i) => ({\n    ...children[i],\n    position,\n    parent,\n    indexInParent: i,\n    grow: grows[i],\n    renderReactComponent: parent.reCalcChildrenPosition,\n  }))\n}\n\nexport function calcChildGrows(children: { grow?: number }[]) {\n  const growsSolid = children.map((c) => c.grow ?? 1)\n  const growSum = growsSolid.reduce((s, n) => (s += n), 0) // 部分值\n  const grows = growsSolid.map((c) => c / growSum) // 相对值\n  return grows\n}\n\nexport function calcChildPosition(\n  parent: TilePaneEntity,\n  grows: number[]\n): PanePosition[] {\n  const { isRow, position } = parent\n  const { top, left, width, height } = position\n  if (isRow) {\n    const childLeft = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 left\n        if (i > 0) arr.push(arr[i - 1] + width * grows[i - 1])\n        return arr\n      },\n      [left]\n    )\n    return grows.map((n, i) => ({\n      top,\n      height,\n      width: n * width,\n      left: childLeft[i],\n    }))\n  } else {\n    const childTop = grows.reduce<number[]>(\n      (arr, n, i) => {\n        // 计算子元素 top\n        if (i > 0) arr.push(arr[i - 1] + height * grows[i - 1])\n        return arr\n      },\n      [top]\n    )\n    return grows.map((n, i) => ({\n      left,\n      width,\n      height: n * height,\n      top: childTop[i],\n    }))\n  }\n}\n","import { isTileNodeIDs, TilePaneEntity } from '..'\n\nexport function removeTab(this: TilePaneEntity, index: number) {\n  const { children } = this\n  if (!isTileNodeIDs(children)) return\n  const newChildren = children.slice()\n  newChildren.splice(index, 1)\n  if (newChildren.length === 0) {\n    this.removeSelf()\n    return\n  }\n  this.children = newChildren\n}\n","import { isTileNodeIDs, TilePaneEntity } from '..'\nimport { TileLeafID } from '../..'\n\nexport function startMovingTab(this: TilePaneEntity, id: TileLeafID) {\n  const { children } = this\n  if (!isTileNodeIDs(children)) return\n  if (this.movingTabs.includes(id)) return\n  const newMovingTabs = this.movingTabs.slice()\n  newMovingTabs.push(id)\n  this.movingTabs = newMovingTabs\n  if (this.movingTabs.length === this.children.length) {\n    this.grow = 0\n    this.parent?.reCalcChildGrow()\n    this.parent?.reCalcChildrenPosition()\n  }\n}\n\nexport function endMovingTab(this: TilePaneEntity, id: TileLeafID) {\n  const { children } = this\n  if (!isTileNodeIDs(children)) return\n  const indexInChildren = children.findIndex((it) => it === id)\n  const indexInMovingTabs = this.movingTabs.findIndex((it) => it === id)\n  const newMovingTabs = this.movingTabs.slice()\n  newMovingTabs.splice(indexInMovingTabs, 1)\n  const newChildren = children.slice()\n  newChildren.splice(indexInChildren, 1)\n  this.movingTabs = newMovingTabs\n  this.children = newChildren\n  if (this.grow === 0) {\n    this.removeSelf()\n  }\n}\n","import { Into, isTileNodeIDs, TilePaneEntity } from '..'\nimport { TileLeafID } from '../..'\n\nexport function insertLeaf(this: TilePaneEntity, id: TileLeafID, into: Into) {\n  const { children, indexInParent = 0, parent, onTab, isRow } = this\n\n  /** 分割 */\n  const segment = (isNext: boolean) => {\n    if (!parent) return\n    const grow = this.grow / 2\n    this.grow = grow\n    const newPane = new TilePaneEntity({\n      grow,\n      children: [id],\n      parent,\n    })\n    const i = isNext ? indexInParent + 1 : indexInParent\n    parent.children.splice(i, 0, newPane)\n    parent.reCalcChildGrow()\n    parent.reCalcChildrenPosition()\n  }\n\n  /** 分裂 */\n  const fission = (isNext: boolean) => {\n    const grow = 0.5\n    const child = new TilePaneEntity({\n      isRow,\n      grow,\n      children,\n      onTab,\n      parent: this,\n    })\n    const newPane = new TilePaneEntity({\n      grow,\n      children: [id],\n      parent: this,\n    })\n    const newChildren = isNext ? [child, newPane] : [newPane, child]\n    this.children = newChildren\n    this.isRow = ['left', 'right'].includes(into)\n    this.reCalcChildGrow()\n    this.reCalcChildrenPosition()\n  }\n\n  if (into === 'center') {\n    if (!isTileNodeIDs(children)) return\n    const newChildren = children.slice()\n    newChildren.push(id)\n    this.children = newChildren\n    this.onTab = newChildren.length - 1\n    return\n  }\n  const isNext = ['right', 'bottom'].includes(into)\n  const isLeaf = isTileNodeIDs(children)\n  const isSegmental = isSegment(this, isLeaf, into)\n  if (isSegmental) segment(isNext)\n  else fission(isNext)\n}\n\nfunction isSegment(pane: TilePaneEntity, isLeaf: boolean, into: Into): boolean {\n  if (!isLeaf) return false\n  const isRow = pane.parent?.isRow\n  const segmentInto: Into[] = isRow ? ['left', 'right'] : ['top', 'bottom']\n  return segmentInto.includes(into)\n}\n","import { isTileNodeIDs, StretchBarEntity, TilePaneEntity } from '..'\n\nexport function unfoldPane(pane: TilePaneEntity) {\n  const panes: TilePaneEntity[] = [pane]\n  const stretchBars: StretchBarEntity[] = []\n  unfold(pane)\n  function unfold(pane: TilePaneEntity) {\n    const { children } = pane\n    !isTileNodeIDs(children) &&\n      children.forEach((p, i) => {\n        unfold(p)\n        panes.push(p)\n        const prevPane = children[i - 1]\n        if (!prevPane) return\n        const bar = new StretchBarEntity(pane, prevPane, p)\n        stretchBars.push(bar)\n      })\n  }\n  return {\n    panes,\n    stretchBars,\n  }\n}\n","import {\n  isTileNodeIDs,\n  PanePosition,\n  TilePaneBranch,\n  TilePaneEntity,\n  TilePaneLeaf,\n} from '.'\n\nconst branchProportion = 0.05\nconst leafProportion = 0.3\n\nexport type Into = 'top' | 'bottom' | 'left' | 'right' | 'center'\nexport type PaneWithPreBox = {\n  pane: TilePaneEntity\n  into: Into\n}\nexport function calcPreBox(\n  panes: TilePaneEntity[],\n  innerPosition: [number, number]\n): PaneWithPreBox | undefined {\n  if (!innerPosition) return\n  const [x, y] = innerPosition\n  const branches = panes.filter(\n    (p) => !isTileNodeIDs(p.children)\n  ) as TilePaneBranch[]\n  for (const pane of branches) {\n    if (isInPane(pane.position, innerPosition)) {\n      const { left, top, width, height } = pane.position\n      if (pane.isRow) {\n        if (y - top < height * branchProportion) {\n          return { pane, into: 'top' }\n        }\n        if (top + height - y < height * branchProportion) {\n          return { pane, into: 'bottom' }\n        }\n      } else {\n        if (x - left < width * branchProportion) {\n          return { pane, into: 'left' }\n        }\n        if (left + width - x < width * branchProportion) {\n          return { pane, into: 'right' }\n        }\n      }\n    }\n  }\n\n  const leaves = panes.filter((p) =>\n    isTileNodeIDs(p.children)\n  ) as TilePaneLeaf[]\n  for (const pane of leaves) {\n    if (isInPane(pane.position, innerPosition)) {\n      const { left, top, width, height } = pane.position\n      if (x - left < width * leafProportion) {\n        return { pane, into: 'left' }\n      }\n      if (left + width - x < width * leafProportion) {\n        return { pane, into: 'right' }\n      }\n      if (y - top < height * leafProportion) {\n        return { pane, into: 'top' }\n      }\n      if (top + height - y < height * leafProportion) {\n        return { pane, into: 'bottom' }\n      }\n      return { pane, into: 'center' }\n    }\n  }\n}\n\nfunction isInPane(position: PanePosition, [x, y]: [number, number]) {\n  const { left, top, width, height } = position\n  return left < x && x < left + width && top < y && y < top + height\n}\n","import { takeOverChild } from './takeOverChild'\nimport { reCalcChildGrow } from './reCalcChildGrow'\nimport { reCalcChildrenPosition } from './reCalcChildrenPosition'\nimport { removeSelf } from './removeSelf'\nimport { calcConstructor, PanePosition } from './calcPosition'\nimport { TileLeafID } from '..'\nimport { removeTab } from './removeTab'\nimport { startMovingTab, endMovingTab } from './movingTab'\nimport { insertLeaf } from './insertLeaf'\n\nexport type TilePaneLayout = 'row' | 'column' | 'stack'\n\nexport class TilePaneEntity {\n  // 输入值\n  isRow?: boolean\n  onTab?: number\n  grow = 1\n\n  //只在构造时输入\n  parent?: TilePaneEntity\n  indexInParent?: number\n  position = {\n    top: 0,\n    left: 0,\n    width: 1,\n    height: 1,\n  } as PanePosition\n\n  // 需要转换的值\n  children: TileLeafID[] | TilePaneEntity[]\n\n  // 固定值\n  isTitlePane = true\n  id: string\n\n  movingTabs: TileLeafID[] = []\n\n  constructor(public args: TitlePaneConstructor) {\n    Object.assign(this, args)\n    const { children } = args\n    if (children instanceof Array) {\n      // 如果子元素仍为 tile-panes\n      if (isTileNodeIDs(children)) {\n        this.children = children\n      } else {\n        const childrenPanes = calcConstructor(this, children).map(\n          (it) => new TilePaneEntity(it)\n        )\n        this.children = childrenPanes\n      }\n    } else {\n      // 如果子元素为 React-Child\n      this.children = [children]\n    }\n    this.id = Math.random().toString()\n  }\n\n  reCalcChildrenPosition = reCalcChildrenPosition\n  reCalcChildGrow = reCalcChildGrow\n  removeSelf = removeSelf\n  removeTab = removeTab\n  takeOverChild = takeOverChild\n  insertLeaf = insertLeaf\n\n  startMovingTab = startMovingTab\n  endMovingTab = endMovingTab\n}\n\nexport type TilePaneBranch = Omit<TilePaneEntity, 'children'> & {\n  children: TilePaneEntity[]\n}\n\nexport type TilePaneLeaf = Omit<TilePaneEntity, 'children'> & {\n  children: TileLeafID[]\n}\n\nexport function isTileNodeIDs(\n  list: TileLeafID[] | TitlePaneInterface[] | TilePaneEntity[]\n): list is TileLeafID[] {\n  return !(list[0] instanceof Object)\n}\n\nexport type TitlePaneConstructor = Pick<\n  TilePaneEntity,\n  'isRow' | 'onTab' | 'parent' | 'indexInParent'\n> & {\n  children: TileLeafID | TileLeafID[] | TitlePaneInterface[]\n  position?: PanePosition\n  grow?: number\n}\n\nexport type TitlePaneInterface = Omit<\n  TitlePaneConstructor,\n  'parent' | 'position' | 'child' | 'renderReactComponent'\n>\n\nexport * from './calcPosition'\nexport * from './unfoldPane'\nexport * from './calcPreBox'\n","import { StretchBarEntity } from '..'\n\n/**\n * @param {number} distance percentage in container\n * @return {boolean} Did the move succeed?\n */\nexport function move(this: StretchBarEntity, distance: number): boolean {\n  const lengthSum = this.parentPane.isRow\n    ? this.parentPane.position.width\n    : this.parentPane.position.height\n  const offset = distance / lengthSum\n  const previousPaneGrow = this.previousPane.grow + offset\n  const nextPaneGrow = this.nextPane.grow - offset\n  const isMoved = isValidGrow(previousPaneGrow, nextPaneGrow)\n  if (isMoved) {\n    this.previousPane.grow = previousPaneGrow\n    this.nextPane.grow = nextPaneGrow\n    this.parentPane.reCalcChildrenPosition([this.previousPane, this.nextPane])\n  }\n  return isMoved\n}\n\nfunction isValidGrow(growA: number, growB: number): boolean {\n  if (growA < 0.04 || growB < 0.04) return false\n  const growSum = growA + growB\n  if (growA > growSum || growB > growSum) return false\n  return true\n}\n","import { TilePaneEntity } from '..'\nimport { move } from './move'\n\nexport class StretchBarEntity {\n  constructor(\n    public parentPane: TilePaneEntity,\n    public previousPane: TilePaneEntity,\n    public nextPane: TilePaneEntity\n  ) {}\n  position = this.nextPane.position\n  move = move\n}\n","export function isNotNil<T extends unknown>(\n  target: T | undefined | null\n): target is T {\n  return target !== null && target !== undefined\n}\n","import { createContext } from 'react'\nimport { StretchBarEntity, TilePaneEntity, TilePaneLeaf } from '../../..'\n\nexport const ContainerContext = createContext<{\n  panes: TilePaneEntity[]\n  stretchBars: StretchBarEntity[]\n  paneLeaves: TilePaneLeaf[]\n}>({ panes: [], stretchBars: [], paneLeaves: [] })\n","import React, { FC, useMemo } from 'react'\nimport {\n  ContainerRectContext,\n  ContainerRefContext,\n} from './ContainerRectContext'\nimport { UpdateManuallyContext } from './UpdateManuallyContext'\nimport {\n  isTileNodeIDs,\n  TileLeaf,\n  TilePaneLeaf,\n  TitlePaneInterface,\n} from '../..'\nimport {\n  defaultOption,\n  DefaultTabsBar,\n  OptionContext,\n  TabsBarContext,\n  TabsBarProps,\n  TileLeavesContext,\n  Option,\n} from '../config'\nimport useMeasure from 'react-use-measure'\nimport { useContainer } from '../hook'\nimport { ContainerContext } from './ContainerContext'\n\nexport interface ProviderOptionProps {\n  rootPane: TitlePaneInterface\n  children?: React.ReactNode\n  tileLeaves: TileLeaf[]\n  tabsBar?: React.FC<TabsBarProps>\n  option?: Option\n}\n\nexport const PaneProvider: FC<ProviderOptionProps> = ({\n  rootPane,\n  children,\n  tileLeaves,\n  tabsBar = DefaultTabsBar,\n  option = defaultOption,\n}: ProviderOptionProps) => {\n  const { panes, stretchBars, reCalcLayout } = useContainer(rootPane)\n  const paneLeaves = useMemo(\n    () => panes.filter((p) => isTileNodeIDs(p.children)) as TilePaneLeaf[],\n    [panes]\n  )\n  const [targetRef, containerRect] = useMeasure({ scroll: true })\n  return (\n    <ContainerContext.Provider value={{ panes, stretchBars, paneLeaves }}>\n      <ContainerRefContext.Provider value={targetRef}>\n        <ContainerRectContext.Provider value={containerRect}>\n          <UpdateManuallyContext.Provider value={reCalcLayout}>\n            <TileLeavesContext.Provider value={tileLeaves}>\n              <TabsBarContext.Provider value={tabsBar}>\n                <OptionContext.Provider value={option}>\n                  {children}\n                </OptionContext.Provider>\n              </TabsBarContext.Provider>\n            </TileLeavesContext.Provider>\n          </UpdateManuallyContext.Provider>\n        </ContainerRectContext.Provider>\n      </ContainerRefContext.Provider>\n    </ContainerContext.Provider>\n  )\n}\n\nexport {\n  ContainerRectContext,\n  UpdateManuallyContext,\n  TileLeavesContext,\n  ContainerContext,\n  ContainerRefContext,\n}\n","import { useCallback, useRef, useState } from 'react'\nimport { TilePaneEntity, TitlePaneInterface, unfoldPane } from '../../util'\n\nexport function useContainer(rootPane: TitlePaneInterface) {\n  const rootPaneEntityRef = useRef(new TilePaneEntity(rootPane))\n  const [{ panes, stretchBars }, setPanes] = useState(\n    unfoldPane(rootPaneEntityRef.current)\n  )\n\n  const reCalcLayout = useCallback(() => {\n    setPanes(unfoldPane(rootPaneEntityRef.current))\n  }, [])\n\n  return { panes, stretchBars, rootPaneEntityRef, reCalcLayout }\n}\n","import { PanePosition } from '../../../..'\n\nexport function calcBarStyles(\n  { top, left, width, height }: PanePosition,\n  thickness: number,\n  isRow?: boolean\n) {\n  return {\n    top: isRow ? top * 100 + '%' : `calc(${top * 100}% - ${thickness / 2}px)`,\n    left: isRow\n      ? `calc(${left * 100}% - ${thickness / 2}px)`\n      : left * 100 + '%',\n    width: isRow ? thickness : width * 100 + '%',\n    height: isRow ? height * 100 + '%' : thickness,\n  }\n}\n","import React, { useCallback, useContext, useMemo } from 'react'\nimport { useDrag } from 'react-use-gesture'\nimport { StretchBarEntity } from '../../..'\nimport { OptionContext } from '../../config'\nimport { ContainerRectContext, UpdateManuallyContext } from '../../model'\nimport { calcBarStyles } from './util'\n\nexport interface StretchBarProps {\n  bar: StretchBarEntity\n}\n\nconst StretchBarInner: React.FC<StretchBarProps> = ({ bar }) => {\n  const containerRect = useContext(ContainerRectContext)\n  const calcLayout = useContext(UpdateManuallyContext)\n  const { stretchBarThickness } = useContext(OptionContext)\n  const moveBar = useCallback(\n    (mx: number, my: number) => {\n      const distance = bar.parentPane.isRow\n        ? mx / containerRect.width\n        : my / containerRect.height\n      bar.move(distance)\n      calcLayout()\n    },\n    [bar, containerRect.height, containerRect.width, calcLayout]\n  )\n\n  const bind = useDrag(\n    ({ down, delta: [mx, my] }) => {\n      down && moveBar(mx, my)\n    },\n    { enabled: true }\n  )\n  const { top, left, width, height } = bar.nextPane.position\n  const { isRow } = bar.parentPane\n\n  return useMemo(\n    () => (\n      <div\n        {...bind()}\n        style={{\n          position: 'absolute',\n          background: '#8191ec66',\n          ...calcBarStyles(\n            { top, left, width, height },\n            stretchBarThickness,\n            isRow\n          ),\n        }}\n      />\n    ),\n    [bind, height, isRow, left, stretchBarThickness, top, width]\n  )\n}\n\nexport const StretchBar = React.memo(StretchBarInner)\n","import React, { memo, useMemo } from 'react'\nimport { TileLeafID } from '../../../../..'\n\nexport interface LeafProps {\n  leaf: { id: TileLeafID; node: React.ReactChild }\n  currentIndex: number\n  index: number\n}\n\nconst LeafInner: React.FC<LeafProps> = ({ leaf, currentIndex, index }) => {\n  const isShowing = currentIndex === index\n  return useMemo(\n    () => (\n      <div\n        style={{\n          flexGrow: isShowing ? 1 : 0,\n          display: isShowing ? undefined : 'none',\n        }}\n      >\n        {leaf.node}\n      </div>\n    ),\n    [isShowing, leaf.node]\n  )\n}\n\nexport const Leaf = memo(LeafInner)\n","import { TabsBarPosition } from '../../../../config'\n\nexport function tabsBarPositionToFlexDirection(\n  tabsBarPosition: TabsBarPosition\n): 'column' | 'column-reverse' | 'row' | 'row-reverse' {\n  switch (tabsBarPosition) {\n    case 'top':\n      return 'column'\n    case 'bottom':\n      return 'column-reverse'\n    case 'left':\n      return 'row'\n    case 'right':\n      return 'row-reverse'\n  }\n}\n","import React, { useContext, useMemo } from 'react'\nimport { isNotNil } from '../../..'\nimport { inLimit, TilePaneLeaf } from '../../../util'\nimport { TabsBarContext, OptionContext } from '../../config'\nimport { TileLeavesContext, UpdateManuallyContext } from '../../model'\nimport { toStyles } from '../../util'\nimport { Leaf } from './components'\nimport { tabsBarPositionToFlexDirection } from './util'\n\nexport interface PaneProps {\n  pane: TilePaneLeaf\n}\n\nexport const Pane: React.FC<PaneProps> = ({ pane }) => {\n  const tileLeaves = useContext(TileLeavesContext)\n  const TabBar = useContext(TabsBarContext)\n  const { stretchBarThickness, tabsBarPosition } = useContext(OptionContext)\n\n  const leafList = useMemo(\n    () =>\n      pane.children\n        .map((id) => tileLeaves.find((node) => node.id === id))\n        .filter(isNotNil),\n    [pane.children, tileLeaves]\n  )\n  const currentIndex = useMemo(\n    () => inLimit(pane.onTab ?? 0, pane.children.length - 1),\n    [pane.children.length, pane.onTab]\n  )\n\n  const calcLayout = useContext(UpdateManuallyContext)\n\n  const { top, left, width, height } = pane.position\n\n  pane.movingTabs.length && console.log(pane.movingTabs)\n  const { movingTabs } = pane\n\n  return useMemo(\n    () => (\n      <div\n        style={{\n          visibility: pane.grow === 0 ? 'hidden' : undefined,\n          display: 'flex',\n          flexDirection: tabsBarPositionToFlexDirection(tabsBarPosition),\n          position: 'absolute',\n          boxSizing: 'border-box',\n          padding: stretchBarThickness / 2,\n          ...toStyles({ top, left, width, height }),\n        }}\n      >\n        <TabBar {...{ calcLayout, pane, leaves: leafList, currentIndex }} />\n        {leafList.map(\n          (node, index) =>\n            !movingTabs.includes(node.id) && (\n              <Leaf key={node.id} {...{ leaf: node, currentIndex, index }} />\n            )\n        )}\n      </div>\n    ),\n    [\n      tabsBarPosition,\n      stretchBarThickness,\n      top,\n      left,\n      width,\n      height,\n      TabBar,\n      calcLayout,\n      pane,\n      leafList,\n      currentIndex,\n      movingTabs,\n    ]\n  )\n}\n","export function inLimit(value: number, max: number, min = 0): number {\n  if (value < min) return min\n  if (value > max) return max\n  return value\n}\n","import { PanePosition } from '../../util'\n\nexport function toStyles(position: PanePosition): React.CSSProperties {\n  const { top, left, width, height } = position\n  return {\n    top: top * 100 + '%',\n    left: left * 100 + '%',\n    width: width * 100 + '%',\n    height: height * 100 + '%',\n  }\n}\n","import React, { memo, useContext, useMemo } from 'react'\nimport { Pane, StretchBar } from './components'\nimport {\n  PaneProvider,\n  ProviderOptionProps,\n  ContainerContext,\n  ContainerRefContext,\n} from './model'\n\nexport interface PaneContainerProps {\n  width?: string | number\n  height?: string | number\n}\n\nconst PaneContainerInner: React.FC<PaneContainerProps> = ({\n  width = '100%',\n  height = '100%',\n}) => {\n  const { paneLeaves, stretchBars } = useContext(ContainerContext)\n  const targetRef = useContext(ContainerRefContext)\n\n  return useMemo(\n    () => (\n      <div ref={targetRef} style={{ position: 'relative', width, height }}>\n        {paneLeaves.map((pane) => (\n          <Pane key={pane.id} {...{ pane }} />\n        ))}\n        {stretchBars.map((b, i) => (\n          <StretchBar bar={b} key={b.nextPane.id ?? i} />\n        ))}\n      </div>\n    ),\n    [targetRef, width, height, paneLeaves, stretchBars]\n  )\n}\n\nexport const PaneContainer = memo(PaneContainerInner)\n\nexport const PaneContainerWithProvider: React.FC<\n  ProviderOptionProps & PaneContainerProps\n> = ({ width, height, ...rest }) => {\n  return useMemo(\n    () => (\n      <PaneProvider {...rest}>\n        <PaneContainer {...{ width, height }} />\n      </PaneProvider>\n    ),\n    [height, rest, width]\n  )\n}\n\nexport { PaneProvider }\n","import React, { memo, useContext, useMemo } from 'react'\nimport { Vector2 } from 'react-use-gesture/dist/types'\nimport { RectReadOnly } from 'react-use-measure'\nimport {\n  calcPreBox,\n  Into,\n  PanePosition,\n  PaneWithPreBox,\n  TilePaneEntity,\n} from '../../..'\nimport {\n  ContainerRectContext,\n  ContainerContext,\n} from '../../../container/model'\n\nexport interface PreBoxProps {\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>\n  position: Vector2\n}\n\nconst PreBoxInner: React.FC<PreBoxProps> = ({\n  position,\n  paneWithPreBoxRef,\n}) => {\n  const containerRect = useContext(ContainerRectContext)\n  const { panes } = useContext(ContainerContext)\n  const innerPosition = useMemo(() => {\n    return [\n      (position[0] - containerRect.left) / containerRect.width,\n      (position[1] - containerRect.top) / containerRect.height,\n    ] as Vector2\n  }, [containerRect, position])\n  const paneWithPreBox = useMemo(() => calcPreBox(panes, innerPosition), [\n    innerPosition,\n    panes,\n  ])\n  paneWithPreBoxRef.current = paneWithPreBox\n  return useMemo(() => {\n    if (!paneWithPreBox) return null\n    const boxPosition = calcBoxPosition(paneWithPreBox, containerRect)\n\n    return (\n      <div\n        style={{\n          zIndex: 1,\n          visibility: 'visible',\n          background: '#e4a4fd66',\n          position: 'fixed',\n          ...boxPosition,\n        }}\n      />\n    )\n  }, [containerRect, paneWithPreBox])\n}\n\nconst proportion = 0.5\nexport const PreBox = memo(PreBoxInner)\n\nfunction calcBoxPosition(\n  paneWithPreBox: {\n    pane: TilePaneEntity\n    into: Into\n  },\n  containerRect: RectReadOnly\n): PanePosition {\n  const { pane, into } = paneWithPreBox\n  const { top, left, width, height } = pane.position\n\n  switch (into) {\n    case 'center':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width,\n      }\n    case 'left':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'right':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left:\n          containerRect.left +\n          left * containerRect.width +\n          containerRect.width * width * (1 - proportion),\n        height: containerRect.height * height,\n        width: containerRect.width * width * proportion,\n      }\n    case 'top':\n      return {\n        top: containerRect.top + top * containerRect.height,\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n    case 'bottom':\n      return {\n        top:\n          containerRect.top +\n          top * containerRect.height +\n          containerRect.height * height * (1 - proportion),\n        left: containerRect.left + left * containerRect.width,\n        height: containerRect.height * height * proportion,\n        width: containerRect.width * width,\n      }\n  }\n}\n","import React, { memo, useContext, useMemo, useRef } from 'react'\nimport { ContainerContext, UpdateManuallyContext } from '../container/model'\nimport { PaneWithPreBox, TileLeafID } from '../util'\nimport { PreBox } from './components'\nimport { useDragAndPosition } from './hook'\n\nexport interface DraggableTitleProps {\n  id: TileLeafID\n  children?: React.ReactNode\n}\n\nconst DraggableTitleInner: React.FC<DraggableTitleProps> = ({\n  id,\n  children,\n}) => {\n  const paneWithPreBoxRef = useRef<PaneWithPreBox>()\n\n  const { paneLeaves } = useContext(ContainerContext)\n  const calcLayout = useContext(UpdateManuallyContext)\n  const pane = useMemo(() => paneLeaves.find((p) => p.children.includes(id)), [\n    id,\n    paneLeaves,\n  ])\n  const { position, bind } = useDragAndPosition(\n    paneWithPreBoxRef,\n    id,\n    pane,\n    calcLayout\n  )\n\n  const style = useMemo(\n    () =>\n      (position\n        ? {\n            visibility: 'visible',\n            position: 'fixed',\n            top: position[1],\n            left: position[0],\n            transform: 'translate(-50%,-50%)',\n            zIndex: 1,\n          }\n        : {}) as React.CSSProperties,\n    [position]\n  )\n  return useMemo(\n    () => (\n      <>\n        {position && <PreBox {...{ paneWithPreBoxRef, position }} />}\n        <div {...{ ...bind(), style }} style={style}>\n          {children}\n        </div>\n      </>\n    ),\n    [bind, children, position, style]\n  )\n}\n\nexport const DraggableTitle = memo(DraggableTitleInner)\n","import { useState } from 'react'\nimport { useGesture } from 'react-use-gesture'\nimport { Vector2 } from 'react-use-gesture/dist/types'\nimport { PaneWithPreBox, TileLeafID, TilePaneLeaf } from '../../..'\n\nexport function useDragAndPosition(\n  paneWithPreBoxRef: React.MutableRefObject<PaneWithPreBox | undefined>,\n  id: TileLeafID,\n  parentPane: TilePaneLeaf | undefined,\n  calcLayout: () => void\n) {\n  const [position, setPosition] = useState<Vector2>()\n\n  const bind = useGesture(\n    {\n      onDrag: ({ down, xy }) => {\n        const position = down ? xy : undefined\n        setPosition(position)\n      },\n      onDragStart: () => {\n        console.log(id)\n        parentPane && parentPane.startMovingTab(id)\n        calcLayout()\n      },\n      onDragEnd: () => {\n        if (!paneWithPreBoxRef.current) return\n        const { pane, into } = paneWithPreBoxRef.current\n        parentPane && parentPane.endMovingTab(id)\n        pane.insertLeaf(id, into)\n        calcLayout()\n      },\n    },\n    { drag: { threshold: 10 } }\n  )\n\n  return { bind, position }\n}\n","import React, { useState } from 'react'\nimport {\n  createTileLeaves,\n  TitlePaneInterface,\n  PaneContainer,\n  PaneProvider,\n  DraggableTitle,\n} from '../components'\nimport './App.css'\n\nfunction Arbutus() {\n  const [number, count] = useState(1)\n  return (\n    <div onClick={() => count((n) => n + 1)} className=\"pane\">\n      {number} 颗杨梅\n    </div>\n  )\n}\n\nfunction Apple() {\n  return <div className=\"pane\">苹果</div>\n}\n\nconst [nodeList, names] = createTileLeaves({\n  arbutus: <Arbutus />,\n  cherry: <div className=\"pane\">樱桃</div>,\n  apple: <Apple />,\n  banana: <div className=\"pane\">香蕉🍌</div>,\n  lemon: <div className=\"pane\">柠檬</div>,\n  mango: <div className=\"pane\">芒果</div>,\n  pomelo: <div className=\"pane\">柚子</div>,\n})\n\nconst rootPane: TitlePaneInterface = {\n  children: [\n    { children: [names.apple, names.arbutus] },\n    {\n      isRow: true,\n      grow: 2,\n      children: [\n        { children: names.cherry },\n        { children: names.lemon },\n        {\n          children: [\n            { children: names.mango, grow: 3 },\n            { children: names.pomelo },\n          ],\n        },\n      ],\n    },\n  ],\n}\n\nconst App: React.FC = () => {\n  return (\n    <PaneProvider tileLeaves={nodeList} rootPane={rootPane}>\n      <div className=\"App\">\n        <div style={{ height: 30 }} />\n        <div className=\"fence\">\n          <PaneContainer />\n        </div>\n      </div>\n      <DraggableTitle id={names.banana}>拖动这个🍌</DraggableTitle>\n    </PaneProvider>\n  )\n}\n\nexport default App\n","import { ReactChild } from 'react'\n\nexport type TileLeafID = string | number\n\nexport type TileLeaf<T = unknown> = {\n  id: TileLeafID\n  node: ReactChild\n} & T\n\nexport function createTileLeaves<T extends Record<TileLeafID, ReactChild>>(\n  obj: T\n): [TileLeaf[], Record<keyof T, keyof T>] {\n  const map = {} as Record<TileLeafID, keyof T>\n  const list: TileLeaf[] = []\n  Object.keys(obj).forEach((key) => {\n    map[key] = key\n    list.push({\n      id: key,\n      node: obj[key],\n    })\n  })\n  return [list, map as Record<keyof T, keyof T>]\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport reportWebVitals from './common/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}